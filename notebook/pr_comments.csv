number,pr_author,date,author,body
14748,JasonGross,2021-08-05 22:01:30,coqbot-app,"Hey, I have detected that there were CI failures at commit 77e3367 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 3fd62a8 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-color, ci-hott, ci-mathcomp, ci-mtac2, ci-relation_algebra, ci-rewriter, ci-unimath."
14748,JasonGross,2021-08-14 13:41:48,JasonGross,@coqbot ci minimize ci-hott
14748,JasonGross,2021-08-14 13:41:49,coqbot-app,I am now running minimization at commit 77e3367 on requested target ci-hott. I'll come back to you with the results once it's done.
14748,JasonGross,2021-08-14 13:45:05,coqbot-app,Error: Could not minimize file  (from ci-hott) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.8MiB file on GitHub Actions Artifacts under build.log)\nng: _build_ci/hott/theories/Spaces/No.vok  \n  inflating: _build_ci/hott/theories/Spaces/No.vos  \n  inflating: _build_ci/hott/theories/Spaces/No/.Addition.aux  \n  inflating: _build_ci/hott/theories/Spaces/No/.Core.aux  \n  inflating: _build_ci/hott/theories/Spaces/No/.Negation.aux  \n  inflating: _build_ci/hott/theories/Spaces/
14748,JasonGross,2021-08-14 15:41:17,coqbot-app,"Hey, I have detected that there were CI failures at commit 011dce7 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1a0460b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-category_theory, ci-color, ci-hott, ci-mathcomp, ci-mtac2, ci-relation_algebra, ci-rewriter, ci-unimath."
14748,JasonGross,2021-08-14 15:58:34,JasonGross,@coqbot ci minimize ci-hott
14748,JasonGross,2021-08-14 15:58:35,coqbot-app,I am now running minimization at commit 011dce7 on requested target ci-hott. I'll come back to you with the results once it's done.
14748,JasonGross,2021-08-14 17:54:08,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Homotopy/ClassifyingSpace.v (from ci-hott) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hott/theories"" ""HoTT"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_bui"
14748,JasonGross,2021-10-12 01:13:39,JasonGross,@coqbot ci minimize ci-hott
14748,JasonGross,2021-10-12 01:13:45,coqbot-app,I am now running minimization at commit 011dce7 on requested target ci-hott. I'll come back to you with the results once it's done.
14748,JasonGross,2021-10-12 01:43:38,JasonGross,@coqbot ci minimize ci-hott
14748,JasonGross,2021-10-12 01:43:40,coqbot-app,I am now running minimization at commit 011dce7 on requested target ci-hott. I'll come back to you with the results once it's done.
14748,JasonGross,2021-10-12 07:07:13,Zimmi48,@coqbot ci minimize ci-hott
14748,JasonGross,2021-10-12 07:07:15,coqbot-app,I am now running minimization at commit 011dce7 on requested target ci-hott. I'll come back to you with the results once it's done.
14748,JasonGross,2021-10-12 07:10:39,coqbot-app,Error: Could not minimize file  (from ci-hott) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.8MiB file on GitHub Actions Artifacts under build.log)\n\n  inflating: _build_ci/hott/theories/Spaces/No.vok  \n  inflating: _build_ci/hott/theories/Spaces/No.vos  \n  inflating: _build_ci/hott/theories/Spaces/No/.Addition.aux  \n  inflating: _build_ci/hott/theories/Spaces/No/.Core.aux  \n  inflating: _build_ci/hott/theories/Spaces/No/.Negation.aux  \n  inflating: _build_ci/hott/theori
14748,JasonGross,2021-10-12 07:15:12,Zimmi48,The builds are probably too old for the artifacts to be still there.
14748,JasonGross,2021-10-12 09:10:02,coqbot-app,"Hey, I have detected that there were CI failures at commit 011dce7 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1a0460b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-category_theory, ci-color, ci-hott, ci-mathcomp, ci-mtac2, ci-relation_algebra, ci-rewriter, ci-unimath."
14748,JasonGross,2021-10-12 09:24:16,Zimmi48,@coqbot ci minimize ci-hott
14748,JasonGross,2021-10-12 09:24:18,coqbot-app,I am now running minimization at commit 011dce7 on requested target ci-hott. I'll come back to you with the results once it's done.
14748,JasonGross,2021-10-12 09:28:20,coqbot-app,Error: Could not minimize file  (from ci-hott) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.8MiB file on GitHub Actions Artifacts under build.log)\n\n  inflating: _build_ci/hott/theories/Spaces/No.vok  \n  inflating: _build_ci/hott/theories/Spaces/No.vos  \n  inflating: _build_ci/hott/theories/Spaces/No/.Addition.aux  \n  inflating: _build_ci/hott/theories/Spaces/No/.Core.aux  \n  inflating: _build_ci/hott/theories/Spaces/No/.Negation.aux  \n  inflating: _build_ci/hott/theori
14748,JasonGross,2021-10-12 09:49:54,Zimmi48,"The error comes from the fact that the base sha is too old. We might have a problem here given that this reveals an inconsistency between the base commit as obtained from the GitHub API by coqbot (1a0460b) and the actual base commit with which the PR head was merged and built (0354fc3). I don't know if this problem can also occur outside the close / reopen case, but this is conceivable. Maybe we should store the base commit in the GitHub Checks tab, along with other information that we rely on."
14741,JasonGross,2021-08-04 04:40:06,JasonGross,@coqbot ci minimize ci-fiat_crypto
14741,JasonGross,2021-08-04 04:40:07,coqbot-app,"I was unable to minimize any of the CI targets that you requested.\nHowever, you may want to try again once the pipeline for the head commit (2827467) finishes.\nlibrary:ci-fiat_crypto could not be minimized (Job library:ci-fiat_crypto is still in progress.)"
14741,JasonGross,2021-08-04 07:10:36,coqbot-app,"Hey, I have detected that there were CI failures at commit 2827467 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a41c99a succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-fiat_crypto."
14741,JasonGross,2021-08-04 10:21:26,JasonGross,@coqbot ci minimize  ci-fiat_crypto
14741,JasonGross,2021-08-04 10:21:32,coqbot-app,I am now running minimization at commit 2827467 on requested target ci-fiat_crypto. I'll come back to you with the results once it's done.
14741,JasonGross,2021-08-04 15:38:28,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto/src/Curves/Weierstrass/Projective.v (from ci-fiat_crypto) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 36KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pa"
14741,JasonGross,2021-08-04 16:43:38,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto/src/Curves/Weierstrass/Projective.v (from ci-fiat_crypto) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 34KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+variable-collision,+omega-is-deprecated,+deprecat"
14741,JasonGross,2021-09-13 02:13:27,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
14741,JasonGross,2021-10-13 02:16:38,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
14579,JasonGross,2021-06-29 14:51:35,JasonGross,Now taking a look at #13107
14579,JasonGross,2021-06-29 15:28:53,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14579,JasonGross,2021-06-29 21:55:39,JasonGross,@coqbot ci minimize ci-cross_crypto
14579,JasonGross,2021-06-29 21:55:43,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-cross_crypto. I'll come back to you with the results once it's done.
14579,JasonGross,2021-06-29 21:59:05,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/cross_crypto/src/Minimalistic.v (from ci-cross_crypto) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 122KiB file on GitHub Actions Artifacts under bug.v)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.Logic.Eqdep_d"
14579,JasonGross,2021-07-01 22:21:19,JasonGross,@coqbot ci minimize ci-coq_performance_tests
14579,JasonGross,2021-07-01 22:21:23,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-01 22:26:10,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq."
14579,JasonGross,2021-07-02 00:17:42,JasonGross,@coqbot CI minimize  ci-bedrock2 ci-tlc
14579,JasonGross,2021-07-02 00:17:48,coqbot-app,"I am now running minimization at commit c6473ba on requested targets ci-bedrock2, ci-tlc. I'll come back to you with the results once it's done."
14579,JasonGross,2021-07-02 00:32:23,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil/Map/Properties.v (from ci-bedrock2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil"" ""coqutil"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-fail"
14579,JasonGross,2021-07-02 01:14:30,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/tlc/src/LibFix.v (from ci-tlc) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-implicit-core-hint-db,-omega-is-deprecated"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/tlc/src"" ""TLC"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq"
14579,JasonGross,2021-07-02 03:11:50,JasonGross,@coqbot CI minimize  ci-bedrock2
14579,JasonGross,2021-07-02 03:11:58,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-bedrock2. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-02 03:26:28,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil/Map/Properties.v (from ci-bedrock2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil"" ""coqutil"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-fail"
14579,JasonGross,2021-07-02 14:10:44,JasonGross,"@coqbot resume ci minimize ci-bedrock2\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil"" ""coqutil"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-top"" ""Properties"" ""-async-proofs-tac-j"" ""1"" ""-native-compiler"" ""no"") -*- *)\n(* File reduced by coq-bug-finder from original input, then f"
14579,JasonGross,2021-07-02 14:10:53,coqbot-app,I am now resuming minimization at commit c6473ba on requested target ci-bedrock2. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-02 14:19:49,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil/Map/Properties.v (from ci-bedrock2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil"" ""coqutil"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-fail"
14579,JasonGross,2021-07-02 18:45:41,JasonGross,@coqbot ci minimize ci-coq_performance_tests
14579,JasonGross,2021-07-02 18:45:46,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-02 18:51:46,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq."
14579,JasonGross,2021-07-02 20:23:43,JasonGross,@coqbot ci minimizer ci-coq_performance_tests
14579,JasonGross,2021-07-02 20:23:46,coqbot-app,"I am now running minimization at commit c6473ba on requested targets r, ci-coq_performance_tests. I'll come back to you with the results once it's done."
14579,JasonGross,2021-07-02 20:29:48,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq."
14579,JasonGross,2021-07-02 21:59:30,JasonGross,@coqbot ci minimize ci-coq_performance_tests
14579,JasonGross,2021-07-02 21:59:34,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-02 22:05:33,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq."
14579,JasonGross,2021-07-02 22:18:52,JasonGross,@coqbot ci minimize ci-coq_performance_tests
14579,JasonGross,2021-07-02 22:18:55,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-02 22:24:57,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq."
14579,JasonGross,2021-07-02 22:29:53,JasonGross,@coqbot ci minimize ci-coq_performance_tests
14579,JasonGross,2021-07-02 22:29:56,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-02 22:33:59,JasonGross,@coqbot ci minimize ci-coq_performance_tests
14579,JasonGross,2021-07-02 22:34:03,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-02 22:35:03,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq."
14579,JasonGross,2021-07-02 22:39:29,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq."
14579,JasonGross,2021-07-02 23:56:20,JasonGross,@coqbot ci minimize ci-coq_performance_tests
14579,JasonGross,2021-07-02 23:56:23,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-03 00:01:19,coqbot-app,"Error: Could not minimize file /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 3.2MiB file on GitHub Actions Artifacts under build.log)\n#[export] depending on your choice. For example:\n""#[export] Hint Rewrite foo : bar.""\n[deprecated-hint-rewrite-without-locality,deprecated]\nFile ""/github/workspace/builds/coq/coq-failing/_bui"
14579,JasonGross,2021-07-03 00:03:55,JasonGross,@coqbot ci minimize ci-coq_performance_tests
14579,JasonGross,2021-07-03 00:03:58,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-03 00:07:32,JasonGross,@coqbot ci minimize ci-coq_performance_tests
14579,JasonGross,2021-07-03 00:07:35,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-03 00:10:23,coqbot-app,"Error: Could not minimize file /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 3.2MiB file on GitHub Actions Artifacts under build.log)\n#[export] depending on your choice. For example:\n""#[export] Hint Rewrite foo : bar.""\n[deprecated-hint-rewrite-without-locality,deprecated]\nFile ""/github/workspace/builds/coq/coq-failing/_bui"
14579,JasonGross,2021-07-03 00:13:29,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq."
14579,JasonGross,2021-07-03 00:48:13,JasonGross,@coqbot ci minimize ci-coq_performance_tests
14579,JasonGross,2021-07-03 00:48:16,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-03 00:54:34,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq."
14579,JasonGross,2021-07-03 00:59:58,JasonGross,I am now running minimization at commit c6473ba on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-03 01:00:06,JasonGross,@coqbot ci minimize ci-coq_performance_tests
14929,herbelin,2021-09-24 11:44:17,coqbot-app,"Hey, I have detected that there were CI failures at commit 1f0bf54 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 12f4efd succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-hott."
14864,jfehrle,2021-09-08 17:21:00,coqbot-app,"Hey, I have detected that there were CI failures at commit 6a5d38e without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit c6ab549 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following targets (which I do not suggest minimizing):\n\nci-fiat_crypto (because base job at c6ab549 failed)\nci-fiat_crypto_legacy (b"
14864,jfehrle,2021-10-15 07:11:49,jfehrle,The images:
14805,herbelin,2021-08-24 21:38:51,coqbot-app,"Hey, I have detected that there were CI failures at commit a2c1557 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1c35001 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_parsers."
14805,herbelin,2021-08-25 10:42:24,herbelin,"Surprisingly, there is only one real failure, though a legitimate one. It boils down to:\nRequire Import RelationClasses Morphisms.\nCoercion is_true : bool >-> Sortclass.\nSection S.\n  Context {T} (beq : T -> T -> bool).\n  Context (beq_Reflexive : Reflexive beq).\n  Lemma test x : beq x x.\n  rewrite (@reflexivity T ?[R] ?[r] x : beq x x).\n\nwhere solve_simple_eqn resolves ?R := fun _ x1 : T => beq x1 x1 = true while type classes inference would resolve ?r := beq_Reflexive, leading to the (more expec"
14359,herbelin,2021-05-21 18:35:53,coqbot-app,"Hey, I have detected that there were CI failures at commit ca61518 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 12ca292 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-vst."
14359,herbelin,2021-05-23 12:49:16,herbelin,"It looks like I was redoing #798 and re-introducing the propositional extensionality issue.\nI made a new proposal which instantiates the predicate only with the constructed part of its indices.\nIt fills non-constructor terms with a dummy (generally ill-typed) Prop which is a bit ugly. A possible alternative would be to add an argument x : forall A, A to the signature and, to compute the type T of the return and to use x T. Is it worth the detour."
14736,olaure01,2021-08-02 12:59:57,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14736,olaure01,2021-08-02 13:01:13,maximedenes,"Thanks for the contribution! I feel like some of these changes my need to be re-assessed. For example, proj2 (Nat.succ_lt_mono _ _) does not exactly seem like an improvement over lt_S_n to me."
14736,olaure01,2021-08-02 13:52:12,olaure01,"I feel like some of these changes my need to be re-assessed. For example, proj2 (Nat.succ_lt_mono _ _) does not exactly seem like an improvement over lt_S_n to me.\n\nI see 3 points here:\n\nnaming: is lt_S_n a better name than succ_lt_mono/Nat.succ_lt_mono? or at least should we look for something uniform?\nequivalences: many statements in Nat are given as equivalences. Often apply -> _ or apply <- _ allows to use the underlying implications but sometimes we have to rely on projections. Should we de"
14736,olaure01,2021-08-02 13:57:05,maximedenes,My point was simply that it's probably better to stabilize and document answers to these questions before propagating the changes.
14736,olaure01,2021-08-02 14:00:19,olaure01,My point was simply that it's probably better to stabilize and document answers to these questions before propagating the changes.\n\nThis is the reason why I made this a Draft PR. Main goals are: testing CI and waiting for comments (after the first round of #11356).
14736,olaure01,2021-08-02 20:20:57,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14736,olaure01,2021-08-03 12:38:53,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14736,olaure01,2021-08-03 17:33:59,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14736,olaure01,2021-08-04 09:00:11,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14736,olaure01,2021-08-04 09:48:48,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14736,olaure01,2021-08-04 20:39:44,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14736,olaure01,2021-08-05 09:36:49,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14736,olaure01,2021-08-06 11:26:07,coqbot-app,"Hey, I have detected that there were CI failures at commit 8c38ead without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 3fd62a8 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-aac_tactics."
14736,olaure01,2021-08-06 11:29:45,olaure01,"Almost everything now works on CI.\nI am stuck with the 3 remaining failures:\n\ncross_crypto seems to run out of memory\nconcerning aac_tactics and elpi, could it be that deprecation warnings lead to compilation errors?\n\nThe use of statements from obsolete files should now generate deprecation warnings. As stated by @maximedenes, this requires to address the question of which, where and under what names should such statements from deprecated files be integrated in stdlib (mostly when they are not a"
14736,olaure01,2021-09-07 14:58:28,Zimmi48,"concerning aac_tactics and elpi, could it be that deprecation warnings lead to compilation errors?\n\nAbsolutely"
14736,olaure01,2021-10-08 02:16:35,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
14996,herbelin,2021-10-06 15:59:51,Alizter,Will merge when CI is happy
14996,herbelin,2021-10-06 17:36:23,coqbot-app,"Hey, I have detected that there were CI failures at commit ff8a6f5 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 2b687c1 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-category_theory, ci-color, ci-compcert, ci-corn, ci-cross_crypto, ci-fiat_crypto, ci-metacoq, ci-sf, ci-vst."
14996,herbelin,2021-10-06 17:44:35,coqbot-app,"Hey, I have detected that there were CI failures at commit ff8a6f5 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 2b687c1 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-category_theory, ci-color, ci-compcert, ci-corn, ci-cross_crypto, ci-fiat_crypto, ci-metacoq, ci-sf, ci-vst."
14996,herbelin,2021-10-06 21:28:54,Alizter,@coqbot merge now
14314,gares,2021-05-12 20:27:59,robbertkrebbers,"Awesome, thanks for fixing this bug!\nThis means we can finally get rid of Global Set SsrOldRewriteGoalsOrder in Iris :)"
14314,gares,2021-05-12 20:41:16,gares,This PR could use some help for the overlays / test suite updates given my limited time in the upcoming weeks.\nCC @coq/ssreflect-maintainers @SkySkimmer @erikmd
14314,gares,2021-05-12 21:13:07,ejgallego,"This PR could use some help for the overlays / test suite updates given my limited time in the upcoming weeks.\n\n@gares wouln't the overlays in this case not be backwards compatible?\nIf so, a flag may be required, I think."
14314,gares,2021-05-12 21:39:28,gares,"The situation is not that bad, the test suite has one failure related to ssr under, to be adapted.\nThe fix is about adding ; last first where things break, so it won't be backward compatible. I would avoid another flag, we have to see the breakage extent for metacoq and perennial..."
14314,gares,2021-05-12 22:41:17,ejgallego,"The situation is not that bad, the test suite has one failure related to ssr under, to be adapted.\nThe fix is about adding ; last first where things break, so it won't be backward compatible. I would avoid another flag, we have to see the breakage extent for metacoq and perennial...\n\nWell there are only 2 developments, so indeed I think we can survive it, but it will take a bit more work as I think for this case we must use some hack to make the code work in 8.13 too for a while.\nBut indeed I'm "
14314,gares,2021-05-12 22:42:13,ejgallego,"Of course I'm assuming here than the cost of having the flag for one release is small enough, I understand so but not expert in this part of the code."
14314,gares,2021-05-31 13:06:12,SkySkimmer,I don't understand the test suite error enough to help.
14314,gares,2021-06-02 15:38:24,silene,"This requires various overlays (potentially not backward compatible), so tentatively postponing to 8.15."
14314,gares,2021-07-21 14:47:14,ppedrot,@gares are you slightly more available now or may I start writing the overlays?
14314,gares,2021-07-21 16:35:37,gares,Please go ahead
14314,gares,2021-10-14 11:43:49,coqbot-app,"Hey, I have detected that there were CI failures at commit 2046ad3 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 85c065e succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14314,gares,2021-10-18 19:18:51,gares,ping @CohenCyril @maximedenes
14314,gares,2021-10-19 09:29:18,gares,"To be fair, in a previous message @ejgallego was asking for a backward compat flag which I did not implement. Impacted projects have to use rewrite with both strict and setoid equalities, otherwise the OldSSRRewriteOrder flag already does what he asks. I'm not very keen in adding a OldSSRRewriteOrderOnlyForSetoids flag, but it can surely be done.\nAccording to our CI only one development was impacted, Metacoq, and in a very minor way. I did write a patch which should work in both Coq versions, bu"
15048,SkySkimmer,2021-10-19 10:41:33,SkySkimmer,Bench https://gitlab.com/coq/coq/-/jobs/1692631703
15048,SkySkimmer,2021-10-19 14:15:59,SkySkimmer,@coqbot ci minimize hott
15048,SkySkimmer,2021-10-19 14:16:00,coqbot-app,"I was unable to minimize any of the CI targets that you requested.\nHowever, you may want to try again once the pipeline for the head commit (e9fdfae) finishes.\nThe requested target 'hott' could not be found among the jobs .\nSome jobs may have been missed because the pipeline for the head commit (e9fdfae) has not yet finished."
15048,SkySkimmer,2021-10-19 14:16:41,SkySkimmer,@coqbot ci minimize ci-hott
15048,SkySkimmer,2021-10-19 14:16:47,coqbot-app,I am now running minimization at commit e9fdfae on requested target ci-hott. I'll come back to you with the results once it's done.
15048,SkySkimmer,2021-10-19 14:54:54,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Categories/Comma/Core.v (from ci-hott) (full log on GitHub Actions)\nWe are collecting data on the user experience of the Coq Bug Minimizer.\nIf you haven't already filled the survey for this PR, please fill out our short survey!\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/gi"
15048,SkySkimmer,2021-10-19 15:59:15,SkySkimmer,@coqbot ci minimize ci-hott ci-relation_algebra
15048,SkySkimmer,2021-10-19 15:59:17,coqbot-app,I am now running minimization at commit ab1d8de on requested target ci-hott. I'll come back to you with the results once it's done.\nThe requested target 'ci-relation_algebra' could not be found among the jobs .\nSome jobs may have been missed because the pipeline for the head commit (ab1d8de) has not yet finished.
15048,SkySkimmer,2021-10-19 15:59:31,SkySkimmer,@coqbot ci minimize ci-category_theory
15048,SkySkimmer,2021-10-19 15:59:34,coqbot-app,I am now running minimization at commit ab1d8de on requested target ci-category_theory. I'll come back to you with the results once it's done.
15048,SkySkimmer,2021-10-19 16:10:08,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/category_theory/Theory/Isomorphism.v (from ci-category_theory) (full log on GitHub Actions)\nWe are collecting data on the user experience of the Coq Bug Minimizer.\nIf you haven't already filled the survey for this PR, please fill out our short survey!\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/bui"
15048,SkySkimmer,2021-10-19 16:12:59,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/WildCat/Equiv.v (from ci-hott) (full log on GitHub Actions)\nWe are collecting data on the user experience of the Coq Bug Minimizer.\nIf you haven't already filled the survey for this PR, please fill out our short survey!\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/wor"
14916,SkySkimmer,2021-09-22 09:12:05,ppedrot,Will merge when CI finishes.
14916,SkySkimmer,2021-09-22 12:47:56,coqbot-app,"Hey, I have detected that there were CI failures at commit d77b7cc without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 564fbc0 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do not suggest minimizing): ci-elpi (because base job at 564fbc0 failed)"
14916,SkySkimmer,2021-09-22 12:58:11,ppedrot,elpi looks like it's not happy...
14916,SkySkimmer,2021-09-22 13:14:13,SkySkimmer,Same in master https://gitlab.com/coq/coq/-/jobs/1612557142n waiting for LPCIC/coq-elpi#289
14916,SkySkimmer,2021-09-22 13:39:50,ppedrot,"OK. Rewriter failure is unrelated, and there is virtually no chance this PR affects it anyway. Let's merge."
14916,SkySkimmer,2021-09-22 13:40:58,ppedrot,@coqbot merge now
14492,herbelin,2021-06-12 14:16:14,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14492,herbelin,2021-06-12 14:40:47,JasonGross,"This is cool!  Probably there should be a flag for the default mode, to be set in the relevant Compat file"
14492,herbelin,2021-06-12 14:44:40,herbelin,"The Cannot mask the absolute name ""HoTT.Categories.Category.Build_Category""! failure in HoTT follows this pattern:\nModule B.\n#[namespace=both]\nInductive A := C.\nEnd B.\nModule A.\nInclude B. (* defines A.C and C in A *)\nEnd A.\nInclude A.\n(* wants to include the constructor A.C from module A which overrides full name A.C:\nA.C  mean both:\n- the flat constructor name C of A in module A\n- the proper constructor name A.C in the namespace for the type A, at toplevel\n*)\n\nI guess this is expected and the "
14492,herbelin,2021-06-12 14:50:27,coqbot-app,"Hey, I have detected that there were CI failures at commit 98b835d without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit cfb1787 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-fiat_crypto_legacy, ci-hott."
14492,herbelin,2021-06-12 21:32:23,JasonGross,"I guess this is expected and the both mode should be deactivated here.\n\nIn fact I suspect this was my attempt to kludge the both mode, and in fact once a version of Coq with this PR is released we should switch to just using the both mode."
14492,herbelin,2021-06-12 21:33:13,JasonGross,@coqbot CI minimize
14492,herbelin,2021-06-12 21:33:20,coqbot-app,"I have initiated minimization at commit 98b835d for the suggested targets ci-fiat_crypto_legacy, ci-hott as requested."
14492,herbelin,2021-06-12 21:38:57,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Categories.v (from ci-hott) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(** * Category Theory *)\n(** To get all of the category theory library in scope with the proper qualified names, you should [Require Import Categories.] or [Require Import HoTT.Categories.] *)\n\n(** First we give modules to all of the kinds of category theory constructions (corresponding to directo"
14492,herbelin,2021-06-12 21:45:12,SkySkimmer,"I initially didn't realize that both mode makes both following About succeed\nModule M.\nInductive Ind := C.\nEnd M.\nAbout M.C.\nAbout M.Ind.C.\n(it's not in the added test btw)\nIs that intended behaviour?\nIt may be more compatible with include to have just M.Ind.C succeed, but when M is imported also import the Ind namespace. Somehow this would mean both == Export"
14492,herbelin,2021-06-13 00:41:38,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto_legacy/src/Experiments/SimplyTypedArithmetic.v (from ci-fiat_crypto_legacy) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-notation-overridden"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto_legacy/src"" ""Crypto"" ""-R"" ""/github/workspace/builds/coq/coq-faili"
14492,herbelin,2021-06-13 02:00:21,JasonGross,@herbelin seems like the fcl issue is about the interaction with Set Asymmetric Patterns?
14492,herbelin,2021-06-13 02:01:48,JasonGross,"Ah, no, it seems to be about a change in the way names are resolved given the extra new names"
14492,herbelin,2021-06-13 02:02:48,JasonGross,I think a backwards compatible overlay will just qualify the constructors more
14492,herbelin,2021-06-13 10:42:32,ppedrot,@herbelin May I suggest that we should wait for the namespace feature to land before trying to make this work?
14492,herbelin,2021-06-13 11:10:50,herbelin,"@ppedrot: I would say that this PR is complementary to the namespace feature. When namespaces are made available, we shall need a way to tell the namespace policy we want to use for inductive types. This is what this PR is exploring.\nAlso, we need to start somewhere and if this PR can help to make namespaces become more concrete both in terms of design and in terms of implementation details, that would be nice. How do you concretely suggest to proceed otherwise?"
14492,herbelin,2021-06-13 11:20:02,herbelin,"@SkySkimmer:\n\nIt may be more compatible with include to have just M.Ind.C succeed, but when M is imported also import the Ind namespace. Somehow this would mean both == Export\n\nI think you're right. Note however that no wrapping module is introduced in the PR. As it is, it is only a play with the nametab, and, for instance neither Import foo nor Export foo are available. This is actually related to @ppedrot's question: if ever namespaces are implemented with a specific structure rather than reus"
14492,herbelin,2021-06-14 11:02:10,Zimmi48,This is cool! But what about auto-generated inductive principles? Shouldn't they also belong to the new namespace?
14492,herbelin,2021-06-23 15:16:26,herbelin,"But what about auto-generated inductive principles?\n\nThis is disputable of course, but this is what I have in mind, yes."
14492,herbelin,2021-08-26 12:09:53,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
14492,herbelin,2021-08-29 15:19:28,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14492,herbelin,2021-08-29 16:04:47,coqbot-app,"Hey, I have detected that there were CI failures at commit 9ed154c without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit f706680 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-fiat_crypto_legacy, ci-hott."
14492,herbelin,2021-10-08 02:16:34,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
14492,herbelin,2021-10-08 08:54:05,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14492,herbelin,2021-10-08 09:40:35,coqbot-app,"Hey, I have detected that there were CI failures at commit 1e0a853 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit cf40849 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-fiat_crypto_legacy, ci-hott."
14937,ppedrot,2021-09-25 13:07:50,coqbot-app,"Hey, I have detected that there were CI failures at commit d74486a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 266eef2 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-equations, ci-fiat_parsers, ci-rewriter."
14937,ppedrot,2021-09-27 09:35:21,ppedrot,"The CI failures seem to be indirectly caused by anomalies in printing constants, because they're not in the nametab. I wonder whether we shouldn't have a more robust way to display names to the user when they're not globally declared."
14854,SkySkimmer,2021-09-07 16:13:27,coqbot-app,"Hey, I have detected that there were CI failures at commit 5590599 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit b027387 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do not suggest minimizing): ci-mtac2 (because base job at b027387 failed)"
14854,SkySkimmer,2021-09-07 16:59:08,ejgallego,@coqbot: merge now
14786,JasonGross,2021-08-14 22:12:25,Alizter,@coqbot merge now
14786,JasonGross,2021-08-14 22:12:26,coqbot-app,@Alizter: You can't merge the PR because you're not among the assignees and no milestone is set.
14786,JasonGross,2021-08-14 22:13:18,Alizter,@coqbot merge now
14839,SkySkimmer,2021-09-02 17:38:22,coqbot-app,"Hey, I have detected that there were CI failures at commit c0e7cdd without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 9d18eff succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do not suggest minimizing): ci-category_theory (because base job at 9d18eff failed)\nHowever, you may want "
14839,SkySkimmer,2021-09-02 19:20:01,ppedrot,"It's a net progress, but it does not seem to be enough..."
14839,SkySkimmer,2021-09-02 20:37:24,Zimmi48,"As discussed on Zulip, there's also an issue that's not on Coq's side."
14839,SkySkimmer,2021-09-02 20:38:27,Zimmi48,So IMHO it's still worth merging as is.
14839,SkySkimmer,2021-09-03 10:08:31,Zimmi48,"@jwiegley said on Zulip that he's disabled the parts that are not building with master, so I'm restarting the job to check that everything is in order now."
14839,SkySkimmer,2021-09-03 12:38:46,ppedrot,Looks like it worked. Can we get a quick merge please?
14839,SkySkimmer,2021-09-03 12:43:20,Alizter,@coqbot merge now
14839,SkySkimmer,2021-09-03 12:43:21,coqbot-app,@Alizter: You can't merge the PR because there is no kind: label and no milestone is set.
14839,SkySkimmer,2021-09-03 12:43:36,Alizter,@coqbot merge now
14839,SkySkimmer,2021-09-03 12:43:36,coqbot-app,@Alizter: You can't merge the PR because there is no kind: label.
14839,SkySkimmer,2021-09-03 12:44:28,Alizter,@coqbot merge now
14839,SkySkimmer,2021-09-03 12:44:29,coqbot-app,@Alizter: You can't merge the PR because it hasn't been approved yet.
14839,SkySkimmer,2021-09-03 12:44:53,Alizter,@coqbot merge now\nplease
14839,SkySkimmer,2021-09-03 12:46:07,ppedrot,You can get much farther with a kind word and a gun than you can with a kind word alone. ☠️
14839,SkySkimmer,2021-09-03 12:47:34,Alizter,@Zimmi48 Is it possible for coqbot to complain about all the missing things all at once in order to avoid the repetition?
14839,SkySkimmer,2021-09-03 13:05:49,Zimmi48,"@Alizter You will notice that the first message contained two pieces of information, but you probably read too fast and saw only one:\n\nYou can't merge the PR because there is no kind: label and no milestone is set.\n\nThe reason why it also doesn't include the info on the missing review is because at this point in the process, it hasn't fetched it yet, cf.: https://github.com/coq/bot/blob/a48d26947e0ce679529d1308a40b06cb05ea3e1f/src/actions.ml#L1650-L1681\nWe could change the process to always fetc"
14839,SkySkimmer,2021-09-03 15:10:32,Alizter,It might be helpful to write the information as a list:\n\nNo kind: label\nNo milestone\n\nSo that impatient users such as myself can quickly parse the message.
14839,SkySkimmer,2021-09-03 15:54:34,Zimmi48,"Sounds good, please open either a PR or an issue on the bot repository to track that."
14828,herbelin,2021-08-31 20:47:23,coqbot-app,"Hey, I have detected that there were CI failures at commit 7a38a88 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14828,herbelin,2021-09-01 12:41:39,coqbot-app,"Hey, I have detected that there were CI failures at commit 7a38a88 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14828,herbelin,2021-09-01 13:07:08,gares,CI failure seems unrelated\n@coqbot merge now
13071,maximedenes,2020-09-27 08:44:57,RalfJung,"I entirely lost context, so I am not sure what should be tested here. There are a couple of testcases in #6583 but I assume you tried those?\nI guess we could change the refine mentioned here back into an apply and see what happens? Not sure if that makes any sense... @robbertkrebbers might know better."
13071,maximedenes,2020-09-27 09:19:13,RalfJung,"Even with this branch, if I change the refine back to an apply I get build failures in Iris:\nFile ""/home/r/Dokumente/Unisachen/iris/coq.2/tests/proofmode_iris.v"", line 238, characters 17-35:\nError:\nUnable to satisfy the following constraints:\nIn environment:\nΣ : gFunctors\ninvG0 : invG Σ\ncinvG0 : cinvG Σ\nna_invG0 : na_invG Σ\nA : cmraT\ninG0 : inG Σ A\nγ : gname\nx, x' : A\nH : x' ≼ x\n\n?Hin : ""inG ?Σ ?A""\n\nHowever, I do not know if this is the right way to test that change."
13071,maximedenes,2020-09-28 14:06:07,robbertkrebbers,"This is very interesting. Thanks for working on this @maximedenes.\nSo, just to get clear what you've done: This MR defines a new tactic resolve_tc that can be used to implement step (3) in #6583 (comment) ?"
13071,maximedenes,2020-09-28 14:11:41,robbertkrebbers,"@RalfJung In #6583 (comment) I pointed out that Iris actually relies on a weird behavior of the legacy apply tactic. This made it impossible to switch to refine variants for some parts of the proof mode code. (And thus, that would make it impossible to port the proof mode to a hypothetical new version of Coq that uses the new unification algorithm by default).\nThe MR seems to provide a way that makes it possible to implement the proof mode solely using refine, so without relying on the legacy ap"
13071,maximedenes,2020-09-28 14:27:42,RalfJung,"Oh I see, I misunderstood. This does not change the behavior of existing tactics but adds a new tactic that would be useful for us.\nI'll have to leave testing to Robbert then. :)"
13071,maximedenes,2020-09-28 15:15:35,maximedenes,"So, just to get clear what you've done: This MR defines a new tactic resolve_tc that can be used to implement step (3) in #6583 (comment) ?\n\nYes, at least that's what I tried to do ;)\n\nOh I see, I misunderstood. This does not change the behavior of existing tactics but adds a new tactic that would be useful for us.\n\nSorry, I should have put more context. The problem is that Iris is depending on the bug that you'd like us to fix ;) Hopefully, the tactic defined in this PR should be enough, so tha"
13071,maximedenes,2020-09-28 15:17:34,maximedenes,"@robbertkrebbers if your testing shows that this tactic suits your needs, I'll document it and polish the patch. Feel free to suggest a better name for the tactic as well, or any other improvements."
13071,maximedenes,2020-10-07 10:11:03,robbertkrebbers,"@maximedenes I have been experimenting with this, and while the tactic seems helpful, I cannot quite use it for the code in the current state. I have code like:\napply lemma;\n  [create term t with evars\n  |do other stuff];\n(* now, after ""do other stuff"" is done, I want to solve all remaining\n   evars in t that have not been solved by ""do other stuff"" *)\n\nThe problem is that the scope of t is restricted, and I cannot refer to it after the apply.\nI'm trying to rewrite the code to avoid this, but it"
13071,maximedenes,2020-10-07 10:18:21,ppedrot,"It's fairly easy to add a continuation to this tactic though, so that it allows to implement your scope-building pattern."
13071,maximedenes,2020-10-07 10:25:15,maximedenes,"It's fairly easy to add a continuation to this tactic though, so that it allows to implement your scope-building pattern.\n\n@ppedrot if you have a minute, would you mind adding it to the PR? It is an experiment anyway. Thanks!"
13071,maximedenes,2020-10-07 10:30:49,robbertkrebbers,"PS: Another fun problem in the code in #13071 (comment):\nIt is often the case that ""do other stuff"" solves all goals, and then resolve_tc is not called. I managed to hack around that by adding a dummy premise True to lemma."
13071,maximedenes,2020-10-07 10:31:14,robbertkrebbers,"It's fairly easy to add a continuation to this tactic though, so that it allows to implement your scope-building pattern.\n\n@ppedrot if you have a minute, would you mind adding it to the PR? It is an experiment anyway. Thanks!\n\nThat would be great indeed, would be curious to see how that looks like and if it helps."
13071,maximedenes,2020-10-12 09:31:42,maximedenes,"The problem is that the scope of t is restricted, and I cannot refer to it after the apply.\n\n@robbertkrebbers do you mind elaborating? In #6583, you wrote that the idiom used in Iris was:\nTactic Notation ""foo"" uconstr(c) :=\n  let c := open_constr(c) in                                (* step 1 *)               \n  perform tactics;                                          (* step 2 *)\n  call TC search on all remaining evars created in step 1   (* step 3 *)\nWhich seems easy to transform into:\nTactic"
13071,maximedenes,2020-10-12 18:29:47,robbertkrebbers,"The actual code turned out to be a bit more complicated, unfortunately...\nMaybe I should try to explain what we try to achieve, instead of how it's currently implemented. I actually think it's not really Iris specific, so we might be able to come up with a general-purpose solution.\nBasically, many of the Iris tactics (for example, iApply) take lemmas in the Iris logic, which are of the form:\nlem : ∀ x1 .. xn, (P ⊢ Q)\nHere, ⊢ : iProp → iProp → Prop is the entailment relation of Iris. An important"
13071,maximedenes,2020-10-14 15:10:05,SkySkimmer,"Maybe something like this\nLtac apply_all_arguments lem tac :=\n  let P := open_constr:(_ : Prop) in\n  tryif\n    let rhs := open_constr:(_ : (_ : Prop) -> _) in\n    unify lem rhs\n  then (* Prop argument, use assert *)\n    let HP := fresh in \n    assert P as HP;\n    [|let lem := open_constr:(lem HP) in\n      clear HP; (* are we really allowed to clear HP here? *)\n      apply_all_arguments lem tac]\n  else (* other argument or base case *)\n    tryif\n      let rhs := open_constr:(_:(forall x:_, _)) in"
13071,maximedenes,2020-11-11 10:30:56,robbertkrebbers,This problem recently stroke us again in Iris. (See https://mattermost.mpi-sws.org/iris/pl/1ufy9cmimi8hfeiczyhx4txsmy). It would be good to have a phone call with the parties involved to discuss this MR and how we can move forward?\n@RalfJung @maximedenes @SkySkimmer : Would Wed 25 Nov after 15:00 work?
13071,maximedenes,2020-11-11 12:43:19,RalfJung,"See https://gitlab.mpi-sws.org/iris/iris/-/merge_requests/582 for the fix required for now -- without this, several Iris reverse dependencies fail due to TC resolution happening too early.\n\nWould Wed 25 Nov after 15:00 work?\n\n👍"
13071,maximedenes,2020-11-18 12:16:36,SkySkimmer,@RalfJung @maximedenes @SkySkimmer : Would Wed 25 Nov after 15:00 work?\n\nOK for me
13071,maximedenes,2020-11-18 12:17:09,SkySkimmer,ping @maximedenes
13071,maximedenes,2020-11-25 10:37:55,maximedenes,"Sorry, I missed the ping. If the slot is still ok for you, I'll be available."
13071,maximedenes,2020-11-25 15:27:33,SkySkimmer,Turns out we can remove the enter but it's insufficient as we need to focus to parse the argument as a constr.\nSo we still need the continuation style version.
13071,maximedenes,2020-11-25 15:58:11,JasonGross,"What if you have resolve_tc take a var instead?  I'm not sure exactly how to pull a constr out of an Ltac variable, but conceptually this fixes the focusing issue."
13071,maximedenes,2020-11-25 16:00:11,SkySkimmer,I'm not sure exactly how to pull a constr out of an Ltac variable\n\nI don't know either\nMaybe @ppedrot knows
13071,maximedenes,2020-11-25 19:01:24,ppedrot,"You need to fetch it from the ist argument of the tactic which is implicitly available inside a TACTIC EXTEND, and cast it as a constr using Taccoerce."
13071,maximedenes,2020-11-27 13:57:29,SkySkimmer,I tried again (see last commit) but it still focuses somewhere.
13071,maximedenes,2020-11-27 22:29:25,JasonGross,I'm confused.  Does preident focus?  Is there a way to figure out which part results in focussing?
13071,maximedenes,2021-03-11 15:50:46,SkySkimmer,@ppedrot so how do we make a non-focusing tactic?
13071,maximedenes,2021-03-11 21:26:35,ppedrot,Your primitive tactic should already be non-focussing. I will have a deeper look again when I have a bit of time.
13071,maximedenes,2021-08-02 13:39:28,maximedenes,"@SkySkimmer @ppedrot do you think you could have a new look, to identify where focusing occurs?"
13071,maximedenes,2021-08-03 10:07:28,SkySkimmer,This preident stuff did not work even a little so I reverted to the previous commit.
13071,maximedenes,2021-08-03 10:20:34,SkySkimmer,"Here is a version which doesn't focus, by adding resolve_tc to the core tactics (tactic_expr)."
13071,maximedenes,2021-08-03 13:10:58,coqbot-app,"Hey, I have detected that there were CI failures at commit 16ce8ea without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 7c3f597 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-coq_tools, ci-perennial."
13071,maximedenes,2021-08-03 13:19:15,coqbot-app,"Hey, I have detected that there were CI failures at commit 16ce8ea without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 7c3f597 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-coq_tools, ci-perennial."
13071,maximedenes,2021-08-03 13:30:42,coqbot-app,"Hey, I have detected that there were CI failures at commit 16ce8ea without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 7c3f597 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-coq_tools, ci-perennial."
13760,jfehrle,2021-01-19 18:23:37,CohenCyril,"Since 8.12 and 8.13 has not been extensively tested yet by mathcomp users, and that Search is one the most important features needed for mathcomp, I strongly advise not to remove the ssrsearch plugin for a few versions of Coq."
13760,jfehrle,2021-01-19 18:38:32,CohenCyril,I'm worried that the team @coq/ssreflect-maintainers  was not automatically added for reviews.
13760,jfehrle,2021-01-19 18:49:10,jfehrle,"Just so I understand: Why hasn't mathcomp ""extensively tested"" 8.12 or 8.13?  At 1 version/6 months, ""a couple versions"" seems excessive.  Is there an upper bound on that?  I'll leave it to others to consider your request; I'm just doing the code changes for removals."
13760,jfehrle,2021-01-19 19:06:50,CohenCyril,"Why hasn't mathcomp ""extensively tested"" 8.12 or 8.13? At 1 version/6 months,\n\nIt's easy to check .v still compile, it's way harder to check puerely interactive command have the desired behavior, especially a command as complex as Search. It's quite difficult to list all the use cases.\nWe could have had output checks, but the syntax and the output style changed, so it would have been a lot of work to update it.\nI guess one should do it anyway.\nFew people would update to 8.12 because of the bug t"
13760,jfehrle,2021-01-19 20:32:28,Zimmi48,"As I said in the issue, it would be easy to revert the removal if big issues arose during the release cycle. But it's also easy to leave this PR waiting for about five months and to only merge it after the v8.14 branching point. In which case, there would be 4 major releases and 2 full years with the deprecation before the removal."
13760,jfehrle,2021-01-20 07:43:51,gares,"I would wait too, 8.12 became a viable option only recently because of a few nasty bugs. I would postpone to 8.15."
13760,jfehrle,2021-01-20 18:43:13,jfehrle,"OK, let's do it in 8.15 then.  Perhaps one you gentlemen would create an 8.15 milestone and set it for this PR?"
13760,jfehrle,2021-01-20 18:45:19,Zimmi48,"Done. Note that it was as simple as typing ""8.15+beta1"" in the milestone field and clicking ""create""."
13760,jfehrle,2021-01-20 18:50:31,jfehrle,Thanks.  I thought there were some limitations on adding tags so I didn't even think to try that.
13760,jfehrle,2021-06-21 12:59:45,ppedrot,"Since we've branched this should be ready to merge, up to a rebase."
13760,jfehrle,2021-06-21 13:47:38,ejgallego,"Is this such a maintenance burden? There are still many users of this search command, so I dunno if its removal is warranted."
13760,jfehrle,2021-06-21 17:11:48,Zimmi48,"Not a burden AFAICT but the goal is just to go toward more uniformity of the language and blocking the removal defeats this purpose.\n\nThere are still many users of this search command\n\nIf you know them, can you ask them to open issues regarding why they didn't switch to the improved vanilla Search command yet?"
13760,jfehrle,2021-06-21 17:40:25,jfehrle,Updated.
13760,jfehrle,2021-06-21 20:50:05,coqbot-app,"Hey, I have detected that there were CI failures at commit bb3cd60 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ff73469 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
13760,jfehrle,2021-06-21 21:18:20,jfehrle,I think the failures are unrelated.
13760,jfehrle,2021-06-21 21:47:02,ejgallego,Let me cc some expert such as @strub to see what he thinks about @Zimmi48 questions
13760,jfehrle,2021-08-31 23:05:03,Alizter,@ejgallego @Zimmi48 Any updates with this?
13760,jfehrle,2021-09-03 16:04:15,Zimmi48,"I'm in favor of merging, but I am not a user of this and never was, so this is still awaiting feedback from actual users to confirm that they switched over to the new mechanism."
13760,jfehrle,2021-09-07 04:35:35,jfehrle,Let's discuss in the next Coq call.
13760,jfehrle,2021-09-13 09:04:19,SkySkimmer,In the coq call it was said\n\nreconsider after Math-Comp meeting if we remove in 8.15.\n\nWhen is the mathcomp meeting?
13760,jfehrle,2021-09-13 11:41:29,ejgallego,When is the mathcomp meeting?\n\nhttps://github.com/math-comp/math-comp/wiki#meetings says September 22nd
13760,jfehrle,2021-09-22 08:58:27,gares,"Given this is not super urgent, the MC meeting decided to also ask the MC community at large via Zulip (and give them a few weeks to speak up). At the meeting nobody had complaints about the new search (other than the syntax is different hence one needs to learn it...).\nSee also: https://coq.zulipchat.com/#narrow/stream/237664-math-comp-users/topic/Removal.20of.20ssrsearch"
13760,jfehrle,2021-09-22 09:02:58,ejgallego,"A brief summary of the discussion on the meeting:\n\n@ybertot : mostly satisfied with the new search [heavy user of Search]\n\nmaybe need a bit more of testing, still migration work in progress\nI like I can filter easily using + and -\n\n\n@CohenCyril:\n\nneed for better syntax, for example for module qualification\nnew search should be good, modulo some syntax improvements\n\n\nSometimes it is hard to remember all the options, for example head_concl: vs concl: [pointed by several people] , a bit of a learni"
14829,herbelin,2021-08-31 21:00:13,coqbot-app,"Hey, I have detected that there were CI failures at commit 137cdb4 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14829,herbelin,2021-09-01 13:17:59,gares,@coqbot merge now
14826,herbelin,2021-08-31 20:27:16,coqbot-app,"Hey, I have detected that there were CI failures at commit e1a086f without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14826,herbelin,2021-09-01 13:15:56,gares,@coqbot merge now
14785,SkySkimmer,2021-08-14 10:21:49,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14785,SkySkimmer,2021-08-14 10:21:50,SkySkimmer,"Equations fails on something like\nRequire Import Program.Tactics.\n\nProgram Definition foo (x:{m|m > 0}) := let (k,_) := x in k.\nThe term x gets de-programmed to the first projection which has type nat and so cannot be let-destructed. In master program mode is not used when checking that the let value is in an inductive type.\nNot sure if we want to keep this change.\nWith changed behaviour: https://gitlab.com/coq/coq/-/pipelines/353227397\nWith master behaviour: https://gitlab.com/coq/coq/-/pipelin"
14785,SkySkimmer,2021-08-14 11:29:29,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14785,SkySkimmer,2021-08-14 11:29:42,coqbot-app,"Hey, I have detected that there were CI failures at commit 7be4da0 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1a0460b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-fiat_crypto_legacy, ci-mathcomp."
14785,SkySkimmer,2021-08-14 11:39:06,SkySkimmer,@coqbot ci minimize
14785,SkySkimmer,2021-08-14 11:39:09,coqbot-app,"I have initiated minimization at commit 7be4da0 for the suggested targets ci-fiat_crypto, ci-fiat_crypto_legacy, ci-mathcomp as requested.\nHowever, you may want to try again once the pipeline for the head commit (7be4da0) finishes."
14785,SkySkimmer,2021-08-14 12:18:22,coqbot-app,"Hey, I have detected that there were CI failures at commit 7be4da0 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1a0460b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-fiat_crypto, ci-fiat_crypto_legacy, ci-mathcomp."
14785,SkySkimmer,2021-08-14 12:21:46,coqbot-app,"Hey, I have detected that there were CI failures at commit 7be4da0 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1a0460b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-fiat_crypto, ci-fiat_crypto_legacy, ci-mathcomp."
14785,SkySkimmer,2021-08-14 12:22:49,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto_legacy/src/Curves/Montgomery/XZ.v (from ci-fiat_crypto_legacy) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-notation-overridden"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto_legacy/src"" ""Crypto"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/"
14785,SkySkimmer,2021-08-14 12:54:44,SkySkimmer,"The fiat-crypto error (both legacy and master) seems to be about\nDefinition Let_In {A P} (x : A) (f : forall a : A, P a) : P x := let y := x in f y.\n\nSection MontgomeryCurve.\n\n  Context {Z F:Type}.\n\n  Check fun (xy:F * F) =>\n        Let_In true (fun b =>\n        let (x, y) := xy in\n        (x,y)).\n(* Error: In environment\nZ : Type\nF : Type\nxy : F * F\nb : bool\nx : F\ny : F\nUnable to unify ""(F * F)%type"" with ""?T@{x0:=(x, y)} b"" (cannot unify ""F"" and ""b"").\n*)\nIn master this passes, in this PR it fa"
14785,SkySkimmer,2021-08-14 13:06:11,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto/src/Curves/Montgomery/XZ.v (from ci-fiat_crypto) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+variable-collision,+omega-is-deprecated,+deprecated-instantiate-syntax,+non-recursive"" ""-w"
14785,SkySkimmer,2021-08-14 13:25:50,JasonGross,"This is quite a strange unification error, is there any chance to solve this problem?\n\nI suspect part of the issue is that this doesn't quite fall within the pattern fragment because Coq doesn't know that it can invert constructors to find variables.  (I guess technically you'd need primitive projections on for this to truly fall within the pattern fragment.)"
14785,SkySkimmer,2021-08-14 14:13:12,SkySkimmer,"It's a bit more complicated than that, for instance\n  Check\n    let T0 := fun (xy : F * F) (b:Z) => _ : Type in\n    fun x y b =>\n    let T := T0 (x, y) b in\n    fun z : T => z : F * F.\n\n   Check\n    let T0 := fun xy : F * F => _ : Z -> Type in\n    fun x y b =>\n    let T := T0 (x, y) b in\n    fun z : T => z : F * F.\nThe first Check succeeds, the second fails. Why does it matter whether b is part of the instance vs if it's an argument?"
14785,SkySkimmer,2021-08-14 14:30:09,JasonGross,"If I had to guess, I'd guess that in the first Check, the first-order heuristic gives the correct instantiation of the evar to F * F, while in the second Check, the first-order heuristic tries to instantiate the evar to prod F"
14785,SkySkimmer,2021-08-14 15:55:47,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcomp/ssreflect/finset.v (from ci-mathcomp) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-projection-no-head-constant"" ""-w"" ""-redundant-canonical-projection"" ""-w"" ""-notation-overridden"" ""-w"" ""+duplicate-clear"" ""-w"" ""-ambiguous-paths"" ""-w"" ""+non-primitive-record"" ""-w"" ""+undeclared-scope"" ""-w"" ""-deprecated-hint-without-"
14785,SkySkimmer,2021-08-14 16:26:57,SkySkimmer,"In mathcomp it seems the\nLocal Notation inlined_sub_rect :=\n  (fun K K_S u => let (x, Px) as u  return K u := u in K_S x Px).\nused through definition sig_subType produces a somehow different result.\nThe same error can be gotten in master and older (tested 8.11.2) by modifying the notation to\nLocal Notation inlined_sub_rect :=\n  (fun K K_S u => let '(exist x Px) as u := u return K u in K_S x Px).\n(it's used at type sig throughout the minimized file)\nThe error\nError: The LHS of __top_assumption_\n "
14785,SkySkimmer,2021-08-18 16:55:45,herbelin,"I suspect part of the issue is that this doesn't quite fall within the pattern fragment because Coq doesn't know that it can invert constructors to find variables. (I guess technically you'd need primitive projections on for this to truly fall within the pattern fragment.)\n\nExtending the pattern fragment to tuples is something which I have in mind! I think what is needed is only the ability to define projection so I don't think it strictly requires primitive projections.\nTechnically, in the Let_"
14785,SkySkimmer,2021-09-06 14:02:49,SkySkimmer,ping @coq/ssreflect-maintainers about the LHS of __top_assumption_ error
14785,SkySkimmer,2021-09-13 12:26:15,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14785,SkySkimmer,2021-09-13 14:01:57,coqbot-app,"Hey, I have detected that there were CI failures at commit 15f4637 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit dfc8877 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-color, ci-equations, ci-fiat_crypto_legacy, ci-mathcomp, ci-vst."
14785,SkySkimmer,2021-09-14 10:51:16,SkySkimmer,"Using return _ when no return is specified is more compatible in a few cases, but worse in general (https://gitlab.com/coq/coq/-/pipelines/369662181)"
14785,SkySkimmer,2021-09-14 11:45:05,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14785,SkySkimmer,2021-09-14 12:45:04,coqbot-app,"Hey, I have detected that there were CI failures at commit 58fe4cf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit eeb4bc6 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-fiat_crypto, ci-fiat_crypto_legacy, ci-mathcomp."
14831,proux01,2021-09-01 12:42:21,ppedrot,Only the last commit should go in this PR.
14831,proux01,2021-09-01 12:44:20,proux01,"My bad, thanks."
14831,proux01,2021-09-01 14:23:45,coqbot-app,"Hey, I have detected that there were CI failures at commit 73fa62b without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 87f85f1 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do not suggest minimizing): ci-category_theory (because base job at 87f85f1 failed)"
14831,proux01,2021-09-01 15:55:39,coqbot-app,"Hey, I have detected that there were CI failures at commit 73fa62b without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 87f85f1 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do not suggest minimizing): ci-category_theory (because base job at 87f85f1 failed)"
14718,herbelin,2021-07-29 12:11:25,ppedrot,"this is a hot fix\n\n@herbelin last time I had a look the code was completely nonsensical. I don't think your code restores soundness at all, it's just hiding the nonsense under the rug and is probably going to break some developments in fancy ways. I'd recommend kicking @ejgallego 's ass for the PR development to go faster rather than piling hacks over hacks in this very broken part of the code. Worst case that qualifies as a reasonable hotfix is to copy Loadpath into coqdep and remove it when th"
14718,herbelin,2021-07-29 13:25:28,herbelin,"Interestingly, the PR reveals that in the presence of overlapping between -R/-Q options, there are different kinds of overlapping. Let's consider the following layout:\n├── B1\n│   └── C\n│   |   └── E.v\n│   └── D\n│       └── E.v\n├── B2\n    └── E.v\n\nIn coqdep -R B1 B -R B2 B, there are ambiguities of different kinds: the resolution of E between B.C.E and B.D.E is determined by the order between C and D in the file system (knowing that the underlying hash table fortunately preserves the order of ent"
14718,herbelin,2021-07-29 14:51:14,herbelin,"the code was completely nonsensical. I don't think your code restores soundness at all...\n\nWhat kind of ""nonsensical"" do you have in mind? Barring corner cases, it seems these days to reasonably work? (I'm not saying that the code should not be shared with coqc, on the contrary, but it is relatively better now than say 10 years ago, at a time where coqc and coqdep quickly disagreed).\nMoreover, the warnings I added (as a compensation of the ones I removed) allow to reveal that e.g. hierarchy-buil"
14718,herbelin,2021-07-29 16:07:26,coqbot-app,"Hey, I have detected that there were CI failures at commit 6ba59ae without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 122470b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14718,herbelin,2021-08-01 19:26:50,coqbot-app,"Hey, I have detected that there were CI failures at commit 9a26c01 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 661a835 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14718,herbelin,2021-08-18 11:20:02,herbelin,Do not exit 1\n\nI added an exception UnableToOpenProjectFile but we still need to eventually do something when the exception is raised. I don't know what else to do than reporting a failure and exiting. Tell me if you have something else in mind.
14718,herbelin,2021-08-18 11:51:25,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14718,herbelin,2021-08-31 12:33:40,ppedrot,"It looks like this PR is turning into a hodgepodge of random fixes that are loosely related and not even for the same binaries (coq_makefile vs. coqdep). Couldn't we get instead smaller PRs that would be merged faster and more easily?\nAlso, my main remark still stands: coqdep is just as broken as before and no amount of haphazard fiddling with the set of clashes is going to fix it. You need to completely rework the thing for it to be sound."
14718,herbelin,2021-08-31 12:52:17,herbelin,"Yes, it is a hodgepodge of not random but indeed heteroclitous fixes while observing various problems of coqdep, ocamllibdep and coq_makefile.\nSure, it can be split. Will do.\nAbout reworking the whole thing, it will not be by me, but I will not cry for the current coqdep if someone finds the courage to rewrite it."
14718,herbelin,2021-08-31 20:08:10,coqbot-app,"Hey, I have detected that there were CI failures at commit 8cbe86a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14718,herbelin,2021-08-31 20:26:04,coqbot-app,"Hey, I have detected that there were CI failures at commit 8cbe86a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14718,herbelin,2021-08-31 21:06:26,coqbot-app,"Hey, I have detected that there were CI failures at commit 8cbe86a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14718,herbelin,2021-09-03 09:08:01,herbelin,"As another divergence between coqdep and coqc, in:\n├── B\n│   └── D.v  (* 1 *)\n│   └── C\n│       └── D.v (* 2 *)\n\ncoqc treats the files of B before the ones of B/C leading to give priority to instance 1 of D.v while coqdep treats files and subdirectories in a same pass, so depending on the internal order of the contents of B, treating 1 first if D.v comes before C in the order given by Sys.readdir for directory B and treating 2 first otherwise."
14718,herbelin,2021-09-03 09:31:23,herbelin,"I'd recommend kicking @ejgallego 's ass for the PR development to go faster rather than piling hacks over hacks in this very broken part of the code. Worst case that qualifies as a reasonable hotfix is to copy Loadpath into coqdep and remove it when the factoring actually happens.\n\n@ejgallego, @ppedrot: how would you rewrite coqdep? In addition to preserving order, I believe efficiency is important, no? Would dune comes with support for what we need? Otherwise, would you typically have in mind a"
14718,herbelin,2021-09-03 09:43:45,herbelin,"Another parameter to take into account about ordering:\n├── B\n│   └── E.v (* 1 *)\n│   └── C\n│       └── E.v (* 2 *)\n│       └── D\n│           └── E.v (* 3 *)\n\ndo we go upwards or downwards? coqc goes in a mixed order 1, 3, 2 and, probably, we should keep this order for compatibility. Or we can also adopt the more intuitive order 1, 2, 3? The reason for the mixed order is that the top directory is treated separately. So with more nestings, it would be 1, n+1, n, ..., 2."
14718,herbelin,2021-09-03 13:29:05,ejgallego,"@herbelin indeed we likely need to tweak the current semantics a bit, but we need to put all the loadpath code in one place first."
14718,herbelin,2021-09-03 13:29:37,ejgallego,"@herbelin thanks for all the careful and detailed analysis here, it is indeed super useful."
14718,herbelin,2021-09-03 14:51:12,herbelin,"@herbelin indeed we likely need to tweak the current semantics a bit, but we need to put all the loadpath code in one place first.\n\nOne thing about sharing the loadpath code is that coqc works in a lazy way in the sense that it builds first the loadpath structure without looking at the files, then, for each Require, looks (dynamically) in the different possible directories. I don't know how much this is really useful in practice, but, for instance, you can compile files after having started the "
14718,herbelin,2021-09-05 08:26:30,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14718,herbelin,2021-09-05 09:40:17,herbelin,"I gave in to and implemented a direct map from pairs (from,suffix) with a hash-table. Execution times seem equivalent (that is, most of the time is spent in building the -R coqlibpath Coq map!).\nThis allows to be independent of the order of Hashtbl.fold and to fix the second part of #14539. This also somehow answers a comment of @ppedrot in 31c7542 (""We should rather use some trie-based data structure, but I'll leave this for a future commit.""). [Note that this does not prevent at all a cleanup "
14718,herbelin,2021-09-05 11:23:24,ppedrot,"I then don't see what alternatives there are than forbidding such Requires whose resolution rely on the filesystem order??\n\nWhy not normalize the output of readdir? The OCaml doc explicitly states that\n\nThere is no guarantee that the name strings in the resulting array will appear in any specific order; they are not, in particular, guaranteed to appear in alphabetical order."
14718,herbelin,2021-09-05 13:36:23,herbelin,"Why not normalize the output of readdir?\n\nYou mean using byte order? Yes, that's a possibility also.\nThere might be utf8 issues though when working across different platforms. A same unicode file can be encoded in different utf8 ways depending on file systems (e.g. on MacOS X, accented letters are encoded in filenames with combining accents)."
14718,herbelin,2021-09-05 16:52:04,ppedrot,"You mean using byte order?\n\nNot necessarily with byte order. As you mention, we could also perform Unicode normalization. That said, it's not clear that we wouldn't already have other similar issues with cross-platform binary vo files in coqc, since we handle identifiers as mere binary strings."
14718,herbelin,2021-09-06 08:46:03,herbelin,"You mean using byte order?\n\nNot necessarily with byte order. As you mention, we could also perform Unicode normalization.\n\nYou mean Unicode normalization + Stdlib.compare? Or collation? The first is maybe easier according to uucp's page.\n\nThat said, it's not clear that we wouldn't already have other similar issues with cross-platform binary vo files in coqc, since we handle identifiers as mere binary strings.\n\nI believe we embed strings the form they were entered, even the few filenames stored i"
14718,herbelin,2021-09-06 12:07:05,ejgallego,"Sorry folks I am not following the discussion closely, but something I am positive based on experience with large builds is that all directory traversal has to be lazy if possible."
14718,herbelin,2021-09-06 12:13:42,herbelin,"Sorry folks I am not following the discussion closely, but something I am positive based on experience with large builds is that all directory traversal has to be lazy if possible.\n\nAs a matter of fact, most of the time spent in a call to coqdep is to reconstruct the map for the standard library. It should indeed be done lazily or maybe even cached somewhere."
14718,herbelin,2021-09-12 16:21:24,herbelin,"As far as I can judge, the error in perennial was ""real"": coqdep and coqc disagreed on how to manage the loadpath but since, thanks to coqdep, only one of the two conflicting files was compiled, the vo file that coqc would have taken by default was absent and the file mentioned by coqdep was taken.\nTold in another way, coqdep may impact the choices made by coqc by imposing an order of compilation to coqc.\nSo, it is not clear that coqdep should necessarily comply with coqc. It can be coqc which a"
14718,herbelin,2021-10-06 16:24:43,Alizter,"@herbelin In the review window you can ""add to batch"" in order to commit all suggestions at once. Then you can sort the commits out locally."
14718,herbelin,2021-10-06 19:39:45,Alizter,"LGTM, I might do some more cleanup after this PR but that seems to be orthogonal to this."
14718,herbelin,2021-10-06 19:41:40,Alizter,I will merge tomorrow if @ppedrot and the CI is happy with it
14718,herbelin,2021-10-06 19:59:14,herbelin,I will merge tomorrow if @ppedrot and the CI is happy with it\n\nNote that the test-suite will fail again on the tests sensitive to the file-system order.
14718,herbelin,2021-10-06 23:11:58,ejgallego,"This may be performance sensitive, so a quick check with a large coqdep invocation could be helpful."
14718,herbelin,2021-10-06 23:16:16,Alizter,How can we time coqdep for the stdlib?
14718,herbelin,2021-10-07 06:10:15,SkySkimmer,https://gitlab.com/coq/coq/-/jobs/1656073139\ncoqdep should be a significant part of fiat-crypto
14718,herbelin,2021-10-07 07:34:39,herbelin,"Note that for From, it uses now a direct access in a hash table while before it was looking in a list. So, I suspect that performance can only be better in general.\nNote also that performance-wise, a lot of the time is spent to reconstruct again and again the file map for the stdlib, so a cache would help here if someone knows how to build one (for coqdep on a single file, rebuilding the stdlib map is close to 100% of the time)."
14718,herbelin,2021-10-07 18:25:42,ejgallego,"Something such as time coqdep $opts $(find -name *.v dirs) , you can see the invocation on the stdlib for example in the makefile. I can do it myself provided some time."
14718,herbelin,2021-10-07 18:41:45,SkySkimmer,Bench indicates no issue
14718,herbelin,2021-10-07 19:13:36,herbelin,"Bench indicates no issue\n\nAren't times around 0 on the average in general? (Anyway, I don't see a reason why coquelicot would be slower because of coqdep.)"
14718,herbelin,2021-10-07 19:20:38,ejgallego,Bench indicates no issue\n\nMy own benchmarking indicates same time on both master and this PR [with 25k .v files]
14718,herbelin,2021-10-08 10:38:30,herbelin,"I finally implemented a variant of what was discussed at Zulip:\n\nIf some files exactly match the required logical name, they are selected. If there is a From clause, this uniquely determines a file. If there is no From clause, the file corresponding to the most recently given -R or -Q is selected.\nIf no files exactly match the required logical name, the ones corresponding to the most recently given -R or -Q (or to the From prefix if any) are selected. If there are several of them (in case of -R)"
14718,herbelin,2021-10-08 11:05:45,Alizter,"I'm going to have a go at changing the reliance on exceptions like I suggested.\nOn closer inspection (in coqdep_common.ml), it seems to be more trouble than it's worth. From what I have been reading, there isn't really a performance gain when it comes to Hashtbl.find vs Hashtbl.find_opt since they are both doing some expensive things anyway. The latter simply lets the type checker encourage you to handle exceptions."
14718,herbelin,2021-10-14 12:38:03,Alizter,"@herbelin Can you have a look at Jim's review? I want to merge this soon, but we should finish polishing up the doc."
14718,herbelin,2021-10-14 16:43:13,herbelin,"I'm now also leaning in the direction to fail if a Require is ambiguous. But should it fail as soon as coqdep or only in coqc/coqtop. I would lean to continue to warn in coqdep and fail in coqc but that's disputable.\nI also found yet a small issue to address: The order in which subdirectories of user-contrib are added to the loadpath is dependent on the file system. That is, if there are Foo1 and Foo2 in user-contrib, and both contains a file Bar, Require Bar will be system dependent. One answer"
14718,herbelin,2021-10-14 16:45:53,herbelin,"@jfehrle\n\nHope you will improve the wording in modules.rst.\nIMHO much of that section (not just your changes) deserves to be rewritten. Also, I would consider other improvements to the described functionality--though not in this PR.\n\nYes, this was my feeling too. The section deserves to be rewritten.\nBefore, there are still issues to solve. See last comment."
14718,herbelin,2021-10-14 16:47:08,herbelin,"@herbelin Can you have a look at Jim's review? I want to merge this soon, but we should finish polishing up the doc.\n\nI answered to Jim.\nNote that I added in the meantime a Changed section next to the Fixed section in the changelog."
14718,herbelin,2021-10-14 17:42:39,SkySkimmer,"I also found yet a small issue to address: The order in which subdirectories of user-contrib are added to the loadpath is dependent on the file system. That is, if there are Foo1 and Foo2 in user-contrib, and both contains a file Bar, Require Bar will be system dependent. One answer would be to force to use From whenever we require a file from an installed package? Is it acceptable?\n\nI thought user-contrib is like -Q so we can't do Require Bar?"
14718,herbelin,2021-10-14 18:40:37,jfehrle,"I'm now also leaning in the direction to fail if a Require is ambiguous.\n\nA warning (and ignoring one file) would be more user-friendly.  The conflict may be unimportant.  The message should be specific about the conflicting files.  If there are several conflicts, they should all be reported.  I expect coqc exits after reporting the first error, which would be less friendly.\n\nThe order in which subdirectories of user-contrib are added to the loadpath is dependent on the file system.\n\nHow about s"
14718,herbelin,2021-10-14 19:30:25,herbelin,"I also found yet a small issue to address: The order in which subdirectories of user-contrib are added to the loadpath is dependent on the file system. That is, if there are Foo1 and Foo2 in user-contrib, and both contains a file Bar, Require Bar will be system dependent. One answer would be to force to use From whenever we require a file from an installed package? Is it acceptable?\n\nI thought user-contrib is like -Q so we can't do Require Bar?\n\nOption -Q does not require From, if this is what y"
14718,herbelin,2021-10-14 19:38:18,herbelin,"I'm now also leaning in the direction to fail if a Require is ambiguous.\n\nA warning (and ignoring one file) would be more user-friendly.\n\nYou mean as soon as coqdep?\n\nThe conflict may be unimportant. The message should be specific about the conflicting files.\n\nYes, and the code for reporting the conflict is already done (with a warning).\n\nIf there are several conflicts, they should all be reported. I expect coqc exits after reporting the first error, which would be less friendly.\n\nThis is one of"
14718,herbelin,2021-10-14 20:43:24,SkySkimmer,"Option -Q does not require From, if this is what you mean.\n\nI mean for instance I cannot do Require Ltac2 I need to do Require Ltac2.Ltac2 or From Ltac2 Require Ltac2, so even if someone installs user-contrib/foo/Ltac2.vo there is no confusion."
14780,SkySkimmer,2021-08-13 16:33:17,coqbot-app,"Hey, I have detected that there were CI failures at commit 1852bfc without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1a0460b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-vst.\nHowever, you may want to wait until the pipeline for the base commit (1a0460b) finishes."
14780,SkySkimmer,2021-08-13 16:55:08,coqbot-app,"Hey, I have detected that there were CI failures at commit 1852bfc without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1a0460b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-vst."
14780,SkySkimmer,2021-08-13 18:30:08,coqbot-app,"Hey, I have detected that there were CI failures at commit 1852bfc without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1a0460b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-vst."
14780,SkySkimmer,2021-08-19 20:48:01,SkySkimmer,"Weird test suite failure, did we get a hash collision or tmp name reuse?\nhttps://gitlab.com/coq/coq/-/jobs/1517714075"
14780,SkySkimmer,2021-08-30 15:39:16,ejgallego,"Can't hurt, I wonder what more state we have on vernac w.r.t. section / modules.\nIMHO it would be great to work a bit on declaremods as a lot of things are happenning there under the rug."
14780,SkySkimmer,2021-09-06 13:05:51,ejgallego,@SkySkimmer I'll be happy to merge when you remove the needs tag.
14780,SkySkimmer,2021-09-07 12:30:36,ejgallego,@coqbot: merge now
14825,herbelin,2021-08-31 20:18:02,coqbot-app,"Hey, I have detected that there were CI failures at commit 47a78b9 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14836,proux01,2021-09-02 00:44:14,coqbot-app,"Hey, I have detected that there were CI failures at commit e63ee29 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 6bd07ba succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do not suggest minimizing): ci-category_theory (because base job at 6bd07ba failed)"
14836,proux01,2021-09-02 08:44:09,ppedrot,"That's a duplicate of #14834 but since I have merge rights, that nobody cared about the other one and that fixing the test-suite is urgent, I'll merge this right now and close the other one."
14836,proux01,2021-09-02 08:48:30,proux01,"@ppedrot sorry, I somehow missed #14834 (and I don't (yet) have merge rights anyway ;) )\nWell, thanks for merging!"
14798,herbelin,2021-08-21 15:35:46,herbelin,@coqbot ci minimize
14798,herbelin,2021-08-21 15:35:53,coqbot-app,"I have initiated minimization at commit 7d853f7 for the suggested targets ci-argosy, ci-elpi, ci-fiat_parsers, ci-hott, ci-verdi_raft, ci-vst as requested.\nHowever, you may want to try again once the pipeline for the head commit (7d853f7) finishes."
14798,herbelin,2021-08-21 15:40:04,coqbot-app,Error: Could not minimize file  (from ci-elpi) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 2.9MiB file on GitHub Actions Artifacts under build.log)\nr-contrib/elpi/apps//derive/.coq-native\nINSTALL theories/derive/.coq-native/Nelpi_apps_derive_param2.cmx /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps//derive/.coq-native\nINSTALL theories/derive/.coq-native/Nelpi_apps_derive_induction.cmx /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps//derive/.coq-
14798,herbelin,2021-08-21 16:06:50,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Colimits/Sequential.v (from ci-hott) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hott/theories"" ""HoTT"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/"
14798,herbelin,2021-08-21 16:11:56,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/ADTRefinement/SetoidMorphisms.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/coq-failin"
14798,herbelin,2021-08-21 16:34:40,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/verdi_raft/raft-proofs/RaftRefinementProof.v (from ci-verdi_raft) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 44KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/verdi_raft/raft"" ""VerdiRaft"" ""-Q"" ""/github/workspace/builds/"
14798,herbelin,2021-08-21 16:35:44,herbelin,"@JasonGross : for information, the minimized hott file works when copy-pasted but not when loaded (the lines from before seq_pair_shift up to before Eta fail - a notation scope resolution problem apparently - but the final awaited error The term ""G z"" has type ""?B@{x:=z.1} z.2"" while it is expected to have type ""?Z z"" is not affected by the previous failing lines which can then be skipped)."
14798,herbelin,2021-08-21 17:11:52,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/argosy/src/Examples/Logging/HoareProof.v (from ci-argosy) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/argosy/src"" ""RecoveryRefinement"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/argosy/vendor/classes/src"" ""Classes"" ""-R"" ""/github"
14798,herbelin,2021-08-21 17:33:48,coqbot-app,"Hey, I have detected that there were CI failures at commit 7d853f7 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 59d4839 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-argosy, ci-elpi, ci-fiat_parsers, ci-hott, ci-verdi_raft, ci-vst."
14798,herbelin,2021-08-21 20:52:52,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/veric/juicy_extspec.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/sepcomp"" ""VST.sepcomp"" ""-Q"" """
14798,herbelin,2021-08-22 02:09:55,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/veric/juicy_extspec.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/sepcomp"" ""VST.sepcomp"" ""-Q"" """
14798,herbelin,2021-08-22 07:27:03,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/veric/juicy_extspec.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/sepcomp"" ""VST.sepcomp"" ""-Q"" """
14798,herbelin,2021-08-22 12:43:53,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/veric/juicy_extspec.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/sepcomp"" ""VST.sepcomp"" ""-Q"" """
14798,herbelin,2021-08-22 15:00:42,Alizter,@herbelin You have to pass the usual arguments for HoTT: -noinit -indices-matter
14798,herbelin,2021-08-22 18:01:02,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/veric/juicy_extspec.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/sepcomp"" ""VST.sepcomp"" ""-Q"" """
14798,herbelin,2021-08-22 23:18:02,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/veric/juicy_extspec.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 65KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/v"
14798,herbelin,2021-08-23 04:35:14,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/veric/juicy_extspec.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 42KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/v"
14798,herbelin,2021-08-23 09:52:12,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/veric/juicy_extspec.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/sepcomp"" ""VST.sepcomp"" ""-Q"" """
14798,herbelin,2021-08-23 11:30:18,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/veric/juicy_extspec.v (from ci-vst) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/sepcomp"" ""VST.sepcomp"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/v"
14798,herbelin,2021-08-23 19:28:04,JasonGross,"@herbelin Following up on what @Alizter said, I suspect the difference is that emacs/PG reads the coq-prog-arg arguments from the top of the file, while running the file from the command line does not use these arguments."
14798,herbelin,2021-10-04 02:17:21,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
14798,herbelin,2021-10-19 02:10:24,JasonGross,"@herbelin What's the status of this?  I'd quite like to see this happen.\nBtw, if you rebase, the minimizer should now be able to minimize ci-elpi once I merge coq-community/run-coq-bug-minimizer#10"
14798,herbelin,2021-10-19 08:54:44,herbelin,"The general status of my open unification-related PRs is that the priority is to make the part solving heuristics more robust to taking one or another code path in the main ""evar_conv_x"" unification (this includes interleaving typeclass resolution and use of heuristics, as well as backtracking on incompatible heuristics). Technically, I'm blocked until mid-November for any kind of implementation that requires to find several hours in a row. So, I plan to start again working on these PRs mid-Nove"
14798,herbelin,2021-10-19 12:12:14,coqbot-app,"Hey, I have detected that there were CI failures at commit 7a735a4 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a14a8e2 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-argosy, ci-elpi, ci-fiat_parsers, ci-hott, ci-verdi_raft, ci-vst."
14798,herbelin,2021-10-19 14:18:19,JasonGross,@coqbot ci-minimize ci-elpi
14798,herbelin,2021-10-19 14:18:22,coqbot-app,I am now running minimization at commit 7a735a4 on requested target ci-elpi. I'll come back to you with the results once it's done.
14798,herbelin,2021-10-19 14:20:05,JasonGross,@coqbot ci minimize ci-elpi
14798,herbelin,2021-10-19 14:20:08,coqbot-app,I am now running minimization at commit 7a735a4 on requested target ci-elpi. I'll come back to you with the results once it's done.
14798,herbelin,2021-10-19 14:22:54,coqbot-app,Error: Could not minimize file  (from ci-elpi) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 2.9MiB file on GitHub Actions Artifacts under build.log)\n/github/workspace/builds/coq/coq-failing/_install_ci/lib:\n++ export PATH=/github/workspace/builds/coq/coq-failing/_install_ci/bin:/root/.opamcache/4.05.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n++ PATH=/github/workspace/builds/coq/coq-failing/_install_ci/bin:/root/.opamcache/4.05.0/bin:/usr/local/sbi
14798,herbelin,2021-10-19 14:25:27,coqbot-app,Error: Could not minimize file  (from ci-elpi) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 2.9MiB file on GitHub Actions Artifacts under build.log)\n/github/workspace/builds/coq/coq-failing/_install_ci/lib:\n++ export PATH=/github/workspace/builds/coq/coq-failing/_install_ci/bin:/root/.opamcache/4.05.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n++ PATH=/github/workspace/builds/coq/coq-failing/_install_ci/bin:/root/.opamcache/4.05.0/bin:/usr/local/sbi
14763,SkySkimmer,2021-09-06 13:46:08,ppedrot,Merging soon then.
14763,SkySkimmer,2021-09-06 16:49:00,coqbot-app,"Hey, I have detected that there were CI failures at commit 7fb8571 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 4de7bc5 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-equations."
14763,SkySkimmer,2021-09-06 16:53:33,coqbot-app,"Hey, I have detected that there were CI failures at commit 7fb8571 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 4de7bc5 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-equations."
14763,SkySkimmer,2021-09-06 17:02:17,coqbot-app,"Hey, I have detected that there were CI failures at commit 7fb8571 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 4de7bc5 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-equations."
14763,SkySkimmer,2021-09-06 17:58:56,coqbot-app,"Hey, I have detected that there were CI failures at commit 7fb8571 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 4de7bc5 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-equations."
14679,ppedrot,2021-07-19 16:20:33,ppedrot,"Here is a minimal example of a fringe case.\nCreate HintDb foo discriminated.\n\nDefinition F (n : nat) := n.\n\nInductive Pred : nat -> Prop := pred : forall n, Pred (S n).\n\n#[local]\nHint Unfold F : foo.\n\n#[local]\nHint Resolve pred : foo.\n\nPrint HintDb foo.\n\nGoal forall n, Pred (F (S n)).\nProof.\nintros n.\nsolve [ auto with foo ]. (* with this PR auto leaves the goal unchanged and this line fails *)\nQed."
14679,ppedrot,2021-07-19 19:08:03,coqbot-app,"Hey, I have detected that there were CI failures at commit 3d8c49d without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1bba7d6 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-hott, ci-math_classes."
14679,ppedrot,2021-07-20 08:54:04,ppedrot,"CI shows that only HoTT, math-classes and (by transitivity) corn are broken. It seems quite a small change in the end thus, so maybe it's worth pursueing and writing overlays. @mattam82 what do you think?"
14679,ppedrot,2021-07-21 11:24:18,ppedrot,"Let's close for the time being, I'll reopen after the deadzone known as summer."
14679,ppedrot,2021-09-13 11:24:32,coqbot-app,"Hey, I have detected that there were CI failures at commit 641dd02 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 89818ca succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-hott, ci-math_classes."
14679,ppedrot,2021-09-13 11:24:59,coqbot-app,"Hey, I have detected that there were CI failures at commit 641dd02 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 89818ca succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-hott, ci-math_classes."
14679,ppedrot,2021-09-13 14:10:19,ppedrot,Why are there CI failures in ml-api and refman? In the first case I don't see how it's related to this PR and in the second I don't even see any outstanding error.
14679,ppedrot,2021-09-21 16:00:28,ppedrot,"All overlays were merged, so this is ready to go as-is and needs an assignee."
14679,ppedrot,2021-09-22 09:01:42,SkySkimmer,Maybe we could have a test for this?
14679,ppedrot,2021-09-22 12:05:52,ppedrot,Do you want a positive or a negative test?
14679,ppedrot,2021-09-22 12:37:46,SkySkimmer,Why not both?
14679,ppedrot,2021-09-24 09:53:42,SkySkimmer,ping
14679,ppedrot,2021-09-24 12:13:03,ppedrot,@SkySkimmer test added.
14679,ppedrot,2021-09-24 12:16:17,SkySkimmer,"This test passes in master, shouldn't we test the changed behaviour?"
14679,ppedrot,2021-09-24 12:18:02,ppedrot,"You're right, let me add another discriminating test."
14679,ppedrot,2021-09-24 14:02:43,SkySkimmer,@coqbot merge now
14855,silene,2021-09-07 16:10:52,silene,"The related pull requests are now part of the branch, so this is ready."
14855,silene,2021-09-07 16:22:02,Zimmi48,"@silene It seems like I missed this while reviewing #14490 but the current changelog is consolidated under a title ""Changes in 8.14.0"". While the .0 release is expected to have very little change compared to the +rc1 release, I still think that we should aim for accuracy and thus document this list as what is included in the +rc1 release. Can you fix this before I merge (in a separate commit)?"
14855,silene,2021-09-07 16:32:06,silene,"Are you sure? For the previous releases, we only wrote a separate changelog for betas, not for release candidates. So, naming the section ""Changes in 8.14+rc1"" does not seem consistent."
14855,silene,2021-09-07 17:04:20,coqbot-app,"Hey, I have detected that there were CI failures at commit 980991a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 873de82 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do not suggest minimizing): ci-mtac2 (because base job at 873de82 failed)"
14855,silene,2021-09-07 18:44:28,Zimmi48,"It's been a very long time (8.5 or 8.6) since we didn't do release candidates, and at the time we also did beta releases. I guess we just interpreted differently what ""release candidate"" was supposed to mean in @gares's CEP. I didn't put as much meaning in this renaming as you did.\nIn the end, you're the RM so it's your call."
14855,silene,2021-09-07 18:45:55,Zimmi48,"In the interest of efficiency, I'll merge this PR and you can open another one if you adopt my interpretation."
14779,SkySkimmer,2021-08-13 13:23:53,SkySkimmer,Needed for #14780
14779,SkySkimmer,2021-08-13 18:09:42,Alizter,Also for #12004 we should have:\nFail +\nFail -\nFail *
14779,SkySkimmer,2021-08-13 18:27:30,coqbot-app,"Hey, I have detected that there were CI failures at commit 31def7b without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1a0460b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-vst."
14779,SkySkimmer,2021-08-13 19:49:42,coqbot-app,"Hey, I have detected that there were CI failures at commit 31def7b without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1a0460b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-vst."
14779,SkySkimmer,2021-08-13 20:17:52,coqbot-app,"Hey, I have detected that there were CI failures at commit 31def7b without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1a0460b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-vst."
14779,SkySkimmer,2021-08-13 20:45:46,coqbot-app,"Hey, I have detected that there were CI failures at commit 31def7b without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1a0460b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-vst."
14779,SkySkimmer,2021-08-17 07:09:39,ejgallego,"Happy to merge, however I understand we need to solve #14783 first?"
14779,SkySkimmer,2021-08-19 17:33:32,Alizter,So why does Fail { work whilst Fail + doesn't? Are bullets not interpreted at a similar time to brackets?
14779,SkySkimmer,2021-08-23 13:43:05,Alizter,@coqbot merge now
14779,SkySkimmer,2021-08-23 13:43:06,coqbot-app,@Alizter: You can't merge the PR because you're not among the assignees.
14779,SkySkimmer,2021-08-23 13:44:26,Alizter,@coqbot merge now
14779,SkySkimmer,2021-08-23 13:44:28,coqbot-app,@Alizter: Please take care of the following overlays:\n\n14779-SkySkimmer-typed-vernac-modular.sh
14779,SkySkimmer,2021-08-23 22:39:58,jfehrle,"@Alizter As the merger, you are responsible for merging the elpi overlay promptly after the merge.  Note the message from coqbot ""Please take care of the following overlays.""  The lack of the merge breaks the ci-elpi test in #14354.  I've not done this before myself, maybe ask @gares (elpi maven) or @SkySkimmer if you have questions about how to do that.\nThe overlay is included by the dev/ci/user-overlays/14779-SkySkimmer-typed-vernac-modular.sh file.\nSee dev/ci/user-overlays/README.md for a des"
14779,SkySkimmer,2021-08-23 22:42:39,jfehrle,"@Alizter See my previous comment.  (I initially misspelled your ID, not sure editing thereafter will send a notification.)"
14137,mattam82,2021-06-03 18:55:24,coqbot-app,"Hey, I have detected that there were CI failures at commit 4bd2ea0 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit e8040a4 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14137,mattam82,2021-06-14 09:42:44,SkySkimmer,@coqbot ci minimize
14137,mattam82,2021-06-14 09:42:50,coqbot-app,I have initiated minimization at commit 4bd2ea0 for the suggested target ci-metacoq as requested.
14137,mattam82,2021-06-14 09:45:53,coqbot-app,Error: Could not minimize file  (from ci-metacoq) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.7MiB file on GitHub Actions Artifacts under build.log)\noq.a  \n  inflating: _build_ci/metacoq/template-coq/src/template_coq.cmi  \n  inflating: _build_ci/metacoq/template-coq/src/template_coq.cmx  \n  inflating: _build_ci/metacoq/template-coq/src/template_coq.cmxa  \n  inflating: _build_ci/metacoq/template-coq/src/template_coq.cmxs  \n  inflating: _build_ci/metacoq/template-coq/sr
14137,mattam82,2021-06-14 22:23:28,JasonGross,"Metacoq minimization now works!\nMinimized File /github/workspace/builds/coq/coq-failing/_build_ci/metacoq/pcuic/theories/PCUICSigmaCalculus.v (from ci-metacoq) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/metacoq/template-coq/theories"" ""MetaCoq.Template"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_b"
14846,herbelin,2021-09-05 16:09:17,coqbot-app,"Hey, I have detected that there were CI failures at commit b62a186 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 9b921f6 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-elpi, ci-paramcoq."
14846,herbelin,2021-09-05 19:22:56,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14846,herbelin,2021-09-06 16:42:05,coqbot-app,"Hey, I have detected that there were CI failures at commit b62a186 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 9b921f6 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-elpi, ci-paramcoq."
14846,herbelin,2021-09-06 23:38:41,coqbot-app,"Hey, I have detected that there were CI failures at commit ae0ee30 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 98b3530 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-elpi, ci-paramcoq."
14846,herbelin,2021-09-07 02:13:18,coqbot-app,"Hey, I have detected that there were CI failures at commit ae0ee30 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 98b3530 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-elpi, ci-paramcoq."
14846,herbelin,2021-09-09 01:24:56,coqbot-app,"Hey, I have detected that there were CI failures at commit ae0ee30 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 98b3530 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-elpi, ci-paramcoq."
14846,herbelin,2021-09-09 07:27:13,SkySkimmer,┌─────────────────────────────┬─────────────────────────┬───────────────────────────────────────┬───────────────────────────────────────┬──────────────────────────┬─────────────────┐\n│                             │      user time [s]      │              CPU cycles               │           CPU instructions            │  max resident mem [KB]   │   mem faults    │\n│                             │                         │                                       │                                     
14846,herbelin,2021-09-09 08:28:57,SkySkimmer,"@herbelin please don't use [ci skip], it looks like it's skipping the windows/osx tests even though I don't think that's what you wanted."
14846,herbelin,2021-09-09 10:48:49,herbelin,"@herbelin please don't use [ci skip], it looks like it's skipping the windows/osx tests even though I don't think that's what you wanted.\n\nI wanted to skip redoing the same tests after the push of a commit modifying only comments.\n\nDo the inductive_subst definitions in cclosure and reduction still need the\n  let rec self i accu =\n    if Int.equal i ntypes then accu\n    else self (i + 1) (subs_cons (inject (mkIndU ((mind, i), u))) accu)\n  in\n\nIt's indeed now useless, well spotted! Taken into acco"
14846,herbelin,2021-09-09 11:23:20,coqbot-app,"Hey, I have detected that there were CI failures at commit 8cab0b2 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 4cb8479 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-elpi, ci-paramcoq.\nHowever, you may want to wait until the pipeline for the base commit (4cb8479) finishes."
14846,herbelin,2021-09-09 13:51:01,coqbot-app,"Hey, I have detected that there were CI failures at commit 8cab0b2 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 4cb8479 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-elpi, ci-paramcoq.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do "
14846,herbelin,2021-09-09 13:52:06,coqbot-app,"Hey, I have detected that there were CI failures at commit 8cab0b2 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 4cb8479 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-elpi, ci-paramcoq.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do "
14846,herbelin,2021-09-10 11:05:10,herbelin,"Bench indicates a small but uniform time improvement.\nIf the PR goes in, I'm still hesitating whether the API should provide an emulation of the old lookup_inductive and lookup_mind_specif (that replaces back the Ind with Rel), or if we require plugins to adapt straightahead to the modified model."
14846,herbelin,2021-09-10 11:15:32,SkySkimmer,Plugins must adapt
14846,herbelin,2021-09-12 09:54:23,herbelin,"An inelegance in this PR is that mind_entry_lc uses Rel but mind_user_lc uses Ind to represent the self-references. This is particularly visible in translation plugins such as paramcoq which have to translate back from Ind to Rel.\nOn the other side, type-checking the self-references using Rel is simpler to do than using Ind so I'd keep Rel in mind_entry.\nI suspect that @SkySkimmer and @ppedrot would find this excessive but a compromise would be to keep mind_user_lc and mind_nf_lc as they are and"
14846,herbelin,2021-09-12 12:54:18,coqbot-app,"Hey, I have detected that there were CI failures at commit 45631d9 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 89818ca succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-elpi, ci-metacoq."
14846,herbelin,2021-09-13 08:36:28,SkySkimmer,I suspect that @SkySkimmer and @ppedrot would find this excessive but a compromise would be to keep mind_user_lc and mind_nf_lc as they are and to only add new variants mind_user_lc_self and mind_nf_lc_self in the inductive packets.\n\nSuch functionality fits better as Inductiveops functions imo
14846,herbelin,2021-09-13 09:11:30,ppedrot,"I also believe that storing redundant data in vo files is not a good practice. I'd rather have a function that does that, as argued above by @SkySkimmer."
14846,herbelin,2021-09-19 17:04:17,herbelin,"@gares: The example example_fuzzer.v has code written in Elpi that (presumably) assumes the type of constructors to refer to inductive types as Rel rather than as Ind (failure at line 96). Do you have an idea of what should be done to adapt it (not knowledgeable in Elpi, it is not clear to me what this code is supposed to do)?"
14846,herbelin,2021-09-19 17:22:28,herbelin,Such functionality fits better as Inductiveops functions imo\n\nI put it in inductive.ml (so that the checker can use it).
14846,herbelin,2021-09-20 07:52:14,gares,"@gares: The example example_fuzzer.v has code written in Elpi that (presumably) assumes the type of constructors to refer to inductive types as Rel rather than as Ind (failure at line 96). Do you have an idea of what should be done to adapt it (not knowledgeable in Elpi, it is not clear to me what this code is supposed to do)?\n\nThe elpi code does not know how inductive constructor names are represented, they are an opaque data. So the problem is at the ML level, there is some tricky code (you di"
14846,herbelin,2021-09-20 08:19:49,herbelin,"The elpi code does not know how inductive constructor names are represented, they are an opaque data. So the problem is at the ML level, there is some tricky code (you did edit) to transform a coq inductive declaration into an elpi one and back.\n\nThanks for the help. The problem was indeed where you spotted it. A stupid mistake, sorry."
14846,herbelin,2021-09-21 13:13:04,SkySkimmer,maybe squash the last commit?
14846,herbelin,2021-09-21 13:36:13,herbelin,"maybe squash the last commit?\n\nSure, will eventually do if no other comments come."
14846,herbelin,2021-09-22 08:41:23,SkySkimmer,@coqbot merge now
14846,herbelin,2021-09-22 08:41:26,coqbot-app,@SkySkimmer: Please take care of the following overlays:\n\n14846-herbelin-master+inlining-inductive-names-in-inductive-blocks.sh
14827,herbelin,2021-08-31 20:53:53,coqbot-app,"Hey, I have detected that there were CI failures at commit a6a4565 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14827,herbelin,2021-09-01 13:13:14,gares,"On non-existent files in the Coq Project, the commit chooses to raise a warning rather than an error. This is a compromise but maybe a disputable one.\n\nWhy do you need to ""compromise""? Can't you just print a better error message?"
14827,herbelin,2021-09-01 13:37:03,herbelin,"On non-existent files in the Coq Project, the commit chooses to raise a warning rather than an error. This is a compromise but maybe a disputable one.\n\n\n\nWhy do you need to ""compromise""? Can't you just print a better error message?\n\nI don't remember. Keeping an error would indeed be as good."
14827,herbelin,2021-09-05 08:38:57,herbelin,"I changed the first error to foo.v: No such file or directory and the warning to an error In file ""bar"": foo.v: No such file or directory.\nOne day we should adopt a convention about error messages of such tools (such as printing *** Error, or Error, or the name of the command, etc.)."
14827,herbelin,2021-09-13 09:31:26,SkySkimmer,@coqbot: merge now
13969,mattam82,2021-03-19 20:42:35,mattam82,"BTW, the fix involves only changes in .v files, no customizing of typeclasses eauto is needed here. But it demonstrates quite powerful proof-search control capabilities of the tactic monad."
13969,mattam82,2021-03-31 08:16:12,mattam82,"Bench is not good, I will have to dig into it:\n────────────────────────────┬──────────────────────────┬────────────────────────────────────────┬────────────────────────────────────────┬──────────────────────────┬─────────────────┐\n│                            │      user time [s]       │               CPU cycles               │            CPU instructions            │  max resident mem [KB]   │   mem faults    │\n│                            │                          │                           "
13969,mattam82,2021-03-31 08:26:36,ppedrot,"If I had to guess, I'd say that computing head evars can be extremely expensive on huge terms."
13969,mattam82,2021-03-31 08:32:58,mattam82,"If I had to guess, I would rather think we explore more dead-end paths during resolution of setoid_rewrite goals. The only mode introduced by the PR is + - for RewriteRelation, so it should only do more occurrence checks of evars in (small) types."
13969,mattam82,2021-04-16 09:43:43,mattam82,"@ppedrot I need your help here, how do I get line timings for math-classes and fiat-parsers ?"
13969,mattam82,2021-04-16 12:00:51,ppedrot,"You need to download the artifacts, and call the script coqbench-display from the coq-bench repo on the resulting directory."
13969,mattam82,2021-04-19 11:00:36,mattam82,"You need to download the artifacts, and call the script coqbench-display from the coq-bench repo on the resulting directory.\n\nI'm afraid I don't see which artifacts to download. Sadly the bench did not finish in 24 hours so maybe they are not produced?"
13969,mattam82,2021-04-19 12:36:51,ppedrot,It's possible that the artifacts are dropped if the bench is aborted. You should restart it on the subset of devs you're interested in only.
13969,mattam82,2021-04-19 13:57:13,mattam82,I suppose I should use coq_opam_packages = coq-math-classes when starting the job manually. Do we have a doc for this @SkySkimmer @Zimmi48 ?
13969,mattam82,2021-04-19 14:24:06,Zimmi48,I don't manage the bench infrastructure (@ppedrot and @SkySkimmer do). The only documentation that I'm aware of is https://github.com/coq/coq/wiki/Benchmarking.
13969,mattam82,2021-04-19 14:52:48,SkySkimmer,I think that should work.
13969,mattam82,2021-04-19 14:56:19,mattam82,"Cool, one more question: shouldn't we have enough machines now to run benches in parallel?"
13969,mattam82,2021-04-21 18:14:20,mattam82,"@ppedrot I have the bench dump, which scripts should I use now?\nNevermind, you already answered that 5 days ago :)"
13969,mattam82,2021-04-21 20:44:24,mattam82,"For math-classes my analysis was right, setoid rewriting was taking more dead-ends, because the library writters did not use Params to cut down on proof-search as advised by the doc."
13969,mattam82,2021-04-24 07:35:38,mattam82,Fiat-parsers bench job: https://gitlab.com/coq/coq/-/jobs/1205997166
13969,mattam82,2021-05-04 14:14:32,mattam82,I think I tamed fiat-parsers now.
13969,mattam82,2021-05-04 14:17:38,mattam82,Bench link: https://gitlab.com/coq/coq/-/jobs/1235010440
13969,mattam82,2021-05-18 12:47:38,gmalecha,@mattam82 What is the likelihood that this will make it into 8.14?
13969,mattam82,2021-05-20 18:59:00,JasonGross,@coqbot ci minimize
13969,mattam82,2021-05-20 18:59:01,coqbot-app,I was unable to minimize any of the CI targets that you requested.\nThe requested target  could not be found
13969,mattam82,2021-05-20 19:09:17,JasonGross,@coqbot ci minimize library:ci-mathcomp plugin:ci-elpi
13969,mattam82,2021-05-20 19:09:18,coqbot-app,"I was unable to minimize any of the CI targets that you requested.\nThe requested targets library:ci-mathcomp, plugin:ci-elpi could not be found"
13969,mattam82,2021-05-20 19:23:39,JasonGross,@coqbot ci minimize library:ci-mathcomp plugin:ci-elpi
13969,mattam82,2021-05-20 19:23:41,coqbot-app,"I was unable to minimize any of the CI targets that you requested.\nThe requested targets library:ci-mathcomp, plugin:ci-elpi could not be found"
13969,mattam82,2021-05-20 19:40:18,JasonGross,@coqbot ci minimize library:ci-mathcomp plugin:ci-elpi
13969,mattam82,2021-05-20 19:40:20,coqbot-app,"I was unable to minimize any of the CI targets that you requested.\nGitLab CI job library:ci-mathcomp (pull request) could not be minimized (Couldn't find base build job url for build:edge+flambda in:\nIf you need to restart the entire pipeline, you may do so directly in the GitHub interface using the ""Re-run"" button.\nThis GitLab pipeline contains the following stages and jobs:\n\n\nstage-1\n\n\nbench\n\n\nbuild:base\n\n\nbuild:base+32bit\n\n\nbuild:base+async\n\n\nbuild:edge+flambda\n\n\nbuild:edge+flambda:dune:dev\n\n"
13969,mattam82,2021-05-20 19:42:37,SkySkimmer,"You're kinda spamming this PR, please open another for testing so that github doesn't start hiding all the useful comments."
13969,mattam82,2021-05-20 19:43:37,JasonGross,Sorry about that
13969,mattam82,2021-05-21 22:34:05,JasonGross,"CI minimization now works, at least to some extent!\n@coqbot ci minimize ci-mathcomp\n(Spoiler at #14328 (comment) (The minimized file is already there))"
13969,mattam82,2021-05-21 22:34:08,coqbot-app,I am now running minimization at commit af028cf on requested target ci-mathcomp. I'll come back to you with the results once it's done.
13969,mattam82,2021-05-21 22:37:15,coqbot-app,Error: Could not minimize file  (from ci-mathcomp) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.7MiB file on GitHub Actions Artifacts under build.log)\nQxaQ%3D%3D&Expires=1621637233 [following]\n--2021-05-21 22:37:13--  https://storage.googleapis.com/gitlab-gprd-artifacts/e9/08/e90857e7bd14c877063362e92560ccc07e3c490623d322542e6f83f13867d6d1/2021_05_20/1281044620/1374823283/library_ci-mathcomp.zip?response-content-disposition=attachment%3B%20filename%3D%22library_ci-math
13969,mattam82,2021-05-24 12:34:03,JasonGross,This should hopefully work now.  @coqbot ci minimize ci-mathcomp
13969,mattam82,2021-05-24 12:34:06,coqbot-app,I am now running minimization at commit af028cf on requested target ci-mathcomp. I'll come back to you with the results once it's done.
13969,mattam82,2021-05-24 13:13:51,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcomp/ssreflect/seq.v (from ci-mathcomp) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcomp"" ""mathcomp"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-I"" ""/github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcom"
13969,mattam82,2021-05-25 17:07:16,mattam82,@JasonGross thanks a whole bunch! I'll have a look this week.
13969,mattam82,2021-05-26 10:23:20,mattam82,"@gares You might help tell me why the rewrite used to succeed here:\nx: T1\ns: seq T1\nIHs: {in s &, injective f} -> uniq (T:=T2) (map f s) = uniq (T:=T1) s\ninjf: {in x :: s &, injective f}\ny: T1\nsy: y \in s\n------------------------------------\n(true -> y \in x :: s -> x = y) -> x \in s\nrewrite mem_behead used to work. I don't understand exactly how rewriting works here with lemmas of the shape {subset foo <= bar}"
13969,mattam82,2021-05-26 10:30:05,mattam82,"I don't need to know exactly, because the bug is probably that ssr's rewrite does not realize that setoid rewriting should not be tried here, but I'm still curious :)"
13969,mattam82,2021-05-26 10:42:39,mattam82,"@JasonGross that was really helpful, I could fix the bug in no time. math-comp and other contribs using mixed math-comp/setoid rewriting should work now."
13969,mattam82,2021-05-26 12:15:38,mattam82,@coqbot ci minimize ci-fourcolor
13969,mattam82,2021-05-26 12:15:39,coqbot-app,"Error while attempting to find job minimization information:\nCould not find pipeline check for head commit d3cb230 and no summary was passed.  (Found checks: GitLab CI job plugin:ci-equations (pull request), GitLab CI job plugin:ci-perennial (pull request), GitLab CI job library:ci-iris (pull request), GitLab CI job plugin:ci-quickchick (pull request), GitLab CI job library:ci-fourcolor (pull request))"
13969,mattam82,2021-05-26 12:22:03,JasonGross,Unfortunately the way things are currently set up you need to wait for the whole pipeline to finish to minimize any of the jobs.  I'm considering changing this (or at least changing this for explicit requests).
13969,mattam82,2021-05-26 12:36:23,mattam82,"@robbertkrebbers @RalfJung the iris error is a bit more subtle. The categorization of the ! mode is done using:\nlet head_evar sigma c =\n    let rec hrec c = match EConstr.kind sigma c with\n      | Evar (evk,_)   -> evk\n      | Case (_,_,_,_,_,c,_) -> hrec c\n      | App (c,_)      -> hrec c\n      | Cast (c,_,_)   -> hrec c\n      | Proj (p, c)    -> hrec c\n      | _              -> raise Evarutil.NoHeadEvar\n    in\n    hrec c\nThat is, ofe_car ?X is considered to have an evar at its head, as ofe_car"
13969,mattam82,2021-05-26 12:41:30,mattam82,"Notably, this is not uniform with the dist projection, which, as a constant, can be applied to ?X and considered to have no evar at its head, so the - ! mode works to get the constraint unstuck."
13969,mattam82,2021-05-26 14:04:20,coqbot-app,"Hey, I have detected that there were CI failures at commit d3cb230 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a2cecb3 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-equations, ci-fourcolor, ci-iris, ci-perennial, ci-quickchick."
13969,mattam82,2021-05-26 14:10:14,JasonGross,@coqbot ci minimize
13969,mattam82,2021-05-26 14:10:29,coqbot-app,"I have initiated minimization at commit d3cb230 for the suggested targets ci-equations, ci-fourcolor, ci-iris, ci-perennial, ci-quickchick as requested."
13969,mattam82,2021-05-26 14:13:20,mattam82,"I think ! should only disallow ?X t1 ... tn, up to casts. But that change might have quite some impact, I'll make a PR to test."
13969,mattam82,2021-05-26 14:13:55,coqbot-app,Error: Could not minimize file  (from ci-iris) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 3.5MiB file on GitHub Actions Artifacts under build.log)\nve\nINSTALL theories/.coq-native/Nstdpp_list.cmi /builds/coq/coq/_install_ci/lib/coq//user-contrib/stdpp//.coq-native\nINSTALL theories/.coq-native/Nstdpp_list_numbers.cmi /builds/coq/coq/_install_ci/lib/coq//user-contrib/stdpp//.coq-native\nINSTALL theories/.coq-native/Nstdpp_functions.cmi /builds/coq/coq/_install_ci/lib/coq//
13969,mattam82,2021-05-26 14:14:19,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/equations/examples/AlmostFull.v (from ci-equations) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 58KiB file on GitHub Actions Artifacts under bug.v)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.extraction.Extrac"
13969,mattam82,2021-05-26 14:15:27,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fourcolor/theories/realcategorical.v (from ci-fourcolor) (full log on GitHub Actions)\nMinimized Coq File\n(* (c) Copyright 2006-2018 Microsoft Corporation and Inria.                  *)\n(* Distributed under the terms of CeCILL-B.                                  *)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation "
14813,thery,2021-08-27 20:58:11,thery,related to #14809
14813,thery,2021-08-31 09:33:11,olaure01,@thery there is apparently a problem with an empty line in changelog.
14813,thery,2021-08-31 09:40:25,thery,@olaure01  sorry with md and rst I am getting lost. I've tried something.
14813,thery,2021-08-31 11:06:07,coqbot-app,"Hey, I have detected that there were CI failures at commit 20c1f1f without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14813,thery,2021-08-31 12:29:01,thery,@Alizter  sorry I've deleted your comment by mistake (I wanted to delete my responses that were not appropriate).\nYes @herbelin in  #14809 mentioned that it would be nice to have some kind of subtyping in this kind of situation.
14813,thery,2021-08-31 12:48:20,coqbot-app,"Hey, I have detected that there were CI failures at commit 20c1f1f without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14813,thery,2021-08-31 12:51:44,coqbot-app,"Hey, I have detected that there were CI failures at commit 20c1f1f without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14813,thery,2021-08-31 12:53:20,coqbot-app,"Hey, I have detected that there were CI failures at commit 20c1f1f without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14813,thery,2021-08-31 12:54:03,Alizter,"@thery no worries, let me ask again: is it possible to use the (_, _)  notation for both prod and sigma? If not what are the blockers? IIRC the notation for Sigma is left assoc whilst prod is right."
14813,thery,2021-08-31 12:56:37,coqbot-app,"Hey, I have detected that there were CI failures at commit 20c1f1f without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14813,thery,2021-08-31 13:00:32,coqbot-app,"Hey, I have detected that there were CI failures at commit 20c1f1f without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14813,thery,2021-08-31 13:25:03,thery,@Alizter I am not an expert in notation but if I read this Coq seems to enforce that a notation has always the same associativity. Maybe @herbelin  is more expert than me in that matters.
14813,thery,2021-08-31 13:35:06,Alizter,"Yes, I suspected the reserved notation had something to do with it. I wonder if it is a historical accident that we have both products and sigma types rather than defining products as a special case of sigma.\nWhy for instance are product types right associative?\nI guess these questions are for @herbelin"
14813,thery,2021-08-31 18:22:03,herbelin,"Yes, I suspected the reserved notation had something to do with it. I wonder if it is a historical accident that we have both products and sigma types rather than defining products as a special case of sigma.\nWhy for instance are product types right associative?\n\nIt is an historical accident that associativity of and/or/exists and prod/sum do not match. Changing it now would be quite complicated :(\nHowever, the difference between product and sigma types is also motivated by the difference of und"
14813,thery,2021-09-01 11:14:55,herbelin,"It is an historical accident that associativity of and/or/exists and prod/sum do not match. Changing it now would be quite complicated :(\n\nActually, now that I remember, it is not so much an accident.\nSubtraction and division associate by default on the left, so t + u - v - w has to be interpreted as ((t + u) - v) - w and t * u / v / w has to be interpreted as ((t * u) / v) / w.\nConversely, existential quantification can be nested only on the right. Then, I presumed that conjunction and disjunct"
14813,thery,2021-09-01 11:21:11,olaure01,But /\ and * associate differently #7676
14813,thery,2021-09-01 11:48:39,herbelin,"An additional problem is that * is used both as an arithmetic operator (with the constraint coming from /) and as type combinator (which probably is a bad choice, that's another question). With a smarter system of notations, we could have different precedences of binary operators depending on the scope but the current constraint is that we need the same associativity. (Typically, to support associativity based on the interpretation, one would need the parser to simply return a list of expression"
14813,thery,2021-09-01 13:47:43,Zimmi48,"I wanted to delete my responses that were not appropriate\n\nYou should probably hide comments instead of deleting them, as this would avoid such mistakes."
14813,thery,2021-09-01 14:29:03,olaure01,"@herbelin\n\nWhile at it, there was the question at some time to provide an alternative syntax to sigT which can be iterated easily. The candidate was sigma binders, typ (following the model of exists binders, typ). Do you have an opinion?\nIn this case, we could even make the notation ( t ; u ) recursive (with associativity on the right...)\n\nDo you mean being able to write something like { x & P1 x & P2 x & P3 x & P4 x } or  { x | Q1 x & Q2 x & Q3 x & Q4 x }?\nI would be very happy to have this."
14813,thery,2021-09-02 07:54:56,herbelin,"@herbelin\n\nWhile at it, there was the question at some time to provide an alternative syntax to sigT which can be iterated easily. The candidate was sigma binders, typ (following the model of exists binders, typ). Do you have an opinion?\nIn this case, we could even make the notation ( t ; u ) recursive (with associativity on the right...)\n\nDo you mean being able to write something like { x & P1 x & P2 x & P3 x & P4 x } or { x | Q1 x & Q2 x & Q3 x & Q4 x }?\nI would be very happy to have this.\n\nYe"
14813,thery,2021-09-02 08:21:22,olaure01,Should we consider first merging the PR in its current state? It seems without problem while the other directions probably deserve more discussion/work.
14813,thery,2021-09-02 08:44:05,herbelin,"Should we consider first merging the PR in its current state? It seems without problem while the other directions probably deserve more discussion/work.\n\nA pending question is also whether it is worth going now to the generalization Notation ""( x ; .. ; y ; z )"" := (existT _ x .. (existT _ y z) ..) or if if is better to have a discussion about it too.\nIn any case, I'm ok with merging this one now (or the part of it which does not depend on #14809 if #14809 is finally merged after)."
14813,thery,2021-09-02 13:06:53,Alizter,What's going on with the ci?
14813,thery,2021-09-02 13:59:43,herbelin,What's going on with the ci?\n\nCategory Theory fails everywhere. Windows64 seems unrelated (and I saw it failing easily recently).
14813,thery,2021-09-08 08:31:09,Alizter,@coqbot merge now
14863,ppedrot,2021-09-08 10:55:43,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14863,ppedrot,2021-09-08 12:11:54,coqbot-app,"Hey, I have detected that there were CI failures at commit 64aaaf3 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit c6ab549 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following targets (which I do not suggest minimizing):\n\nci-fiat_crypto (because base job at c6ab549 failed)\nci-fiat_crypto_legacy (b"
14863,ppedrot,2021-09-08 12:15:39,coqbot-app,"Hey, I have detected that there were CI failures at commit 64aaaf3 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit c6ab549 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following targets (which I do not suggest minimizing):\n\nci-fiat_crypto (because base job at c6ab549 failed)\nci-fiat_crypto_legacy (b"
14863,ppedrot,2021-09-08 12:28:23,Zimmi48,"I don't get how this is a bug fix. There is a bug, which is the behavior of the Unicode input mode in the presence of certain key bindings. This PR gives more flexibility to the user and a better workaround than what we have today, but it doesn't fix the bug, does it?"
14863,ppedrot,2021-09-08 12:37:35,ppedrot,"it doesn't fix the bug, does it?\n\nThe bug does not seem to come from CoqIDE proper, since the callback is triggered by any keyboard input that looks like <Shift>Space. I don't know why BEPO insecable space does this, but in any case the problem would rather lie in GTK, upon which we have zero control. Apart from changing the key combination, I don't see how we could fix this thus.\nAlso, as already mentioned during the original discussion, I find the unicode input feature both utterly useless and"
14863,ppedrot,2021-09-09 11:46:30,Alizter,Shall I merge tomorrow?
14863,ppedrot,2021-09-09 12:50:46,Zimmi48,The current state is fine to me. @charguer may want to have a look though.
14863,ppedrot,2021-09-09 15:25:31,charguer,"I have fine having unicode bindings ""off"" by default, provided there is an easily accessible menu for turning it on.\nThis is probably better than having users unable to type in a backslash without a mess at the next character.\n\nwhy on earth should we have to reimplement a homegrown version of it.\nA few years back, I spent several day trying quite a fair number of unicode input mechanisms that were advertized as ""usable"" on Ubuntu, and none was delivering the experience I was looking for. If you "
14863,ppedrot,2021-09-09 15:43:57,herbelin,"As far as my experience is concerned, there used to be an input method for CoqIDE implemented by Vincent G. long time ago It was too complicated to install and I renounced. The approach working out of the box provided by the current mechanism (without falling in #14856) is with this respect pretty convenient."
14863,ppedrot,2021-09-09 15:45:27,Zimmi48,"I have fine having unicode bindings ""off"" by default, provided there is an easily accessible menu for turning it on.\n\nI don't think that this PR turns the mode off by default, does it?"
14863,ppedrot,2021-09-09 15:52:18,Alizter,"During my testing, it was on by default."
14863,ppedrot,2021-09-10 06:38:07,ppedrot,"No, this PR does not turn the mode off by default. The default value is true which means ""on"".\n(EDIT: it's even document so...)"
14863,ppedrot,2021-09-10 08:37:54,Alizter,I will merge tomorrow if there are no objections.
14863,ppedrot,2021-09-11 08:19:52,Alizter,@coqbot merge now
14824,herbelin,2021-08-31 20:04:48,coqbot-app,"Hey, I have detected that there were CI failures at commit fb2087d without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14790,SkySkimmer,2021-08-17 11:52:10,coqbot-app,"Hey, I have detected that there were CI failures at commit eef65fe without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 86cd9dd succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-vst."
13107,SkySkimmer,2020-09-28 15:36:35,maximedenes,"@SkySkimmer Doesn't the build:base failure look strange?\nThe heuristic suggested by @ggonthier was ""putting the | immediately after the last argument on which the return type depends, when other arguments depend on it""."
13107,SkySkimmer,2020-09-29 10:51:24,SkySkimmer,"@SkySkimmer Doesn't the build:base failure look strange?\n\nI forgot to change the .mllib\nThe dune build is not affected and breaks on a real issue:\nInductive PeanoView : positive -> Type :=\n| PeanoOne : PeanoView 1\n| PeanoSucc : forall p, PeanoView p -> PeanoView (succ p).\n(* auto hint: Arguments PeanoSucc _ & _. *)\nCheck PeanoSucc _ PeanoOne : PeanoView 2.\n(* The term ""PeanoSucc ?p ?p0"" has type ""PeanoView (succ ?p)"" while it is expected to have type\n ""PeanoView 2"".* )\nie succ _ is not unifiable"
13107,SkySkimmer,2020-10-01 14:08:58,gares,"theories/Init/Nat.v:\nDefinition succ := S.\nHum, how is that evarconv does not unfold succ ?"
13107,SkySkimmer,2020-10-01 14:10:44,gares,"Oh I see, it's another succ"
13107,SkySkimmer,2020-10-01 14:34:36,SkySkimmer,There is another failure in Fin.v around\nFixpoint L {m} n (p : t m) : t (m + n) :=\n  match p with |F1 => F1 |FS p' => FS (L n p') end.\nIf we\nSet Printing All.\nPrint L.\nin master:\nL = \nfix L (m n : nat) (p : t m) {struct p} : t (Nat.add m n) :=\n  match p in (t n0) return (t (Nat.add n0 n)) with\n  | @F1 n0 =>\n      @F1\n        ((fix add (n1 m0 : nat) {struct n1} : nat :=\n            match n1 return nat with\n            | O => m0\n            | S p0 => S (add p0 m0)\n            end) n0 n)\n  | @FS n0
13107,SkySkimmer,2020-10-01 14:50:13,SkySkimmer,I think we probably want a less agressive heuristic.\nMaybe put the bidi hint after the longest prefix of arguments which appear rigidly (for conversion) in the output type?\nThe L fixpoint would still need to unfold addition to uncover the S though.
13107,SkySkimmer,2020-10-01 15:03:50,gares,The first error makes me think that a failure in bidir hint application makes sense if I tell Coq to use  the hint. But if I don't a failure should fallback to the usual code path imo.
13107,SkySkimmer,2020-10-01 15:05:57,gares,Rigidly = arguments to a rigid term?
13107,SkySkimmer,2020-10-01 15:08:25,gares,"One could also say that the automatic attempt of bidir is performed using fo unif. That is, if you can trivially read some info fine, otherwise try the usual way. If the user tells you do it, do it full throttle as today. This would avoid the unfolding."
13107,SkySkimmer,2021-06-29 12:43:47,SkySkimmer,"Version based on rigidly matching the tycon at https://github.com/SkySkimmer/coq/tree/auto-bidi-hints-rigid\nrunning at https://gitlab.com/SkySkimmer/coq/-/pipelines/328961501\nWe get different errors in the stdlib, but they look nicer than producing big naked fix terms so may be more practical (some of the errors are the same, like in fmapfacts).\nmenhir error because I didn't account for coercions: in fun x : sigT (fun _ : supertype => _) => projT1 x : subtype we must not use bidi for projT1 in g"
13107,SkySkimmer,2021-06-29 13:31:03,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
13107,SkySkimmer,2021-06-29 14:22:28,JasonGross,"I'm going to have coqbot minimize the CI failures (even though it looks like the test-suite is hanging on success/Nia?); I want to test the minimizer some more, and hopefully the minimized examples will also be useful for development.\n@coqbot ci minimize"
13107,SkySkimmer,2021-06-29 14:22:29,coqbot-app,"I was unable to minimize any of the CI targets that you requested.\nHowever, you may want to try again once the pipeline for the head commit (7c15938) finishes.\nThe following requests were not fulfilled:\n\ndoc:refman could not be minimized (Could not separate 'doc:refman' into job_kind:ci-target.)\ndoc:refman could not be minimized (Could not separate 'doc:refman' into job_kind:ci-target.)\ndoc:refman could not be minimized (Could not separate 'doc:refman' into job_kind:ci-target.)\n\nAdditionally, th"
13107,SkySkimmer,2021-06-29 14:40:15,JasonGross,"(Oops, there was a bug in coq/bot#152, I've since fixed it, let's do this again.)\nI'm going to have coqbot minimize the CI failures (even though it looks like the test-suite is hanging on success/Nia?Edit: Actually, the test-suite fails, rather than hangs.  Is it usual for it to take 80 minutes to run, though?); I want to test the minimizer some more, and hopefully the minimized examples will also be useful for development.\n@coqbot ci minimize"
13107,SkySkimmer,2021-06-29 14:41:10,coqbot-app,"I have initiated minimization at commit 7c15938 for the suggested targets ci-bbv, ci-bedrock2, ci-bignums, ci-compcert, ci-coq_performance_tests, ci-coq_tools, ci-cross_crypto, ci-elpi, ci-equations, ci-fiat_crypto_legacy, ci-fiat_parsers, ci-hott, ci-iris, ci-mathcomp, ci-mtac2, ci-perennial, ci-relation_algebra, ci-rewriter, ci-tlc, ci-unimath, ci-verdi_raft, ci-vst as requested.\nHowever, you may want to try again once the pipeline for the head commit (7c15938) finishes."
13107,SkySkimmer,2021-06-29 14:43:55,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/cross_crypto/src/Minimalistic.v (from ci-cross_crypto) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 122KiB file on GitHub Actions Artifacts under bug.v)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.Logic.Eqdep_d"
13107,SkySkimmer,2021-06-29 14:44:05,coqbot-app,Error: Could not minimize file  (from ci-elpi) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 2.9MiB file on GitHub Actions Artifacts under build.log)\nq-native/Nelpi_apps_eltac_fail.cmx /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps/eltac//.coq-native\nINSTALL theories/.coq-native/Nelpi_apps_eltac_discriminate.cmx /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps/eltac//.coq-native\nINSTALL theories/.coq-native/Nelpi_apps_eltac_injection.cmx /builds/co
13107,SkySkimmer,2021-06-29 14:44:15,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/equations/test-suite/issues/issue7.v (from ci-equations) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.ssr.ssreflect.\nRequire Coq.Unicode.Utf8.\nReq"
13107,SkySkimmer,2021-06-29 14:44:32,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/relation_algebra/traces.v (from ci-relation_algebra) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-projection-no-head-constant"" ""-w"" ""-notation-overridden"" ""-w"" ""-redundant-canonical-projection"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/relation_algebra"" ""RelationAlgebra"" """
13107,SkySkimmer,2021-06-29 14:44:40,coqbot-app,Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/tlc/src/LibFixDemos.v (from ci-tlc) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 46KiB file on GitHub Actions Artifacts under bug.v)\n(**************************************************************************\n* TLC: A library for Coq                                                  *\n* Examples for LibFix                                                     *\n********************************************
13107,SkySkimmer,2021-06-29 14:44:41,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/external/stdpp/theories/vector.v (from ci-perennial) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(** This file collects general purpose definitions and theorems on vectors\n(lists of fixed length). It uses the definitions from the standard library, but\nrenames or changes their notations, so that it becomes more consistent with the\nnaming conventions in this development. *)"
13107,SkySkimmer,2021-06-29 14:45:02,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq."
13107,SkySkimmer,2021-06-29 14:45:36,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil/Word/ZifyLittleEndian.v (from ci-bedrock2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.ZArith.ZArith.\nRequire C"
13107,SkySkimmer,2021-06-29 14:45:53,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/mtac2/theories/intf/MTele.v (from ci-mtac2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-bt"" ""-w"" ""-unrecognized-unicode"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/mtac2/theories"" ""Mtac2"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_c"
13107,SkySkimmer,2021-06-29 14:47:10,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/unimath/UniMath/Foundations/PartA.v (from ci-unimath) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-type-in-type"" ""-w"" ""-notation-overridden"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/unimath/UniMath"" ""UniMath"" ""-Q"" "
13107,SkySkimmer,2021-06-29 14:47:52,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcomp/ssreflect/ssrnat.v (from ci-mathcomp) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-projection-no-head-constant"" ""-w"" ""-redundant-canonical-projection"" ""-w"" ""-notation-overridden"" ""-w"" ""+duplicate-clear"" ""-w"" ""-ambiguous-paths"" ""-w"" ""+non-primitive-record"" ""-w"" ""+undeclared-scope"" ""-w"" ""-deprecated-hint-without-"
13107,SkySkimmer,2021-06-29 14:48:20,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Basics/PathGroupoids.v (from ci-hott) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hott/theories"" ""HoTT"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci"
13107,SkySkimmer,2021-06-29 14:48:49,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Common.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parser"
13107,SkySkimmer,2021-06-29 14:50:02,JasonGross,"Looks like many of these did not work, I'll diagnose and debug.  Some of them did work, though."
13107,SkySkimmer,2021-06-29 14:51:26,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto_legacy/bbv/src/bbv/Word.v (from ci-fiat_crypto_legacy) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-notation-overridden"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto_legacy/src"" ""Crypto"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_cry"
13107,SkySkimmer,2021-06-29 14:51:29,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bbv/src/bbv/Word.v (from ci-bbv) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bbv/src/bbv"" ""bbv"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-top"" ""Wor"
13107,SkySkimmer,2021-06-29 14:54:16,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/compcert/lib/UnionFind.v (from ci-compcert) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-undeclared-scope"" ""-w"" ""-omega-is-deprecated"" ""-dump-glob"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/doc/UnionFind.glob"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/lib"" ""compcert.lib"" ""-R"" ""/github/w"
13107,SkySkimmer,2021-06-29 14:56:20,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/rewriter/src/Rewriter/Language/Language.v (from ci-rewriter) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+deprecated-hint-constr,+fragile-hint-constr,+variable-collision,+unexpected-implicit-decla"
13107,SkySkimmer,2021-06-29 14:56:29,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/msl/sig_isomorphism.v (from ci-vst) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/sepcomp"" ""VST.sepcomp"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/v"
13107,SkySkimmer,2021-06-29 16:11:59,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/verdi/core/TotalMapExecutionSimulations.v (from ci-verdi_raft) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/verdi/core"" ""Verdi"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/verdi/lib"" ""Verdi"""
13107,SkySkimmer,2021-06-29 16:23:43,JasonGross,"Summary of minimizer results so far:\n\n\nThe following generate usable minimized test-cases: ci-mtac2, ci-unimath, ci-mathcomp, ci-hott, ci-fiat_parsers, ci-bbv, ci-compcert (looks like a change in autogenerated names), ci-rewriter, ci-vst (seems to be a regression in Program mode proj1_sig insertion, presumably it has to be moved later in unification or something?), and ci-verdi_raft\n\n\nci-fiat_parsers and ci-vst generate especially-short 2-definition test-cases where I expect it's clear exactly w"
13107,SkySkimmer,2021-06-29 16:42:25,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/stdpp/theories/vector.v (from ci-iris) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-hint-rewrite-without-locality"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/stdpp/theories"" ""stdpp"" ""-Q"" ""/github/workspace/builds/coq/coq-failing"
13107,SkySkimmer,2021-06-29 17:03:19,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bignums/BigN/NMake.v (from ci-bignums) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 45KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bignums"" ""Bignums"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/u"
13107,SkySkimmer,2021-06-29 19:42:28,JasonGross,"Minimization of ci-perennial should work now, minimizing ci-elpi is blocked on math-comp/hierarchy-builder#256\n@coqbot ci minimize ci-perennial\nEdit: Oops, forgot to push the change."
13107,SkySkimmer,2021-06-29 19:42:33,coqbot-app,I am now running minimization at commit 7c15938 on requested target ci-perennial. I'll come back to you with the results once it's done.
13107,SkySkimmer,2021-06-29 19:44:32,JasonGross,"Minimization of ci-perennial should work now, minimizing ci-elpi is blocked on math-comp/hierarchy-builder#256\n@coqbot ci minimize ci-perennial"
13107,SkySkimmer,2021-06-29 19:44:41,coqbot-app,I am now running minimization at commit 7c15938 on requested target ci-perennial. I'll come back to you with the results once it's done.
13107,SkySkimmer,2021-06-29 19:46:50,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/external/stdpp/theories/vector.v (from ci-perennial) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(** This file collects general purpose definitions and theorems on vectors\n(lists of fixed length). It uses the definitions from the standard library, but\nrenames or changes their notations, so that it becomes more consistent with the\nnaming conventions in this development. *)"
13107,SkySkimmer,2021-06-29 19:57:28,coqbot-app,Error: Could not minimize file  (from ci-coq_tools) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 2.8MiB file on GitHub Actions Artifacts under build.log)\ng: _build_ci/coq_tools/examples/example_42/\n  inflating: _build_ci/coq_tools/examples/example_42/.A.aux  \n  inflating: _build_ci/coq_tools/examples/example_42/.B.aux  \n  inflating: _build_ci/coq_tools/examples/example_42/.C.aux  \n  inflating: _build_ci/coq_tools/examples/example_42/.bug_42.aux  \n   creating: _build_ci/c
13107,SkySkimmer,2021-06-29 20:19:49,JasonGross,@coqbot ci minimize ci-equations
13107,SkySkimmer,2021-06-29 20:19:53,coqbot-app,I am now running minimization at commit 7c15938 on requested target ci-equations. I'll come back to you with the results once it's done.
13107,SkySkimmer,2021-06-29 20:24:23,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/equations/test-suite/issues/issue7.v (from ci-equations) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/equations/test-suite"" ""TestSuite"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/equations/theories"" ""Equations"" ""-Q"" ""/github"
13107,SkySkimmer,2021-06-29 21:25:24,JasonGross,Fixed issue with comment stripping at JasonGross/coq-tools@f3c3d32\n@coqbot ci minimize ci-relation_algebra
13107,SkySkimmer,2021-06-29 21:25:28,coqbot-app,I am now running minimization at commit 7c15938 on requested target ci-relation_algebra. I'll come back to you with the results once it's done.
13107,SkySkimmer,2021-06-29 21:35:37,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/relation_algebra/traces.v (from ci-relation_algebra) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-projection-no-head-constant"" ""-w"" ""-notation-overridden"" ""-w"" ""-redundant-canonical-projection"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/relation_algebra"" ""RelationAlgebra"" """
14771,Zimmi48,2021-08-12 11:12:06,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14771,Zimmi48,2021-08-12 12:23:05,coqbot-app,"Hey, I have detected that there were CI failures at commit 7517fa4 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 080920e succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-aac_tactics, ci-bedrock2, ci-color, ci-coq_dpdgraph, ci-coqprime, ci-coquelicot, ci-corn, ci-equations, ci-fiat_crypto_legacy, "
14771,Zimmi48,2021-08-12 15:50:41,Zimmi48,"The compatibility impact is too large to follow up on this idea, so I'm removing the last commit (changing the default value) from this PR. The rest can be considered clean-up / refactoring."
14771,Zimmi48,2021-08-16 10:11:01,SkySkimmer,How are the stdlib changes related to the ocaml changes? Was it just to deal with the compat break from the removed commit?
14771,Zimmi48,2021-08-16 10:30:41,Zimmi48,"Yes, I could split this into two unrelated PRs if you want."
14771,Zimmi48,2021-08-16 10:35:31,SkySkimmer,@coqbot merge now
11966,olaure01,2020-03-31 09:52:04,anton-trunov,"Hi @olaure01, I'm wondering about your use case for this new feature. Could you please expand a bit on that?"
11966,olaure01,2020-03-31 10:54:03,olaure01,"This comes from the development of the yalla library (a library for the formalization of linear logic results in Coq).\nI'll give other justifications but let me explain the path I followed in yalla.\nI want to define proofs as proofs... that is not through a provability predicate:\nproof : list formula -> Type\nrather than\nproof : list formula -> Prop\ni.e. I want proofs as first-class objects, not provability.\nVarious reasons for that, for example:\n\nit allows to define the length of a proof as a fu"
11966,olaure01,2020-04-22 21:05:19,herbelin,"@olaure01 : I'd be rather in agreement with your arguments. Both the proof-irrelevant and the proof-relevant versions of In are useful (as well as a version to bool).\nSomehow, I would however lean to add the Type version already in List rather than creating a new file. The reason is that I'm worrying that the files otherwise diverge (for instance, Logic_Type is not very lively). The drawback is that this makes List maybe more complex to enter for a newcomer. Do you think that this would be manag"
11966,olaure01,2020-04-22 21:37:48,olaure01,"@herbelin\n\nSomehow, I would however lean to add the Type version already in List rather than creating a new file. The reason is that I'm worrying that the files otherwise diverge (for instance, Logic_Type is not very lively). The drawback is that this makes List maybe more complex to enter for a newcomer. Do you think that this would be manageable/realistic to dispatch all of ListType in List?\n\nI was following the pattern from Classes: RelationClasses/CRelationClasses, Morphisms/CMorphisms, etc."
11966,olaure01,2020-04-22 21:56:31,herbelin,"I was following the pattern from Classes: RelationClasses/CRelationClasses, Morphisms/CMorphisms, etc. but I can do a direct integration in List here.\nMaybe the approach with two files is more natural in some situations like Permutation_Type where the main inductive is duplicated and moved into Type.\n\nAh, right. Do you know why the C variants in Classes are not enough? Is it to keep some control on the generation of universe variables? Is it to have some control on extraction?\n\nOK. By curiosity,"
11966,olaure01,2020-04-22 22:14:05,olaure01,"@herbelin\n\nDo you know why the C variants in Classes are not enough? Is it to keep some control on the generation of universe variables? Is it to have some control on extraction?\n\nDo you mean: why not removing RelationClasses since we have CRelationClasses?\nIf so: I don't know.\nWhat I know is:\n\nnot all files have their C variant, thus I had to create some more: CEqualities or COrders\nrelation and crelation do not behave the same wrt (setoid) rewriting: #7675, #11011, and this is quite a nightmar"
11966,olaure01,2020-04-29 12:46:30,olaure01,"I am stuck with the two CI failures:\n\nThe metacoq one is due to some extraction ""not handled yet"". Is there a standard solution? I do not see it as a reason to modify statements. Does it suggests splitting the file so that metacoq extracts only part of it? or maybe this would not solve the problem, I don't know.\nThe rewriter one seems to be about some universe problem I simply do not understand.\n\nHelp welcome..."
11966,olaure01,2021-07-23 17:38:14,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
11966,olaure01,2021-07-23 17:42:22,Zimmi48,"Sorry I missed that you were asking for help here. We should request involvement of maintainers of the affected projects to decide what to do. If you rebase the PR, we might also be able to use the auto-minimization feature of the bot to better understand the rewriter failure."
11966,olaure01,2021-07-25 15:23:02,coqbot-app,"Hey, I have detected that there were CI failures at commit 31cf6f6 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 5a7be70 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-metacoq, ci-rewriter, ci-vst."
11966,olaure01,2021-07-25 16:58:40,olaure01,@coqbot ci minimize
11966,olaure01,2021-07-25 16:58:47,coqbot-app,"I have initiated minimization at commit 31cf6f6 for the suggested targets ci-metacoq, ci-rewriter, ci-vst as requested."
11966,olaure01,2021-07-25 17:04:47,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/metacoq/template-coq/theories/Extraction.v (from ci-metacoq) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* Distributed under the terms of the MIT license. *)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic"
11966,olaure01,2021-07-25 18:26:22,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/rewriter/src/Rewriter/Rewriter/Examples/PerfTesting/SieveOfEratosthenes.v (from ci-rewriter) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+deprecated-hint-constr,+fragile-hint-constr,+variable-coll"
11966,olaure01,2021-07-25 22:15:29,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/floyd/closed_lemmas.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 86KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/v"
11966,olaure01,2021-07-26 03:32:24,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/floyd/closed_lemmas.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 81KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/v"
11966,olaure01,2021-07-26 05:49:12,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/floyd/closed_lemmas.v (from ci-vst) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 80KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/sepcomp"" ""VST.sepcomp"" ""-Q"" ""/github/workspace/builds"
11966,olaure01,2021-10-12 14:59:42,coqbot-app,"Hey, I have detected that there were CI failures at commit 782eabc without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ad978df succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-metacoq, ci-rewriter, ci-vst."
14810,ppedrot,2021-08-26 15:46:03,ppedrot,"I think I'll need a bit of help to write the overlays, this PR seems to have weird consequences on Equations (cc @mattam82) and Mtac2 (cc @Janno)."
14810,ppedrot,2021-08-26 16:27:54,Janno,"I am happy to help but it will take me a while to set everything up on this laptop. As far as I can tell from reading the code, it is failing after (1) defining ty_c to be a Sort (either Type or Prop), (2) creating an evar of that sort, and (3) cumulatively unifying that evar with a given type dtype disallowing all reduction. Step (1) uses CClosure's weak head reduction to compute away S.stype_of isort which should yield either Prop or Type depending on the value of isort.\nI don't yet fully unde"
14810,ppedrot,2021-08-26 16:36:37,coqbot-app,"Hey, I have detected that there were CI failures at commit 2ecbee5 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 18fe7e8 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-mtac2."
14810,ppedrot,2021-08-26 16:43:59,Janno,Making a new comment because I didn't want to butcher the previous one even more. The problem is a bit more fundamental: The Mtac2 reduction strategy RedWhd RedAll stands for RedWhd [...; RedDelta; ..] which is translated into CClosure's weak head reduction with fDelta with the expectation that this means all delta reductions are performed. This worked before. I suppose this PR changes that.
14810,ppedrot,2021-08-26 18:58:26,coqbot-app,"Hey, I have detected that there were CI failures at commit 2ecbee5 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 18fe7e8 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-mtac2."
14810,ppedrot,2021-08-26 23:07:24,ppedrot,"The problem is a bit more fundamental\n\nWell if that's the only problem it should be easy. We just have to wrap the RedDelta flag to fDELTA + full transparent state. I think I've seen where this was occurring, I'll have a try at a quick fix."
14810,ppedrot,2021-08-27 14:22:56,coqbot-app,"Hey, I have detected that there were CI failures at commit 2ecbee5 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 18fe7e8 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-mtac2."
14810,ppedrot,2021-08-27 14:43:46,ppedrot,Seems to be working as intended on Mtac2 now!
14810,ppedrot,2021-08-30 08:34:55,ppedrot,"I believe this is ready and needs an assignee. For a bench with an additional optim, see #14808."
14810,ppedrot,2021-09-06 13:45:05,SkySkimmer,@coqbot merge now
14810,ppedrot,2021-09-06 13:45:07,coqbot-app,@SkySkimmer: Please take care of the following overlays:\n\n14810-ppedrot-cclosure-cleanup-fdelta.sh
14746,herbelin,2021-08-06 12:47:52,coqbot-app,"Hey, I have detected that there were CI failures at commit 48be2a8 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 3fd62a8 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-hott, ci-math_classes, ci-menhir, ci-unimath, ci-vst."
14746,herbelin,2021-08-06 14:10:41,herbelin,@coqbot ci minimize
14746,herbelin,2021-08-06 14:10:50,coqbot-app,"I have initiated minimization at commit 932fceb for the suggested targets ci-bedrock2, ci-hott, ci-math_classes, ci-menhir, ci-unimath, ci-vst as requested.\nHowever, you may want to try again once the pipeline for the head commit (932fceb) finishes."
14746,herbelin,2021-08-06 14:30:59,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/menhirlib/coq-menhirlib/src/Interpreter.v (from ci-menhir) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/menhirlib/coq-menhirlib/src"" ""MenhirLib"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/"
14746,herbelin,2021-08-06 14:55:47,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/math_classes/theory/adjunctions.v (from ci-math_classes) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/math_classes"" ""MathClasses"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-c"
14746,herbelin,2021-08-06 15:04:18,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Spaces/Circle.v (from ci-hott) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hott/theories"" ""HoTT"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hott/c"
14746,herbelin,2021-08-06 15:06:12,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/riscv-coq/src/riscv/Platform/MaterializeRiscvProgram.v (from ci-bedrock2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/riscv-coq/src/riscv"" ""riscv"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/bui"
14746,herbelin,2021-08-06 18:31:19,coqbot-app,"Hey, I have detected that there were CI failures at commit 2cf1c92 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 3fd62a8 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-hott, ci-math_classes, ci-unimath."
14746,herbelin,2021-08-06 19:29:26,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/unimath/UniMath/SyntheticHomotopyTheory/Circle.v (from ci-unimath) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 53KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-type-in-type"" ""-w"" ""-notation-overridden"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace"
14746,herbelin,2021-08-06 19:32:28,coqbot-app,"Minimized File  (from ci-unimath) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 53KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-type-in-type"" ""-w"" ""-notation-overridden"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/unimath/UniMath"" ""UniMath"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/"
14746,herbelin,2021-08-18 17:00:40,herbelin,@coqbot ci minimize
14746,herbelin,2021-08-18 17:00:41,coqbot-app,"I have initiated minimization at commit 0149d1f for the suggested target ci-hott as requested.\nHowever, you may want to try again once the pipeline for the head commit (0149d1f) finishes."
14746,herbelin,2021-08-18 17:06:24,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Spaces/Spheres.v (from ci-hott) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; mode: visual-line -*- *)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire HoTT.Basics.Nota"
14746,herbelin,2021-10-04 02:17:21,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
13072,maximedenes,2020-09-23 08:01:33,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
13072,maximedenes,2021-06-07 11:45:21,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
13072,maximedenes,2021-06-07 14:39:06,coqbot-app,"Hey, I have detected that there were CI failures at commit 855d914 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 61b8f54 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-coquelicot, ci-fiat_crypto_legacy, ci-fiat_parsers, ci-hott, ci-metacoq, ci-quickchick, ci-rewriter, ci-verdi_raft."
13072,maximedenes,2021-06-09 15:07:53,JasonGross,Maybe the minimizer can give small examples that are helpful here?\n@coqbot ci minimize
13072,maximedenes,2021-06-09 15:07:54,coqbot-app,"I was unable to minimize any of the CI targets that you requested.\nThe following requests were not fulfilled:\n\nci-iris was not minimized because no error message was found\nci-perennial was not minimized because no error message was found\nci-perennial was not minimized because no error message was found\nAdditionally, the requested targets "", ""performed_via_github_app"":null}, ""repository"":{""id"":1377159, ""node_id"":""MDEwOlJlcG9zaXRvcnkxMzc3MTU5"", ""name"":""coq"", ""full_name"":""coq/coq"", ""private"":false,"
13072,maximedenes,2021-06-09 15:18:33,JasonGross,"Let's try again with an explicit list\n@coqbot ci minimize ci-coquelicot, ci-fiat_crypto_legacy, ci-fiat_parsers, ci-hott, ci-metacoq, ci-quickchick, ci-rewriter, ci-verdi_raft"
13072,maximedenes,2021-06-09 15:18:55,coqbot-app,"I am now running minimization at commit 855d914 on requested targets ci-coquelicot, ci-fiat_crypto_legacy, ci-fiat_parsers, ci-hott, ci-metacoq, ci-quickchick, ci-rewriter, a, a, to, write. I'll come back to you with the results once it's done.\nci-iris was not minimized because no error message was found\nAdditionally, the requested targets ci-verdi_raft"", ""performed_via_github_app"":null}, ""repository"":{""id"":1377159, ""node_id"":""MDEwOlJlcG9zaXRvcnkxMzc3MTU5"", ""name"":""coq"", ""full_name"":""coq/coq"", """
13072,maximedenes,2021-06-09 15:21:58,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/MinimalParseOfParse.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 55KiB file on GitHub Actions Artifacts under bug.v)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq"
13072,maximedenes,2021-06-09 15:24:47,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coquelicot/theories/Hierarchy.v (from ci-coquelicot) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/coquelicot/theories"" ""Coquelicot"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-cont"
13072,maximedenes,2021-06-09 15:25:15,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto_legacy/src/Algebra/Monoid.v (from ci-fiat_crypto_legacy) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-notation-overridden"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto_legacy/src"" ""Crypto"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_c"
13072,maximedenes,2021-06-09 15:30:20,coqbot-app,"Error: Could not minimize file  (from ci-metacoq) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 3.4MiB file on GitHub Actions Artifacts under build.log)\nances outside of sections without\nspecifying an explicit locality is therefore deprecated. It is recommended to\nuse ""export"" whenever possible.\n[deprecated-instance-without-locality,deprecated]\nFile ""/github/workspace/builds/coq/coq-passing/_build_ci/metacoq/template-coq/theories/Reflect.v"", line 377, characters 0-8:\nWarn"
13072,maximedenes,2021-06-09 15:36:13,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Basics/Equivalences.v (from ci-hott) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hott/theories"" ""HoTT"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/"
13072,maximedenes,2021-06-09 15:39:23,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/rewriter/src/Rewriter/Language/Language.v (from ci-rewriter) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+deprecated-hint-constr,+fragile-hint-constr,+variable-collision,+unexpected-implicit-decla"
13072,maximedenes,2021-06-09 15:42:14,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/ext_lib/theories/Data/Graph/GraphAdjList.v (from ci-quickchick) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/ext_lib/theories"" ""ExtLib"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/"
13072,maximedenes,2021-06-09 15:52:56,JasonGross,"ci-fiat_crypto_legacy, ci-coquelicot, ci-hott, ci-quickchick, and ci-rewriter gave useful minimized files (perhaps add them to the test-suite?)\nThe bug with parsing requests is fixed by coq/bot#146 (already deployed).  ci-metacoq is known-broken with respect to minimization (#14453).  I fixed the issue with ci-fiat_parsers in coq-community/run-coq-bug-minimizer@1cd0c28\nLet's try again with the fixed targets:\n@coqbot ci minimize ci-verdi_raft, ci-fiat_parsers"
13072,maximedenes,2021-06-09 15:53:03,coqbot-app,"I am now running minimization at commit 855d914 on requested targets ci-verdi_raft, ci-fiat_parsers. I'll come back to you with the results once it's done."
13072,maximedenes,2021-06-09 15:56:08,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/MinimalParseOfParse.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 55KiB file on GitHub Actions Artifacts under bug.v)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq"
13072,maximedenes,2021-06-09 15:57:55,coqbot-app,Error: Could not minimize file /github/workspace/builds/coq/coq-failing/_build_ci/verdi/systems/Log.v (from ci-verdi_raft) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 3.5MiB file on GitHub Actions Artifacts under build.log)\ns.cmxs /github/workspace/builds/coq/coq-failing/_install_ci/lib/coq//user-contrib/Cheerios//.coq-native\nINSTALL core/.coq-native/NCheerios_Tactics.cmxs /github/workspace/builds/coq/coq-failing/_install_ci/lib/coq//user-contrib/Cheerios//.coq-native\nI
13072,maximedenes,2021-06-09 17:16:55,JasonGross,"I've now actually fixed the issue with ci-fiat_parsers in coq-community/run-coq-bug-minimizer@38d5b1a and added a bit more debugging info for verdi-raft, let's try again (sorry for extra spam, but hopefully this will be useful)\n@coqbot ci minimize ci-verdi_raft, ci-fiat_parsers"
13072,maximedenes,2021-06-09 17:17:01,coqbot-app,"I am now running minimization at commit 855d914 on requested targets ci-verdi_raft, ci-fiat_parsers. I'll come back to you with the results once it's done."
13072,maximedenes,2021-06-09 17:21:12,coqbot-app,Error: Could not minimize file /github/workspace/builds/coq/coq-failing/_build_ci/verdi/systems/Log.v (from ci-verdi_raft) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 3.5MiB file on GitHub Actions Artifacts under build.log)\nrs.cmxs /github/workspace/builds/coq/coq-failing/_install_ci/lib/coq//user-contrib/Cheerios//.coq-native\nINSTALL core/.coq-native/NCheerios_Tactics.cmxs /github/workspace/builds/coq/coq-failing/_install_ci/lib/coq//user-contrib/Cheerios//.coq-native\n
13072,maximedenes,2021-06-09 18:22:20,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/MinimalParseOfParse.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/coq-failing/"
13072,maximedenes,2021-06-09 19:51:40,JasonGross,"ci-fiat_parsers now has a usefully generated minimized file, and JasonGross/coq-tools#66 should fix the issue with verdi-raft, so let's try one more time\n@coqbot ci-minimize ci-verdi_raft"
13072,maximedenes,2021-06-09 19:51:44,coqbot-app,I am now running minimization at commit 855d914 on requested target ci-verdi_raft. I'll come back to you with the results once it's done.
13072,maximedenes,2021-06-09 20:06:15,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/verdi/systems/Log.v (from ci-verdi_raft) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/verdi/core"" ""Verdi"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/verdi/lib"" ""Verdi"" ""-Q"" ""/github/workspa"
13837,SkySkimmer,2021-02-08 16:26:19,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
13837,SkySkimmer,2021-02-15 14:20:39,SkySkimmer,The compcert error is basically #13727\nStill investigating the others
13837,SkySkimmer,2021-04-21 15:09:38,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
13837,SkySkimmer,2021-04-22 15:07:48,SkySkimmer,"The verdi error looks like\nClass TheClass := {}.\n\nAxiom P : Prop.\nAxiom Q:TheClass -> nat -> Prop.\n\nAxiom A : forall {x:TheClass} (n:nat), Q x n -> P.\n\nGoal forall x:TheClass, nat -> P.\n  intros x n.\n  apply A with (n0:=n).\nConfusingly ""Check A"" or ""About A"" say the nat argument is ""n"", but in Coq master apply expects the renamed ""n0"".\nThis is because ""apply A"" is really apply (@A ?X) with ""n"" from the context appearing in the instance of ?X, the type is then ""forall n0, Q ?X{n} n0 -> P"" forcing"
13837,SkySkimmer,2021-06-22 07:24:49,RalfJung,"Confusingly ""Check A"" or ""About A"" say the nat argument is ""n"", but in Coq master apply expects the renamed ""n0"".\nThis is because ""apply A"" is really apply (@A ?X) with ""n"" from the context appearing in the instance of ?X, the type is then ""forall n0, Q ?X{n} n0 -> P"" forcing the rename.\n\nFWIW, even with an @ in front of the lemma name, #13759 still remains a problem. So the insertion of implicit arguments alone is not the main issue here, it seems."
13837,SkySkimmer,2021-07-29 16:10:19,ppedrot,"@SkySkimmer I am quite supportive of this PR, what should we do to make progress?"
13837,SkySkimmer,2021-08-04 13:52:26,SkySkimmer,I guess we need to decide to go through the compat break (and maybe to add a compat flag?)\nThis may need t wait until coq calls resume
13837,SkySkimmer,2021-08-11 18:43:13,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
13837,SkySkimmer,2021-08-31 08:47:13,ppedrot,"@SkySkimmer I took the liberty to push a commit atop of this PR to make a little experiment. Since most of the failures are caused by apply with, I added code to emulate the backwards compatible behaviour for the latter (in a simplified way, it's voluntarily not 100% compatible) while leaving all remaining tactics that use the clenv mechanism not renamed variables on the fly. Let's see what happens on the CI."
13837,SkySkimmer,2021-08-31 09:55:57,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
13837,SkySkimmer,2021-09-05 13:31:52,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
13837,SkySkimmer,2021-09-08 14:23:58,herbelin,"Note that I made a similar experiment at #14639 (noticing it would also fix #3273, #4536, #14632). This PR includes a warning telling which renaming to do."
13837,SkySkimmer,2021-09-09 13:00:45,ppedrot,"@herbelin I am not sure I see the point of the message being a warning in your patch. If the warning is triggered, isn't the tactic going to fail anyway because the identifiers do not match? Shouldn't be this information displayed in the error message instead?"
13837,SkySkimmer,2021-09-10 13:46:03,herbelin,"@ppedrot: the idea was to have a recovering mode where it succeeds using the renamed name, but warns that the name should be changed. This information could be then retrieved from the compilation and the changes applied globally, without having to treat one failing occurrence after one failing occurrence (in case there'd be a very lot of them)."
13837,SkySkimmer,2021-09-28 12:21:20,SkySkimmer,Added compat option
13837,SkySkimmer,2021-09-28 13:33:28,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
13837,SkySkimmer,2021-10-03 14:07:31,coqbot-app,"Hey, I have detected that there were CI failures at commit 20b473b without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 67c70fa succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-fiat_crypto, ci-metacoq."
13837,SkySkimmer,2021-10-03 14:56:36,coqbot-app,"Hey, I have detected that there were CI failures at commit 20b473b without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 67c70fa succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-fiat_crypto, ci-metacoq."
13837,SkySkimmer,2021-10-04 10:59:02,coqbot-app,"Hey, I have detected that there were CI failures at commit 8389d0d without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit fdb98e9 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_crypto."
13837,SkySkimmer,2021-10-04 11:16:37,coqbot-app,"Hey, I have detected that there were CI failures at commit 8389d0d without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit fdb98e9 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_crypto."
13837,SkySkimmer,2021-10-06 06:27:52,ppedrot,@SkySkimmer is it possible to submit the second commit as a distinct PR? It's quite unrelated and it'd be better to have it separately.
13837,SkySkimmer,2021-10-06 12:32:12,SkySkimmer,@SkySkimmer is it possible to submit the second commit as a distinct PR? It's quite unrelated and it'd be better to have it separately.\n\nThere's a diff conflict so I'd prefer not to.
13837,SkySkimmer,2021-10-09 12:55:19,SkySkimmer,All overlays merged
13837,SkySkimmer,2021-10-09 14:49:11,coqbot-app,"Hey, I have detected that there were CI failures at commit b5c54a2 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 3049b7c succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_crypto."
13837,SkySkimmer,2021-10-10 09:20:45,ppedrot,"This shouldn't need an overlay, the CI failures are due to overlays for the revertcast PR not being merged upstream yet."
13837,SkySkimmer,2021-10-10 10:09:57,coqbot-app,"Hey, I have detected that there were CI failures at commit b5c54a2 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 3049b7c succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_crypto."
13837,SkySkimmer,2021-10-10 10:17:34,ppedrot,"Hmm, actually fiat-crypto does seem to require an overlay."
13837,SkySkimmer,2021-10-10 12:51:03,SkySkimmer,Just waiting for mit-plv/fiat-crypto#1031 to be merged then
13837,SkySkimmer,2021-10-11 02:50:44,JasonGross,It's been merged
13837,SkySkimmer,2021-10-11 09:11:35,ppedrot,Let's merge!
14844,ejgallego,2021-09-06 16:50:06,coqbot-app,"Hey, I have detected that there were CI failures at commit 9c92540 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 4de7bc5 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-equations."
14844,ejgallego,2021-09-06 16:59:53,coqbot-app,"Hey, I have detected that there were CI failures at commit 9c92540 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 4de7bc5 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-equations."
14844,ejgallego,2021-09-07 09:47:29,ejgallego,"Wording suggestions applied, thanks @jfehrle !"
14844,ejgallego,2021-09-07 16:54:50,ejgallego,@SkySkimmer you mind assigning this? [I got a lot of PRs depending on this one + the next one]
14844,ejgallego,2021-09-07 17:10:34,Alizter,@coqbot merge now
14844,ejgallego,2021-09-07 20:38:55,Zimmi48,"If that PR is not backported, the changelog it introduced will have to be fixed."
14844,ejgallego,2021-09-16 13:53:49,coqbot-app,This PR was postponed. Please update accordingly the milestone of any issue that this fixes as this cannot be done automatically.
14844,ejgallego,2021-09-16 14:00:20,Zimmi48,"👇\n\nIf that PR is not backported, the changelog it introduced will have to be fixed.\n\n☝️"
14809,thery,2021-08-26 10:59:27,thery,@Casteran seems lke everybody has a version of this. So it should be in the standard lib. I had also the transitivity but don't know where to put it
14809,thery,2021-08-26 13:19:11,olaure01,"Providing a link with the dependent case might be relevant. I mean something like:\nLemma slexprod_lexprod p1 p2 :\n  slexprod p1 p2 <->\n  lexprod _ _ leA (fun _ => leB) (existT _ (fst p1) (snd p1)) (existT _ (fst p2) (snd p2)).\nProof.\nnow split; intros HP; destruct p1, p2; inversion HP; constructor; auto.\nQed."
14809,thery,2021-08-26 13:26:55,thery,@olaure01 maybe it would also be better to get the wf  directly from this equivalence.
14809,thery,2021-08-26 13:30:55,olaure01,@olaure01 maybe it would also be better to get the wf directly from this equivalence.\n\nNot clear to me what would be the best.
14809,thery,2021-08-26 14:07:40,thery,@olaure01  look much better to me now
14809,thery,2021-08-27 11:08:49,thery,@olaure01  Thanks!
14809,thery,2021-08-27 11:38:27,olaure01,"The CI-windows64 failure looks independent, I will merge on next Tuesday if there is no more comment."
14809,thery,2021-08-27 21:36:44,olaure01,"Merging #14813 should be considered before merging the present PR, so that the present one could be updated accordingly before merging."
14809,thery,2021-09-08 08:36:02,olaure01,"@thery  #14813 being merged, could you update the present PR? and I will merge it quickly."
14809,thery,2021-09-08 12:24:34,thery,@olaure01  should be ok now
14809,thery,2021-09-08 14:18:17,coqbot-app,"Hey, I have detected that there were CI failures at commit bb53171 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit c6ab549 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following targets (which I do not suggest minimizing):\n\nci-fiat_crypto (because base job at c6ab549 failed)\nci-fiat_crypto_legacy (b"
14809,thery,2021-09-08 14:19:52,coqbot-app,"Hey, I have detected that there were CI failures at commit bb53171 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit c6ab549 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following targets (which I do not suggest minimizing):\n\nci-fiat_crypto (because base job at c6ab549 failed)\nci-fiat_crypto_legacy (b"
14809,thery,2021-09-08 14:33:06,thery,the failure of fiat-cryto is unrelated to this PR #14819
14809,thery,2021-09-09 08:59:00,olaure01,@coqbot merge now
14733,herbelin,2021-08-01 12:51:54,coqbot-app,"Hey, I have detected that there were CI failures at commit 52dc88e without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 661a835 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-color, ci-corn, ci-hott, ci-mathcomp, ci-metacoq, ci-mtac2, ci-relation_algebra, ci-rewriter, ci-unimath."
14733,herbelin,2021-08-01 17:59:53,coqbot-app,"Hey, I have detected that there were CI failures at commit 02ef052 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 661a835 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-color, ci-hott, ci-mathcomp, ci-mtac2, ci-relation_algebra, ci-rewriter, ci-unimath."
14733,herbelin,2021-08-04 14:04:24,SkySkimmer,@coqbot ci minimize
14733,herbelin,2021-08-04 14:04:31,coqbot-app,"I have initiated minimization at commit 02ef052 for the suggested targets ci-color, ci-hott, ci-mathcomp, ci-mtac2, ci-relation_algebra, ci-rewriter, ci-unimath as requested."
14733,herbelin,2021-08-04 14:10:41,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/mtac2/theories/intf/MTele.v (from ci-mtac2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-bt"" ""-w"" ""-unrecognized-unicode"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/mtac2/theories"" ""Mtac2"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_c"
14733,herbelin,2021-08-04 14:24:07,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/relation_algebra/atoms.v (from ci-relation_algebra) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-projection-no-head-constant"" ""-w"" ""-notation-overridden"" ""-w"" ""-redundant-canonical-projection"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/relation_algebra"" ""RelationAlgebra"" ""-"
14733,herbelin,2021-08-04 14:39:16,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/unimath/UniMath/MoreFoundations/PartA.v (from ci-unimath) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-type-in-type"" ""-w"" ""-notation-overridden"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/unimath/UniMath"" ""UniMath"" """
14733,herbelin,2021-08-04 14:50:29,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/color/Coccinelle/term_orderings/modular_dp.v (from ci-color) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/color"" ""CoLoR"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Bi"
14733,herbelin,2021-08-04 15:30:12,Janno,The Mtac2 failure is in sort-polymorphic code so it's probably inscrutable. I am happy to explain what I am doing there and help out in other ways.
14733,herbelin,2021-08-04 15:52:18,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Homotopy/ClassifyingSpace.v (from ci-hott) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hott/theories"" ""HoTT"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_bui"
14733,herbelin,2021-08-04 16:01:10,Alizter,"@herbelin I'm the author of that file in the HoTT library, if you need help understanding what is going on just ping me.\n@JasonGross Would it be possible to get coqbot to supply a backtrace of the minimized file? i.e. by running coqc -bt, it would be useful especially when there is an anomaly thrown."
14733,herbelin,2021-08-04 19:21:19,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/rewriter/src/Rewriter/Rewriter/Reify.v (from ci-rewriter) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 54KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+depre"
14733,herbelin,2021-08-04 19:21:27,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcomp/character/mxrepresentation.v (from ci-mathcomp) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 125KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-projection-no-head-constant"" ""-w"" ""-redundant-canonical-projection"" ""-w"" ""-notation-overridden"" ""-w"" ""+duplicate-clear"" ""-w"" ""-amb"
14733,herbelin,2021-08-04 22:29:24,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/rewriter/src/Rewriter/Rewriter/Reify.v (from ci-rewriter) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 43KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+deprecated-hint-constr,+fragile-hint-constr,+variable-collisi"
14733,herbelin,2021-08-05 00:38:07,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcomp/character/mxrepresentation.v (from ci-mathcomp) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 48KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-projection-no-head-constant"" ""-w"" ""-redundant-canonical-projection"" ""-w"" ""-notation-overridden"" ""-w"" ""+duplicate-clear"" ""-w"" ""-ambi"
14733,herbelin,2021-08-05 05:54:51,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcomp/character/mxrepresentation.v (from ci-mathcomp) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 39KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-projection-no-head-constant"" ""-w"" ""-redundant-canonical-projection"" ""-w"" ""-notation-overridden"" ""-w"" ""+duplicate-clear"" ""-w"" ""-ambi"
14733,herbelin,2021-08-05 11:11:28,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcomp/character/mxrepresentation.v (from ci-mathcomp) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 203KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-projection-no-head-constant"" ""-w"" ""-redundant-canonical-projection"" ""-w"" ""-notation-overridden"" ""-w"" ""+duplicate-clear"" ""-w"" ""-amb"
14733,herbelin,2021-08-05 20:29:40,JasonGross,"@Alizter Easy, yes; reasonable, I'm not sure.  Do you think it's a good idea to pass -bt unconditionally to coqc on all runs?  I'm a bit worried that it might interfere with minimizing some errors, but perhaps it's always safe to pass -bt?  If you want to do this, create a PR that modifies wrap_file at https://github.com/coq-community/run-coq-bug-minimizer/blob/484e7221bcfaeda0b5c7db1bbd76b0cd8c048a61/coqbot-config.sh#L55-L65 that has something like\nif [[ ""$file"" == *coqc* ]] || [[ ""$file"" == *c"
14733,herbelin,2021-08-09 10:19:21,Alizter,"@JasonGross I had a go on Friday, to reproduce the same bug the bug minimizer ran into, but I couldn't succeed. I was using the branch from this PR as the version of coq, and running the find-bug script. If you can find the step (the .v file) where the bug minimizer fails, I would like to take a look. I am unable to reproduce this issue myself. (Thought it could be because I didn't run it long enough)."
14777,Alizter,2021-08-12 23:58:02,coqbot-app,"Hey, I have detected that there were CI failures at commit 78ff594 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a041fc1 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-fiat_parsers, ci-hott, ci-perennial, ci-stdlib2, ci-vst."
14777,Alizter,2021-08-13 12:20:58,Alizter,@coqbot ci minimize
14777,Alizter,2021-08-13 12:21:08,coqbot-app,"I have initiated minimization at commit 78ff594 for the suggested targets ci-fiat_parsers, ci-hott, ci-perennial, ci-stdlib2, ci-vst as requested."
14777,Alizter,2021-08-13 12:27:21,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/stdlib2/src/prop.v (from ci-stdlib2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-w"" ""+non-primitive-record"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/stdlib2/src"" ""Stdlib"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/l"
14777,Alizter,2021-08-13 12:28:55,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Common/Telescope/Instances.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_"
14777,Alizter,2021-08-13 12:32:38,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Basics/PathGroupoids.v (from ci-hott) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hott/theories"" ""HoTT"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci"
14777,Alizter,2021-08-13 17:37:50,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/src/goose_lang/lib/typed_mem/typed_mem.v (from ci-perennial) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-ssr-search-moved"" ""-w"" ""-deprecated-hint-without-locality"" ""-w"" ""-deprecated-instance-without-locality"" ""-w"" ""-deprecated-hint-rewrite-without-locality"" ""-w"" ""+dep"
14777,Alizter,2021-08-13 17:38:05,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/floyd/mapsto_memory_block.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/sepcomp"" ""VST.sepcomp"" "
14777,Alizter,2021-08-13 17:46:01,Zimmi48,"Hi @Alizter, thanks for working on this! But somehow it seems that you have implemented something closer to my initial post at  #14752 rather than the more limited first bullet-point of #14752 (comment) (which only changes the behavior of Hint commands without changing the one of auto / eauto).\nIt seems that since users may want a cumulative behavior for defining the default databases of auto / eauto, it would be preferable to not provide any default database feature for auto / eauto until we ca"
14777,Alizter,2021-08-13 18:23:58,Alizter,"OK, so you want Default HintDb to only change the behaviour of the hint commands and not auto? That seems a bit weird to me since someone might do:\nSet Default HintDb ""myhintdb"".\nAxiom magic : nat.\nHint Resolve magic. (* uses myhintdb *)\nGoal nat.\nauto. (* doesn't use myhintdb *)\nI would expect this to be invariant of setting the default hint database, but with what you are proposing this would no longer be the case."
14777,Alizter,2021-08-13 19:11:10,Zimmi48,That's a good point.
14777,Alizter,2021-08-13 22:54:38,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/src/goose_lang/lib/typed_mem/typed_mem.v (from ci-perennial) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-ssr-search-moved"" ""-w"" ""-deprecated-hint-without-locality"" ""-w"" ""-deprecated-instance-without-locality"" ""-w"" ""-deprecated-hint-rewrite-without-locality"" ""-w"" ""+dep"
14777,Alizter,2021-08-13 22:55:03,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/floyd/mapsto_memory_block.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 54KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_buil"
14777,Alizter,2021-08-14 04:11:21,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/src/goose_lang/lib/typed_mem/typed_mem.v (from ci-perennial) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-ssr-search-moved"" ""-w"" ""-deprecated-hint-without-locality"" ""-w"" ""-deprecated-instance-without-locality"" ""-w"" ""-deprecated-hint-rewrite-without-locality"" ""-w"" ""+dep"
14777,Alizter,2021-08-14 04:11:51,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/floyd/mapsto_memory_block.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 58KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_buil"
14777,Alizter,2021-08-14 09:28:25,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/src/goose_lang/lib/typed_mem/typed_mem.v (from ci-perennial) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 35KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-ssr-search-moved"" ""-w"" ""-deprecated-hint-without-locality"" ""-w"" ""-deprecated-instance-without-locality"" ""-w"" ""-deprecated-hint-rewr"
14777,Alizter,2021-08-14 09:28:51,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/floyd/mapsto_memory_block.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 60KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_buil"
14777,Alizter,2021-08-14 14:45:15,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/src/goose_lang/lib/typed_mem/typed_mem.v (from ci-perennial) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-ssr-search-moved"" ""-w"" ""-deprecated-hint-without-locality"" ""-w"" ""-deprecated-instance-without-locality"" ""-w"" ""-deprecated-hint-rewrite-without-locality"" ""-w"" ""+dep"
14777,Alizter,2021-08-14 14:45:44,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/floyd/mapsto_memory_block.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 64KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_buil"
14777,Alizter,2021-08-14 17:50:25,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/src/goose_lang/lib/typed_mem/typed_mem.v (from ci-perennial) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-ssr-search-moved"" ""-w"" ""-deprecated-hint-without-locality"" ""-w"" ""-deprecated-instance-without-locality"" ""-w"" ""-deprecated-hint-rewrite-without-locality"" ""-w"" ""+deprecated-tactic-notation"" ""-w"" ""-notation-overridden,-red"
14777,Alizter,2021-08-14 20:02:46,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/floyd/mapsto_memory_block.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 102KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_bui"
14777,Alizter,2021-08-15 01:19:48,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/floyd/mapsto_memory_block.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 79KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_buil"
14777,Alizter,2021-08-15 06:36:41,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/floyd/mapsto_memory_block.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 68KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_buil"
14777,Alizter,2021-08-15 11:53:39,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/floyd/mapsto_memory_block.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 72KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_buil"
14777,Alizter,2021-08-15 17:10:32,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/floyd/mapsto_memory_block.v (from ci-vst) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 74KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_buil"
14777,Alizter,2021-08-15 19:20:54,Alizter,@JasonGross @Zimmi48 the minimizer seems to have gone a bit haywire. How can I stop it?
14777,Alizter,2021-08-15 19:25:17,Zimmi48,I've canceled the current run.
11327,herbelin,2020-02-18 14:35:14,herbelin,"Report on the failures: the compatibility test works pretty well. Only the case where a second coercion to Funclass is applicable fails to be detected. This happens in two cases:\n\nIris: the fix is to replace some F  into F  which is expected\nUnimath: the fix is more complicated. Due to the implicit arguments, the coercion is not correctly applied by exact and I replaced some pr1 a c (the c is extra) with disp_functor_on_objects (pr1 a).\n\nHere is for the record a simplified example of what exact "
11327,herbelin,2020-02-18 14:43:19,herbelin,"Yet another question. If I have:\nAxiom f : nat -> forall {n:nat}, n=n.\n\nshould I accept f to be a coercion to Funclass or do I expect for it to be to Funclass that at least one argument is non-implicit? I don't see examples where I might want a coercion to Funclass and not expecting an explicit argument. So, this seems reasonable to me that coercions skip the implicit arguments and that the following instead work: (?)\nAxiom f : nat -> forall {n:nat}, n=n.\nCoercion f : nat >-> eq.\n\nMaybe, @pi8027"
11327,herbelin,2020-02-18 15:02:35,gares,"I've mixed feelings about this feature, especially in his cost/benefit.\nThe cost is a more tight coupling between two components, I could live with that.\nThe benefits are totally unclear to me. In particular quantifying in the middle of a spine of arrows is weird, it seems more natural to put the type of the term acting as a coercion in a prenex form, i.e. put the implicit argument before the term being casted. To me the coercion is a ""technical term"" (that the user is not even supposed to see) "
11327,herbelin,2020-02-18 16:01:15,herbelin,"@gares: @tchajed gave an example at #5527 and there are examples in Iris, UniMath, suspectingly in mathcomp too. You are basically liable to have implicit arguments in a coercion to Funclass anytime you want a coercion to a field which has dependent arguments.\nSee for instance a comment mentioning this issue in Iris' file ofe.v:\n(** Note that the implicit argument [Cofe A] is not taken into account when\n[oFunctor_diag] is used as a coercion. So, given [F : oFunctor] and [A : ofeT]\none has to wri"
11327,herbelin,2020-02-18 16:06:50,tchajed,"Yes, @gares, from a benefits perspective this feature would be awesome, though I can't comment on how much complexity it adds.\nThe issue is basically that you effectively can't have Funclass coercions to polymorphic functions; it actually exposes that you're using a coercion because you need these _ arguments. My example in #5527 is a reduced artificial example (and this is long enough ago that I've forgotten what my real use case was at the time), but the Iris example is a good realistic one."
11327,herbelin,2020-02-18 17:57:59,herbelin,"@gares: if you want examples in MathComp, look for the warning funclass-coercion-implicit-arguments-skipping-deprecated in the CI for mathcomp (there are about 40 of them). The first example is the coercion apply in gfunctor.v, whose first argument is implicit. As a consequence, F gT G could be simplified into F G in line 251 of gfunctor.v."
11327,herbelin,2020-02-19 13:34:26,amahboubi,"@gares, your suggestion to put the quantification in prenex position works, but does not survive composition.\nSo it seems to me that it is a clear improvement. However, the gfunctor file is an infrastructure library and probably not one as curated as other files in mathcomp. As far as I can tell (but I did not inspect the warnings), this does not impact ""client code"" of this infrastructure. So I am not sure that this would bring us a significant gain."
11327,herbelin,2020-02-19 13:58:10,pi8027,"Yet another question. If I have:\nAxiom f : nat -> forall {n:nat}, n=n.\n\nshould I accept f to be a coercion to Funclass or do I expect for it to be to Funclass that at least one argument is non-implicit? I don't see examples where I might want a coercion to Funclass and not expecting an explicit argument. So, this seems reasonable to me that coercions skip the implicit arguments and that the following instead work: (?)\nAxiom f : nat -> forall {n:nat}, n=n.\nCoercion f : nat >-> eq.\n\n\nIMO, declarat"
11327,herbelin,2020-02-19 19:25:06,herbelin,"@amahboubi\n\nAs far as I can tell (but I did not inspect the warnings), this does not impact ""client code"" of this infrastructure.\n\nWould it be ok that the warning is temporary and that taking implicit arguments of coercions to Funclass into account eventually becomes the default rule?\n@pi8027\n\nIMO, declarations of implicit coercions should be independent of Arguments declarations. One may change that implicit argument n to an explicit argument after the above coercion declaration of f, and then "
11327,herbelin,2020-02-20 20:46:16,SkySkimmer,"I'm not convinced that we want to use implicits for this coercion feature.\nMaybe we could have an extended syntax like\nAxiom f : A -> B -> C -> D. (* maybe dependent arrows *)\nCoercion f _ ! _ : B >-> D.\nwhere the _ mean ""insert some hole when coercing"" and the ! designates the principal argument.\nThen we could bring back implicits slightly indirectly such that\nAxiom f : nat -> forall {n:nat}, n=n.\nCoercion f ! : nat >-> eq.\nis equivalent to\nCoercion @f ! _ : nat >-> eq.\nThis syntax idea could p"
11327,herbelin,2020-02-20 20:56:04,herbelin,"It also means that changing the implicits after declaring the coercion doesn't change the coercion's behaviour,\n\nLooks interesting, I'm sensitive to the argument.\nI believe that there is indeed a nice story to develop here, which should also give a nicer status to the ""extra"" scopes."
11327,herbelin,2020-02-22 17:00:27,herbelin,"@SkySkimmer, let me come back to your comment:\n\nI'm not convinced that we want to use implicits for this coercion feature.\nMaybe we could have an extended syntax like\nAxiom f : A -> B -> C -> D. (* maybe dependent arrows *)\nCoercion f _ ! _ : B >-> D.\n\nI'm not exactly sure if you are referring here to the main feature (inheriting implicit arguments for coercions to Funclass) or to my comment above (relaxing the conditions for accepting T >-> U).\nRegarding my later comment, I don't consider it to"
11327,herbelin,2020-05-12 14:08:07,Zimmi48,"Dear PR author(s) and contributors, it seems to us this PR may need additional work beyond the 8.12 branching deadline on May 15th.\nWe are thus removing the 8.12+beta1 milestone; please retarget as appropriate, and also consider updating labels to reflect current status, moving the PR to draft status, etc.\nWe apologize in advance if we misunderstood the PR status."
11327,herbelin,2020-05-12 18:21:34,herbelin,No time to work on it by Friday but this is clearly something valuable about which the developers should take position.
11327,herbelin,2021-07-22 08:51:19,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
11327,herbelin,2021-07-22 17:53:43,coqbot-app,"Hey, I have detected that there were CI failures at commit 3e1fc8c without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 9f5d448 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-unimath."
11327,herbelin,2021-08-25 12:24:27,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
11327,herbelin,2021-08-26 13:07:32,coqbot-app,"Hey, I have detected that there were CI failures at commit d6439ac without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 18fe7e8 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-unimath."
11327,herbelin,2021-08-27 14:07:30,herbelin,"Tentative summary of the status of the PR:\n\nthe ""feature"" implements an expected interaction between coercions and implicit arguments which was overlooked up to now\nprevious comments have been taken into account\ncompatibility strategy:\n\nwhen the error is related to inh_app_to_fun, the PR writes a warning to tell where the location of where a change should be made\nthere are almost no CI incompatibility but I should try without the warning\nI anyway added an option Set Implicit Arguments Coercion I"
11327,herbelin,2021-09-29 02:10:59,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
12743,herbelin,2020-07-24 23:23:05,jfehrle,"I don't understand how associativity is used for nonterminals without levels, so not sure about that part.\nSupporting recursive definitions in ARGUMENT EXTEND could be useful.  On the other hand, it's odd that we have 2 different ways to specify productions that have different formats and feature sets.  The original Camlp5 method already supports recursive productions without any additional feature such as WITH.  Wouldn't it be possible to move the definition of rewstrategy into a GRAMMAR EXTEND"
12743,herbelin,2020-07-24 23:24:46,jfehrle,The doc_grammar.ml change looks OK.  I'd encourage you to do a make doc_gram and examine fullGrammar just to see it in action (look at the diffs)--and to perhaps familiarize yourself more with doc_grammar.
12743,herbelin,2020-07-25 13:12:55,herbelin,"@jfehrle: there are several questions in your comment.\n\nWouldn't it be possible to move the definition of rewstrategy into a GRAMMAR EXTEND and then have the ARGUMENT EXTEND provide only the extra semantic information?\n\nDo you mean it as a general move of ARGUMENT EXTEND to GRAMMAR EXTEND or just for rewstrategy? If the latter, it seems to me (and @ppedrot was saying the them, afaicj) that we should stick to one way to do such extensions (which would include at the same time parsing, and interpr"
12743,herbelin,2020-07-25 13:17:15,herbelin,"[ARGUMENT EXTEND] don't have all the features of the Campl5 style productions (e.g. inline subproductions). I think we'd be better off if we moved the semantic information elsewhere--either as annotations in the Camlp5 format or in some new file, perhaps with a build-time check that all the necessary semantic info is present.\n\nWhy not, but that may be a lot of things to do.\nAs a bit of history, here is how tactic extensions were done before the ARGUMENT EXTEND mechanism (in Coq V6.3):\nIn a v fil"
12743,herbelin,2020-07-25 13:40:06,herbelin,"Also, BTW, IIUC attribute_list in EXTEND is always interpreted as a LIST of attribute and can't refer to the nonterminal attribute_list.  And the same for induction_clause_list.\n\nThe attribute_list trick is not the clearest thing we can imagine. I did it like that to be closer to the the foo_list names used in the grammar entries at this time, but it is neither very orthodox nor very compatible with primitive entry name already having a similar suffix (even if the suffix is supposed to commute w"
12743,herbelin,2020-07-27 04:24:59,jfehrle,"Perhaps we can chat about this on a phone call as well.  We could add this additional feature to ARGUMENT EXTEND.  I have no objection.  OTOH we have 2 ways to represent productions (GRAMMAR EXTEND and ARGUMENT EXTEND) that look a bit different and have different capabilities.  The WITH is adding something that's already supported in GRAMMAR EXTEND.  If we can get to a single mechanism that serves all our requirements that will be simpler for us use, think about and maintain, and this PR might n"
12743,herbelin,2020-08-18 21:03:18,herbelin,@jfehrle: we could talk on next Thursday evening 8pm Paris time?
12743,herbelin,2020-08-18 22:52:18,jfehrle,"@herbelin To talk about possible improvements to parsing?  I don't have anything new to say yet about this particular PR.  For parsing improvements, it may make more sense to wait a little longer so I have specific ideas that I've vetted somewhat.  But I could do 8PM Paris time in any case.  On August 20th, right?"
12743,herbelin,2020-08-19 07:06:16,herbelin,"To talk about possible improvements to parsing?\n\nI meant to talk about this PR (providing recursivity vs levels, and if levels, with which syntax). But this can be a larger discussion too. Yes, on August 20th."
12743,herbelin,2020-09-14 08:40:54,herbelin,"@ppedrot: I'd like to have your opinion about this PR. Indeed, this PR is introducing new syntax, namely support for recursive grammars, which is an alternative way to using levels.\nI could also support levels, e.g. with a user syntax of the following form:\nARGUMENT EXTEND rewstrategy\nLEVEL 1\n    RIGHT ASSOCIATIVITY\n    PRINTED BY { pr_strategy1 }\n  | [ rewstrategy(0)(h) "";"" rewstrategy(0)(h') ] -> { StratBinary (Compose, h, h') }\n  | [ rewstrategy(0)(h) ] -> { h }\nLEVEL 0\n     RIGHT ASSOCIATIVI"
12743,herbelin,2020-09-14 08:59:31,ppedrot,"@herbelin On second thoughts I am not sure I see the interest of adding that much complexity to the ARGUMENT EXTEND macro. At first I thought that at least it'd help to generate a printer automatically, but I realized that it's not even the case because you still have to provide one in the PRINTED BY clauses.\nSo, essentially, my opinion on this PR depends on the following question: what is gained here compared to an explicit parsing rule performed through GRAMMAR EXTEND? The latter gives you all"
12743,herbelin,2020-09-14 09:20:01,herbelin,"The question is about not having too many APIs and syntaxes to do the same thing. It is also a way to explicitly say that declaring an argument is not only a parsing rule, but also a printing rule, an interning rule, an interpretation rule, a substitution rule.\nOr are you saying that we could keep the ARGUMENT EXTEND header but change the syntax for the body of ARGUMENT EXTEND to camlp5 syntax?"
12743,herbelin,2020-09-14 09:24:11,ppedrot,"The question is about not having too many APIs and syntaxes to do the same thing\n\nIn that respect, this PR is making things worse then?\n\nIt is also a way to explicitly say that declaring an argument is not only [...]\n\nThere is more you can define around generic arguments, e.g. you can extend constr quotations with arbitrary stuff and the like. The set of features registered on a generic argument is open. To me, ARGUMENT EXTEND is just a helper to make the easy case easy. If you want to get non-t"
12743,herbelin,2020-09-14 09:56:26,herbelin,"The question is about not having too many APIs and syntaxes to do the same thing\n\nIn that respect, this PR is making things worse then?\n\nNot if we consider that camlp5 is not supposed to be used by plugin developers.\n\n\nIt is also a way to explicitly say that declaring an argument is not only [...]\n\nThere is more you can define around generic arguments, e.g. you can extend constr quotations with arbitrary stuff and the like. The set of features registered on a generic argument is open. To me, ARG"
12743,herbelin,2020-09-14 10:08:03,ppedrot,"Not if we consider that camlp5 is not supposed to be used by plugin developers.\n\nIn the end the Tacentries API generates tokens using the campl5 production type, so at best it's a pious lie.\n\nI don't get what is your proposal. Is it to keep things as they are?\n\nThe current situation is not satisfactory, but I think that adding layers of complexity to reimplement the very same thing as the base API except for the use of a half-baked, quirky syntax that is constrained by some unfortunate historica"
12743,herbelin,2020-09-14 20:27:52,herbelin,"In particular, I have a concrete question which is blocking me to continue working on notations\n\nI agree this is a real problem[1], but judging from the parsing rules of that argument, it's definitely leaning on the side of full-blown DSLs. It'd be indeed more robust to write it via a GRAMMAR EXTEND in ssr-style, which would solve your blocker on notations.\n\nHonestly, in term of time, it would be faster to me to have this PR merged (which is not a big deal), but I can also backtrack and study ho"
12743,herbelin,2020-09-14 22:04:51,jfehrle,"Given the guarantees enforced by the campl5 engine and its overall implementation, I technically believe that most of the Coq syntax works by accident.\n\n""works"" meaning ""parses correctly"", right?\n\nIn a streak of cognitive dissonance, I both dream and fear of the day we switch to a parser engine that gives you more invariants.\n\nWe should think about ways to evolve what we have; switching to another parser engine is likely to create havoc both for developers and users.  I've been thinking about wr"
12743,herbelin,2020-09-26 18:15:25,herbelin,"@ppedrot: unless we take the decision to renounce to ARGUMENT EXTEND, I'd be leaning to keep ARGUMENT EXTEND for rewstrategy."
12743,herbelin,2021-05-31 18:15:36,herbelin,"I don't know how to unblock this PR. @ppedrot and @jfehrle seem to prefer GRAMMAR EXTEND. On my side, I find clearer to have a command which forces to declare a printer."
12743,herbelin,2021-05-31 21:02:34,coqbot-app,"Hey, I have detected that there were CI failures at commit f58742f without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ff1040b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_performance_tests."
12743,herbelin,2021-05-31 21:18:30,JasonGross,@coqbot ci minimize
12743,herbelin,2021-05-31 21:18:34,coqbot-app,I have initiated minimization at commit f58742f for the suggested target ci-coq_performance_tests as requested.
12743,herbelin,2021-05-31 21:33:24,coqbot-app,Error: Could not minimize file /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/src/fiat_crypto_via_setoid_rewrite_standalone.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 3.5MiB file on GitHub Actions Artifacts under build.log)\n                                mod 2305843009213693952 =? 0)\n                                                 []))\n                                                 (prod_rect\n             
12743,herbelin,2021-05-31 22:08:19,JasonGross,"This seems to be a nondeterministic bug in Coq's native compilation handling, let's try again.  Does Coq fail to clean up in /tmp and then error on trying to link everything in /tmp?\n@coqbot CI minimize"
12743,herbelin,2021-05-31 22:08:22,coqbot-app,I have initiated minimization at commit f58742f for the suggested target ci-coq_performance_tests as requested.
12743,herbelin,2021-05-31 22:22:52,coqbot-app,Error: Could not minimize file /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/src/fiat_crypto_via_setoid_rewrite_standalone.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 3.5MiB file on GitHub Actions Artifacts under build.log)\n                                mod 2305843009213693952 =? 0)\n                                                 []))\n                                                 (prod_rect\n             
12743,herbelin,2021-06-01 17:17:08,JasonGross,"I've worked around the issue, let's try once more, and sorry for the noise\n@coqbot CI minimize"
12743,herbelin,2021-06-01 17:17:15,coqbot-app,I have initiated minimization at commit f58742f for the suggested target ci-coq_performance_tests as requested.
12743,herbelin,2021-06-01 18:55:32,jfehrle,"I don't know how to unblock this PR.\n\nAnd it has been dormant for 9 months.  Clearly we need some discussion.  I would like to see the parsing code become simpler and more consistent (fewer mechanisms if possible).  It seemed that this PR might add complexity and make it harder to simplify the parsing code.  Also it would help to say how this will benefit users, what problem it would solve for them.\nPerhaps we (including @ppedrot in particular) could have a discussion about how we'd like to evol"
12743,herbelin,2021-06-01 20:03:52,herbelin,I would like to see the parsing code become simpler and more consistent (fewer mechanisms if possible).\n\nI'm fine with fewer parsing mechanisms if you are ready to go in this direction (and @ppedrot seemed to find on his site that ARGUMENT EXTEND/TACTIC EXTEND/VERNAC EXTEND are too ad hoc to be worth being extended further).\nMy primary concern was to work on fixing associativity in camlp5 and fixing it revealed that the ARGUMENT EXTEND for rewstrategy was broken and working in practice by chance
12743,herbelin,2021-06-01 22:44:37,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/src/fiat_crypto_via_setoid_rewrite_standalone.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/src"" ""CoqPerformanceTests"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci"
12743,herbelin,2021-06-01 22:53:11,JasonGross,"I'm confused why this PR would change the behavior of things, but CI says it does.  @herbelin can you reproduce the issue with the minimized file?"
12743,herbelin,2021-06-02 04:15:25,jfehrle,"From here:\n\n@ppedrot It'd be indeed more robust to write it via a GRAMMAR EXTEND in ssr-style, which would solve your blocker on notations.\n\nI don't know all the details of ARGUMENT EXTEND (or VERNAC EXTEND, for that matter).  What would the code look like to handle rewstrategy ""ssr-style""?  And how easy would it be for non-parser experts to use the latter form?\nI suppose this is an example of ""ssr-style"", i.e. the productions are in GRAMMAR EXTEND with a separate ARGUMENT EXTEND to give the pri"
12743,herbelin,2021-06-02 07:23:49,herbelin,"I suppose this is an example of ""ssr-style"", i.e. the productions are in GRAMMAR EXTEND with a separate ARGUMENT EXTEND to give the printing info.\nARGUMENT EXTEND ssrterm\n     PRINTED BY { pr_ssrterm }\n     INTERPRETED BY { interp_ssrterm }\n     GLOBALIZED BY { glob_ssrterm } SUBSTITUTED BY { subst_ssrterm }\n     RAW_PRINTED BY { pr_ssrterm }\n     GLOB_PRINTED BY { pr_ssrterm }\nEND\n\nGRAMMAR EXTEND Gram\n  GLOBAL: ssrterm;\n  ssrterm: TOP [[ k = ssrtermkind; c = Pcoq.Constr.constr -> { mk_term k c "
12743,herbelin,2021-06-02 11:45:41,JasonGross,Should we also add a test of the rewstrategy grammar associativity to the test-suite?
12743,herbelin,2021-06-02 13:09:38,ppedrot,If it is clear that ARGUMENT EXTEND/TACTIC EXTEND/VERNAC EXTEND are going to disappear\n\nHow on earth have you reached that conclusion @herbelin ? It's a far shot to jump from the fact that the EXTEND mechanism are ad-hoc but practical to wanting to remove them altogether?\n@jfehrle EXTEND statements do much more than parsing extensions. The fact that some parsing rules are a bit tricky to be handled by them does not mean at all that we can do everything with GRAMMAR EXTEND.
12743,herbelin,2021-06-02 14:52:53,herbelin,"@ppedrot: sure, I could use a GRAMMAR EXTEND, and I could continue working on associativity without caring more about ARGUMENT EXTEND.\nThis would not solve the question that ARGUMENT EXTEND, if kept, is not strong enough to express a grammar with precedences (if precedences had be controllable, I'd bet that other precedences had been used for rewstrategy). So, the discussion is worth in my opinion.\nSecond, the point of @jehrle is legitimate. Why does ARGUMENT EXTEND use a different syntax than c"
12743,herbelin,2021-06-02 15:32:23,ppedrot,"if I take the time to propose a variant of ARGUMENT EXTEND with LEVEL, can I count on your support?\n\nThat depends on how you do it. I don't really care that you bring this syntax closer to the one of GRAMMAR EXTEND provided that it doesn't lead to nonsensical situations. I put quite a lot of effort in ensuring that coqpp macros were statically preventing useless arguments and the like, it's not to regress on that. Also, while not actively trying to deter you from that I think this kind of endeav"
12743,herbelin,2021-06-02 16:38:38,herbelin,"I put quite a lot of effort in ensuring that coqpp macros were statically preventing useless arguments and the like, it's not to regress on that.\n\nCan you give an example? It is a kind of effort I probably did not realize.\n\nAlso, while not actively trying to deter you from that I think this kind of endeavour is the essence of bikeshedding and moving for the sake of moving.\n\nThat's indeed a question, or at least, there is a question of prioritizing what can be done in general, and I'd be actually"
12743,herbelin,2021-06-02 18:09:58,jfehrle,"IIUC, the SSR-style approach is sufficient to handle ""rewstrategy"", and if so, let's not add additional syntax to ARGUMENT EXTEND.\n\nif @jfehrle proposes, supported by enough users, to unify the different ways to give syntactic rules in Tactic Notation, Ltac2 Notation, ARGUMENT EXTEND, ... can we count on your support?\n\n@herbelin and I discussed this informally last year.  It's a topic beyond the scope of this PR.  The next step would be to have some general discussion about how (and whether) we "
12743,herbelin,2021-06-02 19:09:13,herbelin,"the SSR-style approach is sufficient to handle ""rewstrategy"",\n\nThere are different points of view.\nIf we admit that ARGUMENT EXTEND is the relevant abstraction level for declaring the methods associated to a new element of the tactic/vernac languages, using GRAMMAR EXTEND would defeat this abstraction level.\nAnother point of view (yours, right?) is that it is overkill, or confusing, to declare the grammar rules of new elements with ARGUMENT EXTEND rather than with GRAMMAR EXTEND, considering tha"
12743,herbelin,2021-06-02 19:35:10,jfehrle,"I would feel uncomfortable, and I would find it difficult to explain to plugin developers that we deliberatedly maintain both approaches at the same time without recommending one over the other.\n\nBy all means, let's add some explanation for plugin developers on which form is preferred and when the SSR-style form is necessary.  Isn't there already a document somewhere in the source tree that explains how to create plugins to which such comments could be added?\n\nAnother point of view (yours, right"
12743,herbelin,2021-06-02 20:10:58,herbelin,"By all means, let's add some explanation for plugin developers on which form is preferred and when the SSR-style form is necessary.\n\nI don't have a good overview of the reasons why ssrparser uses GRAMMAR EXTEND on top of ARGUMENT EXTEND. Here are some examples:\n\nssrtacarg and ssrtac3arg: I don't see the reason. Maybe to introduce a ""ssr"" level of abstraction to ltac_expr levels 3 and 5?\nssrsimpl_ne, ssrbwdview, ssrfwdview, ident_no_do, ssrcpat, ssrfwdid : suspectingly because they use look-ahead"
12743,herbelin,2021-06-02 20:19:18,herbelin,"The (x), (c) and (y) metasyntax below is not valid in GRAMMAR EXTEND. For consistency, it would be nice if the metasyntax was more similar, if it's reasonably possible.\n\nYou mean using ; instead of spaces to separate the symbols? But the argument could go the other way round moving the GRAMMAR EXTEND rules to the syntax of ARGUMENT EXTEND (up to a few extensions)?"
12743,herbelin,2021-06-02 21:24:47,jfehrle,"I don't have a good overview of the reasons why ssrparser uses GRAMMAR EXTEND on top of ARGUMENT EXTEND.\n\nIt may be that some (or even all) of the uses could be done without GRAMMAR EXTEND.  The point is that GRAMMAR EXTEND is necessary and sufficient to handle the rewstrategy case.\n\nYou mean using ; instead of spaces to separate the symbols? But the argument could go the other way round moving the GRAMMAR EXTEND rules to the syntax of ARGUMENT EXTEND (up to a few extensions)?\n\nIndeed, that was "
14705,SkySkimmer,2021-07-23 14:59:51,ppedrot,"Uh, I didn't think of doing it that straightforwardly. This will definitely conflict with #14697 though, can I advocate for merging mine first?"
14705,SkySkimmer,2021-08-03 15:06:56,coqbot-app,"Hey, I have detected that there were CI failures at commit 2f0321a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a41c99a succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following targets (which I do not suggest minimizing):\n\nci-coq_tools (because base job at a41c99a failed)\nci-perennial (because base"
14705,SkySkimmer,2021-08-05 02:40:27,jfehrle,Shouldn't there be a brief changelog entry?
14705,SkySkimmer,2021-08-07 15:20:54,ppedrot,@SkySkimmer can you add a short changelog so we can merge this?
14705,SkySkimmer,2021-08-09 11:50:32,ppedrot,Will merge when CI finishes.
14692,herbelin,2021-07-22 12:34:27,coqbot-app,"Hey, I have detected that there were CI failures at commit 933d887 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 9f5d448 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do not suggest minimizing): ci-metacoq (because base job at 9f5d448 failed)"
14692,herbelin,2021-07-23 16:53:37,SkySkimmer,@coqbot: merge now
14692,herbelin,2021-07-23 16:53:49,coqbot-app,@SkySkimmer: Please take care of the following overlays:\n\n14692-herbelin-master+UContext-include-names.sh
12512,ppedrot,2020-06-14 14:50:06,ppedrot,"Actually, in master the documentation is lying since it claims that\n\nThe hints passed through the using clause are used in the same way as if they were passed through a hint database.\n\nbut as argued above since the using terms are interpreted with resolution of holes and whatnot, this is different from merely adding the references to a hint database. Some of the changes I had to introduce in the stdlib are an example of that."
12512,ppedrot,2020-06-16 16:59:37,Blaisorblade,"Answering to https://gitlab.mpi-sws.org/iris/stdpp/-/merge_requests/165#note_52540:\n\nIt's actually a bit strange that typeclasses are never resolved when applying hints, regardless of the using clause.\n\n\nShould Coq fix this oddity, that is, support typeclass-polymorphic hints?\nHow hard would it be?\nIf it's easy, could that be done first? Or could these changes be planned together?\n\nThat might reduce the impact of this change, but it might be small; IMHO more importantly, if you're going to fix T"
12512,ppedrot,2020-06-16 17:14:17,Blaisorblade,"Also having to change eauto using 0 with eauto using O (even where 0 defaults to O, in https://gitlab.mpi-sws.org/iris/iris/-/merge_requests/464/diffs#note_52545) seems surprising.\nLooking at the doc, it's not obvious if the documented syntax qualid excludes notations for qualids..."
12512,ppedrot,2020-06-16 18:22:49,tchajed,"@ppedrot could you make eauto using thm1, thm2 just be pose proof thm1; pose proof thm2; eauto? Then we wouldn't have all this upstream breakage, and it would restore the existing functionality (mostly; a few cases might need using @thm1, but I can understand that)."
12512,ppedrot,2020-06-16 19:10:58,JasonGross,"Looking at the doc, it's not obvious if the documented syntax qualid excludes notations for qualids...\n\nI think as-of a recently merged PR, we're now using reference for qualid + by notation.  Were you looking at the doc on master (includes many improvements), or the doc on 8.11?\n(also cc @jfehrle @herbelin @Zimmi48 for the doc question)"
12512,ppedrot,2020-06-16 19:38:37,ppedrot,"@tchajed this is one of my ideas, but then this would still make the documentation lie, as adding hints that way doesn't work the same as through the Hint command."
12512,ppedrot,2020-06-16 19:59:23,Zimmi48,"Looking at the doc, it's not obvious if the documented syntax qualid excludes notations for qualids...\n\nI think as-of a recently merged PR, we're now using reference for qualid + by notation. Were you looking at the doc on master (includes many improvements), or the doc on 8.11?\n(also cc @jfehrle @herbelin @Zimmi48 for the doc question)\n\nThat's correct, but this is only about the possibility of replacing a qualid by a string representing a notation when calling some commands (cf https://coq.gith"
12512,ppedrot,2020-06-16 20:13:55,tchajed,"@ppedrot why is the documentation a concern? It can be updated, and clearly many people wrote code based on what seems to work rather than the specification in the documentation.\nThe using hints don't need to be exactly as powerful as Hint Resolves, but this PR makes them much more limited than seems necessary and it clearly has a huge backwards-compatibility cost. I'm not just concerned about the number of changes but also that the new code is hard to read and understand."
12512,ppedrot,2020-06-16 20:19:31,Blaisorblade,"@JasonGross I had checked 8.11, but the same question applies to master (tho the manual looks much better organized!). But if notations are forbidden in places like auto using ... (here, I mean notations that expand to qualids), I’d want to know “why’s that not a bug” before going to “how should that be explained”.\n@Zimmi48 You’re clearly right for Locate, but does that mean that Tactic Notations that take a “smart_global” can take a notation as a string? Hopefully not? See\nhttps://coq.github.io"
12512,ppedrot,2020-06-16 20:23:33,Zimmi48,"Why ""hopefully not""?"
12512,ppedrot,2020-06-16 20:39:28,JasonGross,"That's correct, but this is only about the possibility of replacing a qualid by a string representing a notation when calling some commands (cf https://coq.github.io/doc/master/refman/proof-engine/vernacular-commands.html#grammar-token-reference). It doesn't really apply in this case, where Paolo was expected to be able to use a notation (without the quotes) in place of a qualid.\n\nI'm a bit confused, now.  It seems there are two different yes/no questions to answer about qualid-like-things, and "
12512,ppedrot,2020-06-16 20:56:10,Blaisorblade,"@Zimmi48 I start seeing your point after having written the code below, which follows the new manual. But I wrote it to prove that the manual was wrong and no tactics exist that take strings as notations.\nIt's already weird enough that Locate takes a string, but that's well-known.\nDefinition T := True.\nNotation TT := T.\nNotation ""'TTT'"" := T.\n\nGoal TTT.\nsimpl ""TTT"". (* Uh? I'd want `simpl TTT` instead. *)\ncbn [""TTT""]. (* Uh? I'd want `cbn [TTT]` instead. *)\nunfold TT.\nunfold ""TTT"". (* Uh? I'd wa"
12512,ppedrot,2020-06-16 20:56:20,Blaisorblade,"@JasonGross On your earlier question:\nDocs of auto https://coq.github.io/doc/master/refman/proof-engine/tactics.html#coq:tacn.auto still mentions qualid, and qualid’s explanation doesn’t discuss notations.\nI can’t find “reference” in the general index or the glossary; the only “explanation” I ran into is\nhttps://coq.github.io/doc/master/refman/user-extensions/syntax-extensions.html#tactic-notations, but the table is puzzling: I don’t get what the “Parsed as” column mean; and the table suggests t"
12512,ppedrot,2020-06-16 21:00:56,JasonGross,"To add to the confusion, both the code and the doc have reference, but they refer to different things...  This will hopefully be fixed soon."
12512,ppedrot,2020-06-16 21:08:33,Zimmi48,"Does anybody use things like unfold ""TTT""? I wouldn't even preserve support for it unless uses exist.\n\nYes, of course, I do use it all the time. It seems like you are confusing usual notations with abbreviations (see https://coq.github.io/doc/master/refman/user-extensions/syntax-extensions.html#abbreviations)."
12512,ppedrot,2020-06-16 21:10:55,Zimmi48,"@JasonGross Seeing this table, it seems to me it was a mistake to rename ""smart_qualid"" / ""smart_global"" into ""reference"" in the manual."
12512,ppedrot,2020-06-16 21:29:28,Blaisorblade,"@Zimmi48 Re unfold ""TTT"", I don't see where an outsider would learn it from. It's not documented in the current manual, nor AFAIK in SF/CPDT.\nOn notations vs abbreviations, I know they're distinct (even tho using ""Notation"" for abbreviations doesn't help), but Fail unfold TTT. still violates the reasonable expectation that TTT and TT are interchangeable in all contexts.\nIt's sad enough that TTT has likely valid use cases and we can't deprecate it...\n@ppedrot @Zimmi48 Both for ""unfold"" and for au"
12512,ppedrot,2020-06-16 21:32:05,Blaisorblade,"It's not documented in the current manual, nor AFAIK in SF/CPDT.\n\nI must retract: unfold ""string"" appears later. I remain unconvinced that justifies Fail unfold TTT to somebody unfamiliar with the implementation."
12512,ppedrot,2020-06-16 21:44:15,ppedrot,"It can be updated, and clearly many people wrote code based on what seems to work rather than the specification in the documentation\n\nThe full-fledged syntax is not so much used in the CI, actually. Also, writing code that just works as opposed to a specification that was actually written down is begging the stick to get beaten.\nThe reason why I'm not so fond about trying to preserve the old behaviour when it's in reach to get rid of it is that it relies on a broken heuristic that is hard to doc"
12512,ppedrot,2020-06-16 21:47:12,ppedrot,(When was this PR turned from a draft to a proper one BTW? I don't remember doing that...)
12512,ppedrot,2020-06-16 22:02:59,tchajed,"I don't understand what's wrong with providing a tactic eauto using thm1, thm2 with the documented semantics that it's equivalent to whatever pose proof thm1; pose proof thm2; eauto would do. Then it's clear that it takes terms and not some heuristic thingy, which I agree is bad.\nI'm suggesting this under the hypothesis that much of the breakage would go away with this change."
12512,ppedrot,2020-06-16 22:05:21,tchajed,"Also in fixing Argosy I discovered that pose thm1; eauto isn't equivalent because it will clutter the context when eauto doesn't solve the goal, which is not great...\nMost people don't have output tests that would catch this regression, but it will affect interactive proofs."
12512,ppedrot,2020-06-16 22:08:02,ppedrot,"pose proof foo; auto is not strictly equivalent to auto using foo since the handling of evar is different. In the second case the generated evars are requantified over in an implementation-specific way, while in the first case they will linger around. If we want to keep backwards compatibility, we need to emulate that behaviour as well."
12512,ppedrot,2020-06-16 22:10:36,tchajed,"I'm specifically not suggesting backward compatibility, so that you can drop this functionality, but I'm trying to find a middle ground between ""only global references"" and ""obscure heuristics"" that seems to match the historical usage."
12512,ppedrot,2020-06-16 22:11:42,Blaisorblade,"@tchajed this is one of my ideas, but then this would still make the documentation lie, as adding hints that way doesn't work the same as through the Hint command.\n\n\n\n\n\n@ppedrot why is the documentation a concern? It can be updated, and clearly many people wrote code based on what seems to work rather than the specification in the documentation.\n\n\n\nAlso, writing code that just works as opposed to a specification that was actually written down is begging the stick to get beaten.\n\nWith respect for"
12512,ppedrot,2020-06-16 22:16:04,ppedrot,"@tchajed OK, I'll write an alternative patch to see how better it works."
12512,ppedrot,2020-06-16 22:26:56,ppedrot,"I am just realizing this is going to break in universe-polymorphic mode, since you can only have one instance of the term when you pose it. Well, if your proofs rely on using clauses with two different instances I think you've deserved it..."
12512,ppedrot,2020-06-16 22:46:05,JasonGross,"I am just realizing this is going to break in universe-polymorphic mode, since you can only have one instance of the term when you pose it. Well, if your proofs rely on using clauses with two different instances I think you've deserved it...\n\nEasy backwards-compatible fix for this is to turn auto using x into auto using x, x (I guess this might blow up the complexity though?)"
12512,ppedrot,2020-06-16 23:32:53,jfehrle,"@Blaisorblade:\n\nI don’t get what the “Parsed as” column mean\n\nThe first column is what you type in the Tactic Notation command.  ""Parsed as"" is the link to the nonterminal that gives the syntax.\n\nIt's not all that different from the table in the 8.11 manual (shown below), except now you have a hyperlink to the syntax.\n\n\nAlso, in the current manual the table had examples^H^H the 4th column wasn't hidden by an invisible scroll-bar.\n\nProbably your browser.  It works fine for me on Chrome/Windows.\n\n"
12512,ppedrot,2020-06-17 01:20:11,Blaisorblade,"@jfehrle Sorry, I didn't mean to criticize the improvements or your work, or suggest things were going the wrong direction — all the review comments I’ve seen from you are spot-on. I was just too confused to offer more structured feedback, so I just documented my impressions, hoping it’d help. Apologies again.\n""Parsed as"" was clear in 8.11, but the new entries in the tactic notation table were confusing because of e.g. #12512 (comment) (reference means one thing in the concrete syntax and a diff"
12512,ppedrot,2020-06-17 01:56:19,jfehrle,"@Blaisorblade No worries.  What you said is worthwhile.  I just wanted to give a complete response to your comments.\nWe'd love it if you have time to help improve the doc.  You could pick some part you'd interested in (and maybe that you'd like to understand better).  @Zimmi48 can help you find an expert if you'd like that.  BTW, I am by no means an expert on Coq, but I've learned quite a bit while working on the doc."
12512,ppedrot,2020-06-18 13:06:28,Zimmi48,(When was this PR turned from a draft to a proper one BTW? I don't remember doing that...)\n\nIt was done by yourself two days ago.
12512,ppedrot,2020-06-18 13:17:21,Zimmi48,@Blaisorblade I agree with your point that abbreviations should be resolved to the underlying global reference instead of being rejected where a global reference is expected. Might be worth opening a specific issue.
12512,ppedrot,2020-06-21 17:40:47,jfehrle,"@Zimmi48:\n\n@JasonGross Seeing this table, it seems to me it was a mistake to rename ""smart_qualid"" / ""smart_global"" into ""reference"" in the manual.\n\nMakes sense.  I could reverse that with the Ltac2 change or as a standalone PR.  Which do you prefer?"
12512,ppedrot,2020-06-21 17:44:43,Zimmi48,"I could reverse that with the Ltac2 change or as a standalone PR. Which do you prefer?\n\nDepends whether you think the Ltac2 changes will be mergeable before 8.12.0. If not, a separate PR would be preferable. But we should decide what to revert to. smart_global might be a sensible choice after all if we explain that ""global"" is an abbreviation for ""global reference"", i.e. that it refers to an object from the global environment."
12512,ppedrot,2020-06-24 11:22:15,ppedrot,"After a few experiments, it seems to hard to aim for the middle ground of replacing using merely by pose. Instead, I wrote a patch that performs pose on the mangled term (i.e. requantified over evars). I personally find this disappointing, but it seems to be much more backwards compatible, and it solves the underlying implementation problem I had for hint databases. Hence, everybody is happy.\nLet's see how it behaves on a full CI."
12512,ppedrot,2020-06-25 08:47:57,ppedrot,"The two real errors in the CI are:\n\ndpdgraph, because posing a term can introduce a spurious dependency in the resulting proof\nrewriter, which fails in a place I don't understand because there is too much automation involved (maybe @JasonGross can help?)"
12512,ppedrot,2020-06-25 09:12:27,JasonGross,"Based on the error message on GitLab, I believe what's happening is that at https://github.com/mit-plv/rewriter/blob/1e47fca6eb33b149119025be063c935f0393b76a/src/Rewriter/Language/UnderLetsProofs.v#L1324 there are now two goals left over where previously there was just one, i.e., the automation is leaving over a goal that was previously solved.  Almost certainly, this was a goal that used to be solved by one of the branches of automation using wf_t or wf_safe_t, which are defined in https://gith"
12512,ppedrot,2020-07-09 13:54:11,Blaisorblade,"I guess this PR isn't planned for 8.12, right? In that case, #12576 can wait."
12512,ppedrot,2021-06-19 14:43:00,coqbot-app,"Hey, I have detected that there were CI failures at commit 39ce95a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-rewriter.\nHowever, you may want to wait until the pipeline for the base commit (533596b) finishes."
12512,ppedrot,2021-06-19 15:03:29,coqbot-app,"Hey, I have detected that there were CI failures at commit 39ce95a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-rewriter.\nHowever, you may want to wait until the pipeline for the base commit (533596b) finishes."
12512,ppedrot,2021-06-19 15:23:50,coqbot-app,"Hey, I have detected that there were CI failures at commit 39ce95a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-rewriter.\nHowever, you may want to wait until the pipeline for the base commit (533596b) finishes."
12512,ppedrot,2021-06-19 15:42:00,coqbot-app,"Hey, I have detected that there were CI failures at commit 39ce95a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-rewriter.\nHowever, you may want to wait until the pipeline for the base commit (533596b) finishes."
12512,ppedrot,2021-06-19 16:01:10,coqbot-app,"Hey, I have detected that there were CI failures at commit 39ce95a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-rewriter.\nHowever, you may want to wait until the pipeline for the base commit (533596b) finishes."
12512,ppedrot,2021-06-19 16:59:06,coqbot-app,"Hey, I have detected that there were CI failures at commit 39ce95a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-rewriter.\nHowever, you may want to wait until the pipeline for the base commit (533596b) finishes."
12512,ppedrot,2021-06-21 01:37:25,JasonGross,@coqbot ci minimize
12512,ppedrot,2021-06-21 01:37:28,coqbot-app,I have initiated minimization at commit 39ce95a for the suggested target ci-rewriter as requested.
12512,ppedrot,2021-06-21 06:54:20,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/rewriter/src/Rewriter/Language/UnderLetsProofs.v (from ci-rewriter) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 68KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-patt"
12512,ppedrot,2021-06-21 08:10:55,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/rewriter/src/Rewriter/Language/UnderLetsProofs.v (from ci-rewriter) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 70KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+deprecated-hint-constr,+fragile-hint-constr,+variab"
12512,ppedrot,2021-07-06 17:15:49,coqbot-app,"Hey, I have detected that there were CI failures at commit 5af549a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 3577566 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-rewriter.\nHowever, you may want to wait until the pipeline for the base commit (3577566) finishes."
14848,ppedrot,2021-09-06 16:34:28,coqbot-app,"Hey, I have detected that there were CI failures at commit 60b4545 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 4de7bc5 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-equations."
14848,ppedrot,2021-09-06 17:53:36,ppedrot,@coqbot ci minimize
14848,ppedrot,2021-09-06 17:53:40,coqbot-app,I have initiated minimization at commit 60b4545 for the suggested target ci-equations as requested.
14848,ppedrot,2021-09-06 17:54:01,ppedrot,Bench: https://gitlab.com/coq/coq/-/jobs/1566107508
14848,ppedrot,2021-09-06 17:59:18,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/equations/test-suite/fin.v (from ci-equations) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/equations/test-suite"" ""TestSuite"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/equations/theories"" ""Equations"" ""-Q"" ""/github/workspace"
14848,ppedrot,2021-09-06 18:41:07,ppedrot,"The Equation failure also seems to happen on master, so it's unrelated to this PR."
14848,ppedrot,2021-09-08 15:35:15,coqbot-app,"Hey, I have detected that there were CI failures at commit d5565fd without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit c6ab549 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following targets (which I do not suggest minimizing):\n\nci-fiat_crypto (because base job at c6ab549 failed)\nci-fiat_crypto_legacy (b"
14848,ppedrot,2021-09-09 08:51:45,ppedrot,┌─────────────────────────────┬─────────────────────────┬───────────────────────────────────────┬───────────────────────────────────────┬─────────────────────────┬─────────────────┐\n│                             │      user time [s]      │              CPU cycles               │           CPU instructions            │  max resident mem [KB]  │   mem faults    │\n│                             │                         │                                       │                                       
14848,ppedrot,2021-09-09 08:52:13,ppedrot,"Some single lines show a big speedup in various developments, but they're drowned in the noise."
14848,ppedrot,2021-09-11 15:03:33,ppedrot,"I've added some language tweaks, but left the hint-specific vocabulary in the doc."
14848,ppedrot,2021-09-29 13:57:39,SkySkimmer,"Not sure what's going on with quickchick, should be unrelated.\n@coqbot merge now"
14848,ppedrot,2021-09-29 13:57:42,coqbot-app,@SkySkimmer: Please take care of the following overlays:\n\n14848-ppedrot-btermdn-discriminate-evar.sh
14848,ppedrot,2021-09-29 14:43:00,ppedrot,FTR I can't reproduce the quickchick error locally.
14808,ppedrot,2021-08-25 16:50:26,ppedrot,Bench: https://gitlab.com/coq/coq/-/jobs/1534424055
14808,ppedrot,2021-08-26 12:18:48,coqbot-app,"Hey, I have detected that there were CI failures at commit 8206fa4 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 18fe7e8 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-equations."
14808,ppedrot,2021-08-26 13:08:31,ppedrot,┌─────────────────────────────┬─────────────────────────┬───────────────────────────────────────┬───────────────────────────────────────┬─────────────────────────┬─────────────────┐\n│                             │      user time [s]      │              CPU cycles               │           CPU instructions            │  max resident mem [KB]  │   mem faults    │\n│                             │                         │                                       │                                       
14808,ppedrot,2021-08-26 13:09:12,ppedrot,"I will split this PR in two parts, the first one being a cleanup and the second one being the change that introduces the speed-up."
14808,ppedrot,2021-08-27 18:18:00,coqbot-app,"Hey, I have detected that there were CI failures at commit dc048ca without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4433e3 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-equations."
14808,ppedrot,2021-09-06 13:49:00,ppedrot,This is now ready.
14808,ppedrot,2021-09-07 12:44:30,SkySkimmer,@coqbot merge now
14820,herbelin,2021-08-31 20:23:18,herbelin,The two lines of lightbulb.v mentioned in @ppedrot's #11711 comment went back from 10.0s to 3.6s and from 23.9s to 10.6s as expected.
14820,herbelin,2021-08-31 21:02:23,ppedrot,"I had a deeper look at those files, and even if we're back to the old time profile, we're doing very weird things in the trace. It looks like apply keeps regenerating clenvs with a growing prefix on these examples, and most of the time is passed substituting fresh metas again and again."
14820,herbelin,2021-08-31 23:34:46,coqbot-app,"Hey, I have detected that there were CI failures at commit 564bf87 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14820,herbelin,2021-09-01 07:56:55,herbelin,"I had a deeper look at those files, and even if we're back to the old time profile, we're doing very weird things in the trace. It looks like apply keeps regenerating clenvs with a growing prefix on these examples, and most of the time is passed substituting fresh metas again and again.\n\nCould it be descend_in_conjunctions. Does it change something with simple apply?"
14820,herbelin,2021-09-01 10:25:15,ppedrot,"Could it be descend_in_conjunctions\n\nNo, the reason is in the algorithm of try_red_apply. When applying try_red_product we do not keep the product prefix across recursive calls, and this reduction function is not idempotent so it can be called many times recursively on a growing list of products."
14732,ppedrot,2021-07-31 21:23:46,ppedrot,Bench: https://gitlab.com/coq/coq/-/jobs/1467678974
14732,ppedrot,2021-08-01 16:18:39,coqbot-app,"Hey, I have detected that there were CI failures at commit 4ed0613 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 661a835 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-equations, ci-hott, ci-iris, ci-perennial, ci-quickchick."
14732,ppedrot,2021-08-01 20:46:25,ppedrot,Bench: https://gitlab.com/coq/coq/-/jobs/1468503386
14732,ppedrot,2021-08-03 16:57:33,coqbot-app,"Hey, I have detected that there were CI failures at commit 61529cf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a41c99a succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following targets (which I do not suggest minimizing):\n\nci-coq_tools (because base job at a41c99a failed)\nci-perennial (because base"
14732,ppedrot,2021-08-06 18:46:16,ppedrot,See #14722 (comment) for a complete bench with the variable matching change.
14732,ppedrot,2021-08-06 19:29:46,Janno,"This is great! Could you include the following test case (that should now pass):\nFrom Coq Require Import List. Import ListNotations.\nMonomorphic Universe i o.\nClass FMap (M : Type@{i} -> Type@{o}) :=\n  fmap : forall {A:Type@{i}} {B:Type@{o}}, (A -> B) -> M A -> M B.\nGlobal Arguments fmap {_ _ _ _} _ !_ / : assert.\nMonomorphic Instance fmap_list@{a b} : FMap (fun T => list T) :=\n  fun (A : Type@{a}) (B : Type@{b}) f => @map A B f.\nFail Fail Monomorphic Constraint i < list.u0.\nFail Fail Example in"
14732,ppedrot,2021-08-06 20:31:17,ppedrot,"Did anybody know that introducing universe constraints can mess up Instances by eta-expanding them automatically?\n\nIsn't this some funny side-effect of unification? Since some terms are ill-typed when η-contracted and unification can η-expand, this might explain this..."
14732,ppedrot,2021-08-06 20:34:25,SkySkimmer,It's coercion\nUniverses a b.\nConstraint b < a.\nAxiom f : Type@{a} -> Prop.\nSet Printing Universes.\nCheck f : Type@{b} -> Prop.\n(* (fun x : Type@{b} => f x) : Type@{b} -> Prop *)
14732,ppedrot,2021-08-06 20:40:47,ppedrot,"@Janno just in case, do you have a full self-contained test for your issue that does not require the list module and refers to some fragile global universe? I can probably simplify it myself but am otherwise too lazy to do this."
14732,ppedrot,2021-08-07 09:19:11,Janno,"@Janno just in case, do you have a full self-contained test for your issue that does not require the list module and refers to some fragile global universe? I can probably simplify it myself but am otherwise too lazy to do this.\n\nI would love to help but I don't think I know how to write a small test case that fulfills your requirements. In fact, trying to reconstruct the list example with definitions instead of Constraint shows once again that I have no clue what is really going on here."
14732,ppedrot,2021-08-07 13:01:45,ppedrot,"Without the require, I get a weird error\nThe term ""id"" has type ""ID"" while it is expected to have type\n ""Type -> ?B"" (cannot instantiate ""?B"" because ""A"" is not in its scope).\n\nin both the new code and the old one, which looks like a bizarre unification issue. I have no idea why this is solved by the require, but I imagine it is due to backtrack caused by a universe error somewhere. Not sure it is very wise to add a test nobody understands :/"
14732,ppedrot,2021-08-07 14:01:58,ppedrot,"In any case, I believe this is ready and needs an assignee."
14732,ppedrot,2021-08-10 11:29:43,SkySkimmer,@coqbot: merge now
13664,herbelin,2021-01-04 13:26:15,proux01,"@herbelin does that mean that literals such as ""0"" or ""1"" shouldn't be used as non-number notations? That lind of use seems not that uncommon, for instance in mathcomp. Sure, a number notation can always be used but that's slightly more heavy to setup. Printing of number notations / interaction with printing of regular notations is certainly still buggy but I wonder whether this is the best fix?"
13664,herbelin,2021-04-04 14:51:50,herbelin,"@herbelin does that mean that literals such as ""0"" or ""1"" shouldn't be used as non-number notations? That kind of use seems not that uncommon, for instance in mathcomp. Sure, a number notation can always be used but that's slightly more heavy to setup. Printing of number notations / interaction with printing of regular notations is certainly still buggy but I wonder whether this is the best fix?\n\nSorry for so late answer. 0or 1 can still be used as notations for arbitrary terms. The only change "
13664,herbelin,2021-06-02 19:12:09,silene,What is the status with respect to #14071? Is it still needed or is #14429 sufficient as a dependency?
13664,herbelin,2021-06-02 19:25:25,herbelin,It still depend on #14071 (but not on #14429).
13664,herbelin,2021-06-07 10:19:36,proux01,"Given that #14071 got postponed to 8.15, I guess this should be to. I'll try to take soon a closer look though."
13664,herbelin,2021-06-25 12:20:14,proux01,"@herbelin could you please rebase now that dependency PRs are merged, in order to ease review?"
13664,herbelin,2021-06-26 18:07:23,herbelin,"@herbelin could you please rebase now that dependency PRs are merged, in order to ease review?\n\nI rebased but also made the PR evolved. First, it has a new dependency #14562 (present here in the 2 first commits).\nSecond, it addresses 2 new cases of bad interactions in the presence of notations with numbers."
13664,herbelin,2021-08-02 01:00:22,coqbot-app,"Hey, I have detected that there were CI failures at commit 7e12ccd without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 53fb47d succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-bedrock2."
13664,herbelin,2021-08-02 01:41:54,coqbot-app,"Hey, I have detected that there were CI failures at commit 7e12ccd without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 53fb47d succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-bedrock2."
13664,herbelin,2021-08-03 15:12:39,coqbot-app,"Hey, I have detected that there were CI failures at commit 1ca6daf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a41c99a succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do not suggest minimizing): ci-coq_tools (because base job at a41c99a failed)"
13664,herbelin,2021-08-03 17:25:16,coqbot-app,"Hey, I have detected that there were CI failures at commit 1ca6daf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a41c99a succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following targets (which I do not suggest minimizing):\n\nci-coq_tools (because base job at a41c99a failed)\nci-perennial (because base"
13664,herbelin,2021-08-28 11:21:49,proux01,@coqbot merge now
13664,herbelin,2021-08-28 11:21:50,coqbot-app,@proux01: You can't merge this PR because you're not a member of the @coq/pushers team.
13664,herbelin,2021-08-29 12:30:41,herbelin,"@proux01: you probably have to join the @coq/extensible-syntax-maintainers (cc @Zimmi48). Maybe could we also create a group of maintainers on numbers in general (number notations, int, float, ...)."
13664,herbelin,2021-09-01 12:53:21,ppedrot,"Let me merge in the meantime, there is no point in leaving this open."
13664,herbelin,2021-09-01 12:54:32,proux01,Thanks!
13664,herbelin,2021-09-01 13:38:11,Zimmi48,"Sorry for not responding earlier.\n@proux01 I could add you right now to the @coq/extensible-syntax-maintainers team or wait until the @coq/number-maintainers team is created. To do the latter, please open a PR updating https://github.com/coq/coq/blob/master/.github/CODEOWNERS with the list of files the team should own (note that order matters in this file). @JasonGross might also be interested in being a member of this new team.\nAlso, let me know if there are any other maintainer teams (see the "
14059,ejgallego,2021-04-03 01:06:42,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14059,ejgallego,2021-04-27 17:55:02,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14059,ejgallego,2021-06-02 10:52:28,ejgallego,"There is still a bit of work to do, in particular for cleaning up envars stuff, but we can try to get this in already I think."
14059,ejgallego,2021-06-02 19:20:22,ejgallego,"@silene I broke this on my last push, but was passing CI since a few weeks; let me fix it.\nThis is the only PR I'm involved with I'd like to get into 8.14, as having a central place for this logic will greatly help if we hit some problem w.r.t. the package split / build system overhaul in 8.14 , which we likely will."
14059,ejgallego,2021-06-02 19:38:09,ejgallego,"Should be fixed now, was a silly typo."
14059,ejgallego,2021-06-07 09:14:21,ppedrot,@ejgallego shouldn't this be demilestoned from 8.14?
14059,ejgallego,2021-06-08 13:35:13,silene,"This is too massive a change, so postponing."
14059,ejgallego,2021-07-14 16:43:41,Alizter,"The refman cannot be built since coqdoc complains about not having the coqlib option. Even when supplied in the doc/dune file, it complains that it could not find the .sty files. I'm not sure if this is because of the new directory code for coqdoc or the coqlib option being supplied incorrectly."
14059,ejgallego,2021-07-14 18:48:18,ejgallego,"The refman cannot be built since coqdoc complains about not having the coqlib option. Even when supplied in the doc/dune file, it complains that it could not find the .sty files. I'm not sure if this is because of the new directory code for coqdoc or the coqlib option being supplied incorrectly.\n\nThanks a lot @Alizter , this is very helpful"
14059,ejgallego,2021-07-14 19:02:05,Alizter,I should mention that previously we didn't need to supply coqlib because coqdoc could guess the directory. It looks like that code was removed however.
14059,ejgallego,2021-07-16 12:35:16,ejgallego,"I should mention that previously we didn't need to supply coqlib because coqdoc could guess the directory. It looks like that code was removed however.\n\nIt should still do it, I will look into it; also, I think we want to add some kind of COQENV_DEBUG env variable, so we can just set it and get a debug output for the env resolution."
14059,ejgallego,2021-08-06 09:31:46,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
14059,ejgallego,2021-08-17 22:15:08,Alizter,There are some additions to the test-suite in #14718 that are probably relevant here.
14059,ejgallego,2021-09-08 09:15:22,ejgallego,"@SkySkimmer the problem you mentioned should be fixed.\nThis surely needs more refinement, but maybe we should go ahead now and keep working on other PRs?"
14059,ejgallego,2021-09-08 09:16:33,ejgallego,"In particular, a todo list is:\n\nforce Env is not doubly-initialized\nget rid of set_coqlib and instead pass it as an argument to init\nmove the loadpath code to boot [that for sure should be done in a different PR]"
14059,ejgallego,2021-09-08 10:14:29,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14059,ejgallego,2021-09-08 11:08:27,coqbot-app,"Hey, I have detected that there were CI failures at commit 2aa652a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit c6ab549 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following targets (which I do not suggest minimizing):\n\nci-fiat_crypto (because base job at c6ab549 failed)\nci-fiat_crypto_legacy (b"
14059,ejgallego,2021-09-08 11:13:44,coqbot-app,"Hey, I have detected that there were CI failures at commit 2aa652a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit c6ab549 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following targets (which I do not suggest minimizing):\n\nci-fiat_crypto (because base job at c6ab549 failed)\nci-fiat_crypto_legacy (b"
14059,ejgallego,2021-09-08 11:32:59,coqbot-app,"Hey, I have detected that there were CI failures at commit 2aa652a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit c6ab549 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following targets (which I do not suggest minimizing):\n\nci-fiat_crypto (because base job at c6ab549 failed)\nci-fiat_crypto_legacy (b"
14059,ejgallego,2021-09-08 14:06:02,coqbot-app,"Hey, I have detected that there were CI failures at commit f888ec6 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit c6ab549 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following targets (which I do not suggest minimizing):\n\nci-fiat_crypto (because base job at c6ab549 failed)\nci-fiat_crypto_legacy (b"
14059,ejgallego,2021-09-09 15:51:48,ejgallego,@SkySkimmer note my comment above [and the removal of the needs:progress tag] ; I'm unsure if it is easy to see with the GH interface hiding stuff.
14059,ejgallego,2021-09-10 15:36:50,SkySkimmer,@coqbot merge now
14059,ejgallego,2021-09-10 15:36:52,coqbot-app,@SkySkimmer: Please take care of the following overlays:\n\n14059-ejgallego-coq+path_boot.sh
14059,ejgallego,2021-09-11 17:45:19,Zimmi48,"@ejgallego it seems like you forgot to add code owners for this new library, didn't you?"
14059,ejgallego,2021-09-13 11:50:06,ejgallego,"@ejgallego it seems like you forgot to add code owners for this new library, didn't you?\n\nIndeed, thanks for pointing that out."
13024,JasonGross,2020-09-17 11:16:35,Zimmi48,@coqbot: merge now
14328,JasonGross,2021-05-16 18:06:23,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-16 18:10:52,JasonGross,@coqbot minimize\ntest
14328,JasonGross,2021-05-16 18:10:56,coqbot-app,"Hey @JasonGross, the coq bug minimizer is running your script, I'll come back to you with the results once it's done."
14328,JasonGross,2021-05-16 18:11:13,JasonGross,@coqbot ci minimize all
14328,JasonGross,2021-05-16 18:11:14,coqbot-app,"Hey @JasonGross, you cannot run CI minimization on issues that are not pull requests."
14328,JasonGross,2021-05-16 18:11:49,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-16 18:11:50,coqbot-app,"Hey @JasonGross, you cannot run CI minimization on issues that are not pull requests."
14328,JasonGross,2021-05-16 18:12:11,coqbot-app,"@JasonGross, Error: Could not minimize file  (full log on GitHub Actions)\nbuild log\n++ �[33;1m(/github/workspace/run-script.sh @ line 2) $�[0m test\n\n\nminimizer log\n\n\n\nIf you have any comments on your experience of the minimizer, please share them in a reply (possibly tagging @JasonGross).\nIf you believe there's a bug in the bug minimizer, please report it on the bug minimizer issue tracker."
14328,JasonGross,2021-05-20 21:16:55,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-20 21:17:32,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-20 23:17:28,coqbot-app,"Hey, I have detected that there were CI failures at commit af028cf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit b2431b3 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-elpi, ci-mathcomp, ci-cross_crypto."
14328,JasonGross,2021-05-20 23:19:50,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-20 23:19:58,coqbot-app,"I have initiated minimization at commit af028cf for the suggested target ci-elpi, ci-mathcomp, ci-cross_crypto as requested."
14328,JasonGross,2021-05-20 23:29:43,JasonGross,@coqbot minimize\ntest
14328,JasonGross,2021-05-20 23:29:45,coqbot-app,"Hey @JasonGross, the coq bug minimizer is running your script, I'll come back to you with the results once it's done."
14328,JasonGross,2021-05-20 23:31:05,coqbot-app,"@JasonGross, Error: Could not minimize file  (full log on GitHub Actions)\nbuild log\n++ �[33;1m(/github/workspace/run-script.sh @ line 2) $�[0m test\n\n\nminimizer log\n\n\n\nIf you have any comments on your experience of the minimizer, please share them in a reply (possibly tagging @JasonGross).\nIf you believe there's a bug in the bug minimizer, please report it on the bug minimizer issue tracker."
14328,JasonGross,2021-05-21 13:36:13,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-21 13:36:22,coqbot-app,"I have initiated minimization at commit af028cf for the suggested targets ci-elpi, ci-mathcomp, ci-cross_crypto as requested."
14328,JasonGross,2021-05-21 13:38:41,coqbot-app,Error: Could not minimize file  (full log on GitHub Actions)\nbuild log\n++ set -e\n++++ dirname /github/workspace/coqbot-ci.sh\n+++ cd /github/workspace\n+++ pwd\n++ DIR=/github/workspace\n++ sudo apt-get update -y\nGet:1 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]\nHit:2 http://archive.ubuntu.com/ubuntu bionic InRelease\nGet:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]\nGet:4 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]\nGet:5 htt
14328,JasonGross,2021-05-21 13:38:49,coqbot-app,Error: Could not minimize file  (full log on GitHub Actions)\nbuild log\n++ set -e\n++++ dirname /github/workspace/coqbot-ci.sh\n+++ cd /github/workspace\n+++ pwd\n++ DIR=/github/workspace\n++ sudo apt-get update -y\nGet:1 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]\nHit:2 http://archive.ubuntu.com/ubuntu bionic InRelease\nGet:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]\nGet:4 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]\nGet:5 htt
14328,JasonGross,2021-05-21 13:38:56,coqbot-app,Error: Could not minimize file  (full log on GitHub Actions)\nbuild log\n++ set -e\n++++ dirname /github/workspace/coqbot-ci.sh\n+++ cd /github/workspace\n+++ pwd\n++ DIR=/github/workspace\n++ sudo apt-get update -y\nGet:1 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]\nHit:2 http://archive.ubuntu.com/ubuntu bionic InRelease\nGet:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]\nGet:4 http://security.ubuntu.com/ubuntu bionic-security/universe i386 Packages [1231 
14328,JasonGross,2021-05-21 14:37:58,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-21 14:38:05,coqbot-app,"I have initiated minimization at commit af028cf for the suggested targets ci-elpi, ci-mathcomp, ci-cross_crypto as requested."
14328,JasonGross,2021-05-21 14:40:10,coqbot-app,Error: Could not minimize file  (full log on GitHub Actions)\nbuild log\n++ set -e\n++++ dirname /github/workspace/coqbot-ci.sh\n+++ cd /github/workspace\n+++ pwd\n++ DIR=/github/workspace\n++ sudo apt-get update -y\nHit:1 http://security.ubuntu.com/ubuntu bionic-security InRelease\nHit:2 http://archive.ubuntu.com/ubuntu bionic InRelease\nHit:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease\nHit:4 http://archive.ubuntu.com/ubuntu bionic-backports InRelease\nReading package lists...\n++ sudo apt-ge
14328,JasonGross,2021-05-21 14:40:23,coqbot-app,Error: Could not minimize file  (full log on GitHub Actions)\nbuild log\n++ set -e\n++++ dirname /github/workspace/coqbot-ci.sh\n+++ cd /github/workspace\n+++ pwd\n++ DIR=/github/workspace\n++ sudo apt-get update -y\nHit:1 http://security.ubuntu.com/ubuntu bionic-security InRelease\nHit:2 http://archive.ubuntu.com/ubuntu bionic InRelease\nHit:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease\nHit:4 http://archive.ubuntu.com/ubuntu bionic-backports InRelease\nReading package lists...\n++ sudo apt-ge
14328,JasonGross,2021-05-21 14:40:30,coqbot-app,Error: Could not minimize file  (full log on GitHub Actions)\nbuild log\n++ set -e\n++++ dirname /github/workspace/coqbot-ci.sh\n+++ cd /github/workspace\n+++ pwd\n++ DIR=/github/workspace\n++ sudo apt-get update -y\nHit:1 http://archive.ubuntu.com/ubuntu bionic InRelease\nHit:2 http://archive.ubuntu.com/ubuntu bionic-updates InRelease\nHit:3 http://archive.ubuntu.com/ubuntu bionic-backports InRelease\nHit:4 http://security.ubuntu.com/ubuntu bionic-security InRelease\nReading package lists...\n++ sudo apt-ge
14328,JasonGross,2021-05-21 14:44:30,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-21 14:44:37,coqbot-app,"I have initiated minimization at commit af028cf for the suggested targets ci-elpi, ci-mathcomp, ci-cross_crypto as requested."
14328,JasonGross,2021-05-21 14:46:12,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-21 14:46:18,coqbot-app,"I have initiated minimization at commit af028cf for the suggested targets ci-elpi, ci-mathcomp, ci-cross_crypto as requested."
14328,JasonGross,2021-05-21 14:46:42,coqbot-app,Error: Could not minimize file  (full log on GitHub Actions)\nbuild log\n++ set -e\n++++ dirname /github/workspace/coqbot-ci.sh\n+++ cd /github/workspace\n+++ pwd\n++ DIR=/github/workspace\n++ sudo apt-get update -y\nHit:1 http://security.ubuntu.com/ubuntu bionic-security InRelease\nHit:2 http://archive.ubuntu.com/ubuntu bionic InRelease\nHit:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease\nHit:4 http://archive.ubuntu.com/ubuntu bionic-backports InRelease\nReading package lists...\n++ sudo apt-ge
14328,JasonGross,2021-05-21 14:46:58,coqbot-app,Error: Could not minimize file  (full log on GitHub Actions)\nbuild log\n++ set -e\n++++ dirname /github/workspace/coqbot-ci.sh\n+++ cd /github/workspace\n+++ pwd\n++ DIR=/github/workspace\n++ sudo apt-get update -y\nHit:1 http://security.ubuntu.com/ubuntu bionic-security InRelease\nHit:2 http://archive.ubuntu.com/ubuntu bionic InRelease\nHit:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease\nHit:4 http://archive.ubuntu.com/ubuntu bionic-backports InRelease\nReading package lists...\n++ sudo apt-ge
14328,JasonGross,2021-05-21 14:47:11,coqbot-app,Error: Could not minimize file  (full log on GitHub Actions)\nbuild log\n++ set -e\n++++ dirname /github/workspace/coqbot-ci.sh\n+++ cd /github/workspace\n+++ pwd\n++ DIR=/github/workspace\n++ sudo apt-get update -y\nHit:1 http://security.ubuntu.com/ubuntu bionic-security InRelease\nHit:2 http://archive.ubuntu.com/ubuntu bionic InRelease\nHit:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease\nHit:4 http://archive.ubuntu.com/ubuntu bionic-backports InRelease\nReading package lists...\n++ sudo apt-ge
14328,JasonGross,2021-05-21 14:48:39,coqbot-app,Error: Could not minimize file  (full log on GitHub Actions)\nbuild log\n++ set -e\n++++ dirname /github/workspace/coqbot-ci.sh\n+++ cd /github/workspace\n+++ pwd\n++ DIR=/github/workspace\n++ sudo apt-get update -y\nHit:1 http://security.ubuntu.com/ubuntu bionic-security InRelease\nHit:2 http://archive.ubuntu.com/ubuntu bionic InRelease\nHit:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease\nHit:4 http://archive.ubuntu.com/ubuntu bionic-backports InRelease\nReading package lists...\n++ sudo apt-ge
14328,JasonGross,2021-05-21 14:48:50,coqbot-app,Error: Could not minimize file  (full log on GitHub Actions)\nbuild log\n++ set -e\n++++ dirname /github/workspace/coqbot-ci.sh\n+++ cd /github/workspace\n+++ pwd\n++ DIR=/github/workspace\n++ sudo apt-get update -y\nHit:1 http://security.ubuntu.com/ubuntu bionic-security InRelease\nHit:2 http://archive.ubuntu.com/ubuntu bionic InRelease\nHit:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease\nHit:4 http://archive.ubuntu.com/ubuntu bionic-backports InRelease\nReading package lists...\n++ sudo apt-ge
14328,JasonGross,2021-05-21 14:49:01,coqbot-app,Error: Could not minimize file  (full log on GitHub Actions)\nbuild log\n++ set -e\n++++ dirname /github/workspace/coqbot-ci.sh\n+++ cd /github/workspace\n+++ pwd\n++ DIR=/github/workspace\n++ sudo apt-get update -y\nHit:1 http://security.ubuntu.com/ubuntu bionic-security InRelease\nHit:2 http://archive.ubuntu.com/ubuntu bionic InRelease\nHit:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease\nHit:4 http://archive.ubuntu.com/ubuntu bionic-backports InRelease\nReading package lists...\n++ sudo apt-ge
14328,JasonGross,2021-05-21 14:53:48,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-21 14:53:55,coqbot-app,"I have initiated minimization at commit af028cf for the suggested targets ci-elpi, ci-mathcomp, ci-cross_crypto as requested."
14328,JasonGross,2021-05-21 14:56:41,coqbot-app,Error: Could not minimize file  (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.5MiB file on GitHub Actions Artifacts under ```)\nefinition_C.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_D.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_E.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_F.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_G.html  \n  inflating: _instal
14328,JasonGross,2021-05-21 14:56:43,coqbot-app,Error: Could not minimize file  (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.7MiB file on GitHub Actions Artifacts under ```)\nDPoS4rElD%2FbNeou13DYOmh6laR9DE7Z81GZIeTgQ%3D%3D&Expires=1621609601 [following]\n--2021-05-21 14:56:41--  https://storage.googleapis.com/gitlab-gprd-artifacts/e9/08/e90857e7bd14c877063362e92560ccc07e3c490623d322542e6f83f13867d6d1/2021_05_20/1281044620/1374823283/library_ci-mathcomp.zip?response-content-disposition=attachment%3B%20filename%3D%22li
14328,JasonGross,2021-05-21 14:56:43,coqbot-app,Error: Could not minimize file  (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.6MiB file on GitHub Actions Artifacts under ```)\narchy_builder/coq-hierarchy-builder-shim.opam  \n  inflating: _build_ci/hierarchy_builder/coq-hierarchy-builder.opam  \n  inflating: _build_ci/hierarchy_builder/coq.hb  \n  inflating: _build_ci/hierarchy_builder/default.nix  \n   creating: _build_ci/hierarchy_builder/examples/\n   creating: _build_ci/hierarchy_builder/examples/.coq-native/\n  inflatin
14328,JasonGross,2021-05-21 16:43:06,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-21 16:43:13,coqbot-app,"I have initiated minimization at commit af028cf for the suggested targets ci-elpi, ci-mathcomp, ci-cross_crypto as requested."
14328,JasonGross,2021-05-21 16:46:09,coqbot-app,Error: Could not minimize file  (from ci-cross_crypto) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.5MiB file on GitHub Actions Artifacts under build.log)\nefinition_C.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_D.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_E.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_F.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_
14328,JasonGross,2021-05-21 16:46:10,coqbot-app,Error: Could not minimize file  (from ci-mathcomp) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.7MiB file on GitHub Actions Artifacts under build.log)\n7G4H%2Bpe60oQGChLGEnMIwo3g%3D%3D&Expires=1621616169 [following]\n--2021-05-21 16:46:09--  https://storage.googleapis.com/gitlab-gprd-artifacts/e9/08/e90857e7bd14c877063362e92560ccc07e3c490623d322542e6f83f13867d6d1/2021_05_20/1281044620/1374823283/library_ci-mathcomp.zip?response-content-disposition=attachment%3B%20filenam
14328,JasonGross,2021-05-21 16:46:14,coqbot-app,Error: Could not minimize file  (from ci-elpi) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.6MiB file on GitHub Actions Artifacts under build.log)\narchy_builder/coq-hierarchy-builder-shim.opam  \n  inflating: _build_ci/hierarchy_builder/coq-hierarchy-builder.opam  \n  inflating: _build_ci/hierarchy_builder/coq.hb  \n  inflating: _build_ci/hierarchy_builder/default.nix  \n   creating: _build_ci/hierarchy_builder/examples/\n   creating: _build_ci/hierarchy_builder/examples/.c
14328,JasonGross,2021-05-21 18:18:17,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-21 18:31:35,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-21 18:40:30,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-21 18:40:31,coqbot-app,Error while attempting to find job minimization information:\nCould not find pipeline check for base commit b2431b3.
14758,SkySkimmer,2021-08-09 17:10:47,coqbot-app,"Hey, I have detected that there were CI failures at commit 1865755 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit d731d92 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-equations, ci-hott."
14758,SkySkimmer,2021-08-11 20:51:27,coqbot-app,"Hey, I have detected that there were CI failures at commit 764f8e7 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 080920e succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-equations, ci-hott."
14758,SkySkimmer,2021-08-11 21:54:13,Alizter,@coqbot ci minimize
14758,SkySkimmer,2021-08-11 21:54:18,coqbot-app,"I have initiated minimization at commit 764f8e7 for the suggested targets ci-equations, ci-hott as requested."
14758,SkySkimmer,2021-08-11 21:59:41,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/equations/theories/Type/EqDecInstances.v (from ci-equations) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/equations/src"" ""Equations"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/equations/the"
14758,SkySkimmer,2021-08-11 22:05:03,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Modalities/ReflectiveSubuniverse.v (from ci-hott) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hott/theories"" ""HoTT"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-faili"
14758,SkySkimmer,2021-09-20 10:10:39,SkySkimmer,ping @coq/pretyper-maintainers
14758,SkySkimmer,2021-09-24 17:04:08,ppedrot,"I wouldn't mind a high level description of the changes. The major difference is that the equality function is now aware of the arity of inductive types, but this looks hardly enough to really be more complete?"
14758,SkySkimmer,2021-09-24 17:32:43,ppedrot,"@SkySkimmer the two overlays are merged, can you rebase and remove the corresponding commit?"
14758,SkySkimmer,2021-09-24 17:50:34,SkySkimmer,Bench to exercise the machines https://gitlab.com/coq/coq/-/jobs/1621327786
14606,herbelin,2021-07-05 22:01:36,coqbot-app,"Hey, I have detected that there were CI failures at commit b711386 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 8560c27 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-argosy."
14606,herbelin,2021-07-05 22:50:57,coqbot-app,"Hey, I have detected that there were CI failures at commit b711386 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 8560c27 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-argosy."
14606,herbelin,2021-07-05 22:56:45,coqbot-app,"Hey, I have detected that there were CI failures at commit b711386 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 8560c27 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-argosy."
14606,herbelin,2021-07-08 11:08:43,coqbot-app,"Hey, I have detected that there were CI failures at commit 5b9df34 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 444aa95 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14606,herbelin,2021-07-18 16:04:48,ppedrot,@herbelin can you also take advantage of the nitpick to rebase and get a green CI? I'll merge after.
14606,herbelin,2021-07-23 13:32:35,RalfJung,Is it possible that this is the cause of #14703?
14606,herbelin,2021-07-23 16:24:18,RalfJung,"It looks like this PR also changed notation parsing:\n(Σ[ ty; rc ty ]).(ty_size) now fails (""unknown interpretation for notation"") where ty_size (Σ[ ty; rc ty ]) still works; here Σ[...] is a notation in a scope that is not opened globally but via Arguments ty_size."
14606,herbelin,2021-07-23 17:00:14,herbelin,I could not reproduce. Could you give an example if possible?
14606,herbelin,2021-07-23 17:20:57,herbelin,"For instance, the following works:\nDeclare Scope foo_scope.\nDelimit Scope foo_scope with foo.\nRecord prod A B := pair { fst : A ; snd : B }.\nNotation ""[[ t , u ]]"" := (pair _ _ t u) : foo_scope.\nArguments fst {A B} p%foo.\nCheck [[2,3]].(fst).\n\n@RalfJung : How different is your real example?"
14606,herbelin,2021-07-23 17:26:45,RalfJung,This is the change that was required. I can try to minimize this.
14606,herbelin,2021-07-23 17:36:00,RalfJung,"Hm, my attempt to isolate this also failed:\nFrom Coq Require Import List.\nExport ListNotations.\n\nRecord type :=\n  { ty_size : nat;\n    ty_own : list nat -> Prop;\n    ty_size_eq vl : ty_own vl -> length vl = ty_size;\n  }.\n\nDeclare Scope lrust_type_scope.\nDelimit Scope lrust_type_scope with T.\nBind Scope lrust_type_scope with type.\n\nAxiom sum : list type -> type.\n\nNotation ""Σ[ ty1 ; .. ; tyn ]"" :=\n  (sum (cons ty1%T (..(cons tyn%T nil)..))) : lrust_type_scope.\n\nAxiom t : type.\nCheck (ty_size Σ[t; "
14606,herbelin,2021-07-23 17:37:16,herbelin,"Actually, this has nothing to do with scopes and notations. It is another instance of the class argument of ty_size being forced to be explicit and in position of main argument when using the .( ) notation! No more worries than #14703!"
14606,herbelin,2021-07-23 17:39:47,RalfJung,"I don't see that. Σ[ ty; rc ty ] is of type type and ty_size is a primitive projection of type.\nUsing foo.(ty_size) works in many other places, it just does not work here. And the error explicitly talks about ""unknown interpretation for notation"". I am pretty sure this is a different issue than #14703."
14606,herbelin,2021-07-23 17:42:38,RalfJung,"For example, further up the same file we do new [ #(option ty).(ty_size) ] and that works just fine. That should require exactly the same kind of inference as new [ #(Σ[ ty; rc ty ]).(ty_size) ]."
14606,herbelin,2021-07-23 18:02:51,herbelin,"You're right, there is a bug (I did not test on the right branch apparently). I'm going to submit a fix soon."
14606,herbelin,2021-07-23 19:04:18,RalfJung,"Awesome, thanks. :)"
14840,ppedrot,2021-09-02 14:53:11,ppedrot,Bench: https://gitlab.com/coq/coq/-/jobs/1557531385
14840,ppedrot,2021-09-02 16:31:49,Janno,"I am surprised to see that projects use  Typeclasses Strict Resolution. I tried once and immediately ran into non-minimizable issues where it didn't freeze evars correctly. In any case, this change looks very reasonable!"
14840,ppedrot,2021-09-03 10:20:28,coqbot-app,"Hey, I have detected that there were CI failures at commit 7d94f41 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 9d18eff succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do not suggest minimizing): ci-category_theory (because base job at 9d18eff failed)\nHowever, you may want "
14840,ppedrot,2021-09-03 12:35:21,ppedrot,"HoTT uses the flag, and indeed it is observable in the bench.\n┌─────────────────────────────┬─────────────────────────┬───────────────────────────────────────┬───────────────────────────────────────┬─────────────────────────┬─────────────────┐\n│                             │      user time [s]      │              CPU cycles               │           CPU instructions            │  max resident mem [KB]  │   mem faults    │\n│                             │                         │                 "
14840,ppedrot,2021-09-03 12:36:15,ppedrot,"Since there are so few users I don't think it's worth it to introduce this change. Maybe when we fix the flag behaviour, but until then I'd rather close this experiment as a theoretical success without actual consequences."
14783,SkySkimmer,2021-08-13 23:53:29,coqbot-app,"Hey, I have detected that there were CI failures at commit 371632d without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1a0460b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-vst."
14783,SkySkimmer,2021-08-14 07:59:42,SkySkimmer,@coqbot ci minimize\n(error at https://github.com/PrincetonUniversity/VST/blob/1d70827abb17bda3842883689440a41d00e64313/progs/ghosts.v#L1103 btw)
14783,SkySkimmer,2021-08-14 07:59:50,coqbot-app,I have initiated minimization at commit 371632d for the suggested target ci-vst as requested.
14783,SkySkimmer,2021-08-14 08:04:51,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/progs/ghosts.v (from ci-vst) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 57KiB file on GitHub Actions Artifacts under bug.v)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.Logic.ClassicalFacts.\nRequire Coq.Lo"
14783,SkySkimmer,2021-08-14 08:21:50,SkySkimmer,@JasonGross that doesn't look right
14783,SkySkimmer,2021-08-17 07:11:15,ejgallego,"@SkySkimmer @Zimmi48 IMVHO this is a good example of the problems that high latency in CI may cause, just noting this one in case we do a writeup of the CI."
14783,SkySkimmer,2021-08-17 07:23:48,JasonGross,@SkySkimmer The minimizer is set up to minimize a single source against two versions of Coq.  Here you have two different versions of the CI against one version of Coq.  What were you hoping for?
14783,SkySkimmer,2021-08-17 14:25:37,SkySkimmer,@JasonGross I see.\nIs there a way to run the minimizer against the success with 8.13 at https://gitlab.com/coq/coq/-/jobs/1509687999 ?
14783,SkySkimmer,2021-08-18 05:32:43,JasonGross,"@SkySkimmer the easiest way to do that is to rebase this PR on that commit, or else open a new PR with that commit as the base one.  If you want to do it without rebasing, that's doable, but quite painful; you basically need to be coqbot and make a branch on the minimizer repo with the relevant files filled out."
14783,SkySkimmer,2021-08-18 05:35:01,JasonGross,"Also, if that job isn't from master, you'll also need to target the PR to whatever branch that job is on (and the branch should be on coq/coq at least long enough for the minimizer to run)"
14783,SkySkimmer,2021-08-19 09:53:40,SkySkimmer,"Looks like VST isn't compatible with the fix to #13413, I will PR"
14783,SkySkimmer,2021-08-19 14:19:59,SkySkimmer,Ready
14783,SkySkimmer,2021-08-19 17:15:12,Zimmi48,@coqbot: merge now
11390,herbelin,2020-01-14 21:58:17,herbelin,I added a warning for Context not in a section (but I'm not fully convinced; refining the refman to tell that Context outside a section is like the declarations made Local is maybe lighter).\nMaybe the incompatibilities are too important and it'll be preferable to do the fix in two steps... A first release with a warning telling how to fix. The next release w/o the warning??
11390,herbelin,2020-01-15 12:55:57,SkySkimmer,"Some people use context outside sections a lot, eg https://github.com/mit-pdos/perennial/blob/cdaa737e40d08c1c7c7d514db69a8f9b55814713/src/CSL/RefinementIdempotenceModule.v#L18-L52\nNot sure we want to warn for that. Maybe an off-by-default warning?"
11390,herbelin,2020-01-16 10:21:29,herbelin,"Some people use context outside sections a lot, eg https://github.com/mit-pdos/perennial/blob/cdaa737e40d08c1c7c7d514db69a8f9b55814713/src/CSL/RefinementIdempotenceModule.v#L18-L52\nNot sure we want to warn for that. Maybe an off-by-default warning?\n\nThanks. This confirms my view that we should rather change the doc. (But still keep a warning for Context {a : A} outside a section).\nTo deal with the compatibility, I'm now otherwise considering using the multiple sequence of implicit arguments feat"
11390,herbelin,2020-02-13 14:57:08,herbelin,"If this is meant to be a breaking change, the changelog entry should be much more explicit about this.\n\nI started investigating how to make it  (hopefully) a non-breaking change, by using multiple lists of implicit arguments. It is not so clear how to do in an elegant way though:\n\n\nFirst, this has to exclude constants with flexible conclusion as e.g. in type forall X, X -> X, since this kind of constant have an arity difficult to control syntactically.\n\n\nSecond, it would be too ad hoc to do it o"
11390,herbelin,2020-05-12 14:10:35,Zimmi48,"Dear PR author(s) and contributors, it seems to us this PR may need additional work beyond the 8.12 branching deadline on May 15th.\nWe are thus removing the 8.12+beta1 milestone; please retarget as appropriate, and also consider updating labels to reflect current status, moving the PR to draft status, etc.\nWe apologize in advance if we misunderstood the PR status."
11390,herbelin,2020-05-12 18:29:44,herbelin,"This PR implements/fixes what I think is the expected behavior for Context and, to me, there is no doubt that it is good. The problem was to preserve compatibility. User and developer feedback welcome about how to manage the incompatibilities (a flag, an upgrading script, manual updates, ...)?"
11390,herbelin,2020-05-13 17:13:58,Zimmi48,"I'm slightly worried about your ideas for making this a non-breaking change. I'd much rather advertise this as a breaking bug fix (like the one of Export) and implement the only correct behavior. Have you tried preparing overlays for the affected projects? Naively, I'd think that if the implicit binders were ignored, a backward-compatible fix is just to remove the implicit binders from these projects, wherever they create trouble. If backward-compatible overlays are easy to prepare, then the num"
11390,herbelin,2020-11-18 16:23:21,Zimmi48,"BTW, the change to the doc is completely independent of the rest of the PR and should have been its own PR (it would have been merged much faster)."
11390,herbelin,2020-11-18 16:29:21,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
11390,herbelin,2020-11-18 16:41:43,Zimmi48,The number of impacted projects seems so huge that I'm having a very hard time believing that there are really this many projects that used an implicit binder in the type of a variable declared in a Context command. It may instead be the effect of a buggy implementation...
11390,herbelin,2020-11-18 16:56:37,SkySkimmer,Why's the test suite broken?
11390,herbelin,2020-11-18 20:19:06,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
11390,herbelin,2020-11-18 22:19:14,herbelin,"Why's the test suite broken?\n\nBecause I mistakenly pushed an experimental and non finalized commit living on top of my local copy of the branch. 😞\nThe failures are otherwise not so many apparently: unimath, rewriter, cross-crypto, fiat-parsers."
11390,herbelin,2020-11-19 10:03:58,Zimmi48,"The failures are otherwise not so many apparently: unimath, rewriter, cross-crypto, fiat-parsers.\n\nThat's a reasonable number then. The next step is fixing these to determine how easy / difficult it was without a warning."
11390,herbelin,2020-11-22 09:16:09,herbelin,Do we try to have this fix in 8.13? Note that overlays are not needed: the two upstream PRs remaining to be merged will maintain compatibility.
11390,herbelin,2020-11-22 10:00:46,Zimmi48,"Backward-compatible overlays are good because they avoid issues of synchronization and spurious failures on master. However, they don't change the fact that backporting a breaking change still requires updating the pinned commits on the release branch. So it really depends whether @gares thinks it's worth the effort or not.\nBTW, how easy was it to fix the errors?"
11390,herbelin,2020-11-22 10:14:48,herbelin,"BTW, how easy was it to fix the errors?\n\nIn most of cases, just removing the { } was the intended things to do.\nIn other cases, the { } were expected and this was simplifying the code. So as to be backward-compatible, I added extra (eventually superflous) Local Arguments declarations to compensate the non-declaration of implicit arguments, and I removed some _ here and there.\nIn total, this was not a lot of changes. It took me about 2h though (doing other things in parallel) because the developm"
11390,herbelin,2020-11-22 11:52:53,Zimmi48,The changelog looks better. Note the comment of Jim on the documentation change.
11390,herbelin,2020-11-22 12:24:03,herbelin,Note the comment of Jim on the documentation change.\n\nI don't exactly what to do. Maybe is it useless to refer to Variable and Let (even more than Variables accept several declarations). Do we try to improve it now or will it change anyway later?
11390,herbelin,2020-11-22 14:55:47,Zimmi48,Maybe revert the documentation change since it's not viewed as a clear improvement.
11390,herbelin,2020-11-22 16:53:47,herbelin,"Maybe revert the documentation change since it's not viewed as a clear improvement.\n\nI agree. Actually, I'm not fully convinced that Context outside a section is worth to be recommended, compared e.g. to Parameters and Axioms."
11390,herbelin,2020-11-22 20:29:13,Zimmi48,"I agree. Actually, I'm not fuly convinced that Context outside a section is worth to be recommended, compared e.g. to Parameters and Axioms.\n\nBefore deciding whether to recommend it, I would like to clarify the status of #13068."
11390,herbelin,2020-11-23 12:40:29,gares,IMO this one goes to 8.14
11390,herbelin,2020-11-23 15:38:51,Zimmi48,@gares: Segfault in the base+async job. See https://gitlab.com/coq/coq/-/jobs/866272033
11390,herbelin,2020-11-23 15:43:03,Zimmi48,fiat-crypto is failing but it looks like this is because you didn't include the overlay for this project in your overlay file.
11390,herbelin,2020-11-23 16:03:01,gares,"@gares: Segfault in the base+async job. See https://gitlab.com/coq/coq/-/jobs/866272033\n\n\n[ 4015.845895] coqc[13309]: segfault at 55a3e3f5a1cc ip 000055a3e3f5a1cc sp 00007ffe29464240 error 14\n[ 4015.860215] Code: Bad RIP value.\n\nIt's not an OOM, but a true segfault because it's fetching an instruction at a wrong address.\nI've no idea why/how this can happen."
11390,herbelin,2020-11-23 20:34:08,jfehrle,"I've no idea why/how this can happen.\n\nIf rerunning the job clears the segfault, the error was probably caused by cosmic rays flipping bits in DRAM.  Some high-end servers have error correcting memory to address this.  They could fix single-bit errors and detect 2-bit errors in a single word of memory.  IIRC this required 5 extra bits for every 32 (16??) bits of memory.  Another alternative was to have a parity bit that could detect a single-bit error.  Both of these require additional hardware."
11390,herbelin,2020-11-23 21:11:06,gares,"Thanks for the support. Here it is believed that there is a correlation between ""async"" and these failures.\nAsync uses threads (in a very trivial ways), doubles the number of processes (hence memory usage), and marshals data between processes (the only unsafe feature of OCaml we use).\nI'd love cosmic rays to be the culprit, but I'm afraid it's too often reproducible to be that. Even if I've no clue what the true reason could be :-/\nThe async job tests what happens when you open CoqIDE (or an oth"
11390,herbelin,2020-11-24 09:27:13,Zimmi48,Note that the suggestion to revert the changes to the documentation is still not addressed.
11390,herbelin,2020-11-24 09:52:38,herbelin,Note that the suggestion to revert the changes to the documentation is still not addressed.\n\nI was waiting for more feedback...\nBut we can also take the decision only the two of us...
11390,herbelin,2020-11-24 09:56:29,Zimmi48,Feedback on the wording or feedback on whether to advertise Context outside sections or not?
11390,herbelin,2020-11-24 10:00:22,herbelin,Feedback on going in the direction of not documenting Context outside sections.
11390,herbelin,2020-11-24 10:05:28,Zimmi48,"Feedback on going in the direction of not documenting Context outside sections.\n\nOK, then it's a discussion that is worth having with more than two developers IMHO but definitely not in this orthogonal PR.\nAnd if we do decide to advertise Context beyond sections, then it's more than an additional paragraph that we need: it's a change of location of the Context documentation.\nLet's take this to the Coq Call."
11390,herbelin,2020-11-24 11:25:19,herbelin,I then removed the doc commit so as to split the different issues.
11390,herbelin,2020-11-24 16:52:27,Zimmi48,The version you pushed doesn't build anymore.
11390,herbelin,2020-11-24 18:39:14,herbelin,The version you pushed doesn't build anymore.\n\nWhat a relief! I was looking everywhere where my ongoing work on #13468 had gone and it was just accidentally committed to this branch!
11390,herbelin,2021-06-23 16:08:58,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
11390,herbelin,2021-06-23 17:17:26,coqbot-app,"Hey, I have detected that there were CI failures at commit 9629257 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit c750baa succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-fiat_crypto, ci-fiat_crypto_legacy.\nHowever, you may want to wait until the pipeline for the base commit (c750baa) finishes."
11390,herbelin,2021-09-22 02:14:59,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
11390,herbelin,2021-09-22 12:33:09,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14698,Zimmi48,2021-07-22 12:26:44,Alizter,Did we document what was wrong with using dune for the test-suite somewhere? I only remember that it didn't work very well.
14698,Zimmi48,2021-07-22 12:38:02,Zimmi48,"What do you mean by using Dune? If that's running dune runtest / make -f Makefile.dune test-suite, there is no problem besides the lack of incrementality (which is what I document in this PR)."
14698,Zimmi48,2021-08-11 17:41:35,Zimmi48,"Since #14625 has been merged, this one is ready to merge as well."
14698,Zimmi48,2021-08-11 17:42:55,SkySkimmer,Should we recommend make -C or cd; make?
14698,Zimmi48,2021-08-11 17:44:10,Zimmi48,Aren't the two strictly equivalent?
14698,Zimmi48,2021-08-11 17:45:47,SkySkimmer,"Except for changing the shell's directory yes, but someone not familiar with make wouldn't know that."
14698,Zimmi48,2021-08-11 22:33:53,Zimmi48,Updated.
14698,Zimmi48,2021-09-08 09:37:08,SkySkimmer,That sounds OK to me
14698,Zimmi48,2021-09-08 12:43:48,Zimmi48,@ejgallego Updated to take your suggestion into account.
14698,Zimmi48,2021-09-08 14:43:56,coqbot-app,"Hey, I have detected that there were CI failures at commit f7f9d73 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit c6ab549 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following targets (which I do not suggest minimizing):\n\nci-fiat_crypto (because base job at c6ab549 failed)\nci-fiat_crypto_legacy (b"
14698,Zimmi48,2021-09-10 12:56:57,ejgallego,@coqbot: merge now
14234,liyishuai,2021-05-02 00:53:22,JasonGross,"Perhaps also add ltb?  And maybe we want a lemma that says that if two strings are leb in both directions, them they're equal, and that for all strings, one is leb to the other?  (Maybe look at what lemmas exist around Z.leb?) But feel free also to not add these; we don't want the perfect to be the enemy of the good"
14234,liyishuai,2021-05-02 01:30:48,liyishuai,I'm restructuring these definitions into compare-based.
14234,liyishuai,2021-05-07 04:26:06,liyishuai,Not sure why MetaCoq was broken. Did I pollute its namespace?
14234,liyishuai,2021-05-07 10:27:30,herbelin,Metacoq was broken for all PRs a few days ago. You should rebase to double-check.
14234,liyishuai,2021-05-16 19:25:46,coqbot-app,"Hey, I have detected that there were CI failures at commit 7e89743 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 77d56f3 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-metacoq."
14234,liyishuai,2021-05-16 19:25:47,coqbot-app,"Hey @coqbot-app[bot], you cannot run CI minimization on issues that are not pull requests."
14234,liyishuai,2021-05-16 20:50:22,liyishuai,@coqbot ci minimize\n(Did the bot just talk to itself?)
14234,liyishuai,2021-05-16 20:50:23,coqbot-app,"Hey @liyishuai, you cannot run CI minimization on issues that are not pull requests."
14234,liyishuai,2021-05-16 20:51:48,anton-trunov,@liyishuai I tried re-running the MetaCoq job but to no avail.
14234,liyishuai,2021-05-16 22:34:22,liyishuai,This job depends on other jobs with expired/erased artifacts: build:base\n\nShould I re-push?
14234,liyishuai,2021-05-17 00:29:29,JasonGross,"(Did the bot just talk to itself?)\n\nOops.  I've fixed this issue.  The other issue is waiting on waiting on feedback from @Zimmi48 on how to retrieve PR info on non-review comments, so I've disabled the ci minimization for now"
14234,liyishuai,2021-06-02 00:17:59,coqbot-app,"Hey, I have detected that there were CI failures at commit a706e26 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit cecee26 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14234,liyishuai,2021-06-02 00:32:15,JasonGross,@coqbot CI minimize
14234,liyishuai,2021-06-02 00:32:18,coqbot-app,I have initiated minimization at commit a706e26 for the suggested target ci-metacoq as requested.
14234,liyishuai,2021-06-02 00:43:52,coqbot-app,"Error: Could not minimize file  (from ci-metacoq) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 3.4MiB file on GitHub Actions Artifacts under build.log)\nances outside of sections without\nspecifying an explicit locality is therefore deprecated. It is recommended to\nuse ""export"" whenever possible.\n[deprecated-instance-without-locality,deprecated]\nFile ""/github/workspace/builds/coq/coq-passing/_build_ci/metacoq/template-coq/theories/Reflect.v"", line 377, characters 0-8:\nWarn"
14234,liyishuai,2021-06-02 07:49:10,herbelin,"Hi, I took the freedom of rebasing the PR so as to restart CI. It seems that the incompatibility is only in leb needing to be qualified into Nat.leb in file pcuic/theories/PCUICToTemplateCorrectness.v of MetaCoq."
14234,liyishuai,2021-06-04 10:18:16,coqbot-app,"Hey, I have detected that there were CI failures at commit 24a5bb7 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 255d2c8 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14234,liyishuai,2021-06-05 20:15:02,liyishuai,@coqbot ci minimize
14234,liyishuai,2021-06-05 20:15:10,coqbot-app,I have initiated minimization at commit 24a5bb7 for the suggested target ci-metacoq as requested.
14234,liyishuai,2021-06-05 20:26:16,coqbot-app,Error: Could not minimize file  (from ci-metacoq) (full log on GitHub Actions)\nbuild log\n++ set -e\n++++ dirname /github/workspace/coqbot-ci.sh\n+++ cd /github/workspace\n+++ pwd\n++ DIR=/github/workspace\n++ echo '::group::install dependencies'\n::group::install dependencies\n++ sudo apt-get update -y\nHit:1 http://security.ubuntu.com/ubuntu bionic-security InRelease\nHit:2 http://archive.ubuntu.com/ubuntu bionic InRelease\nHit:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease\nHit:4 http://arch
14234,liyishuai,2021-06-06 02:13:34,JasonGross,Unfortunately minimization of metacoq does not work yet due to #14453
14234,liyishuai,2021-06-08 17:15:34,herbelin,"@ liyishuai: if you rebase, metacoq should now pass, after MetaCoq/metacoq#561 and MetaCoq/metacoq#562 were merged."
14234,liyishuai,2021-08-11 19:11:02,Alizter,@anton-trunov Will you be merging this?
14234,liyishuai,2021-08-12 18:37:57,anton-trunov,@coqbot merge now
14234,liyishuai,2021-08-12 18:38:15,anton-trunov,@Alizter thanks for the ping :)
14819,proux01,2021-08-30 16:15:58,Alizter,@silene can we add this to 8.14?
14819,proux01,2021-08-30 17:36:40,silene,"No, numerous users have already updated their developments for 8.14, so I will not merge any pull request that might cause breakage with respect to the alpha release of 8.14."
14819,proux01,2021-08-30 18:49:52,proux01,"Anyway, this is specifically targeting 8.15 since we commit to keep deprecations for 2 releases so: deprecation in 8.13 -> removal in 8.15"
14819,proux01,2021-08-30 19:38:29,olaure01,"Concerning prod_curry and prod_uncurry, the deprecation attribute in 8.13 was put on a Definition. Is it visible from the user side? wouldn't an intermediary step with a Notation be necessary?"
14819,proux01,2021-08-30 22:11:58,coqbot-app,"Hey, I have detected that there were CI failures at commit ee129e2 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-category_theory, ci-fiat_parsers, ci-flocq, ci-iris, ci-mathcomp, ci-metacoq, ci-perennial."
14819,proux01,2021-08-30 23:29:32,coqbot-app,"Hey, I have detected that there were CI failures at commit ee129e2 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-category_theory, ci-fiat_parsers, ci-flocq, ci-iris, ci-mathcomp, ci-metacoq, ci-perennial."
14819,proux01,2021-08-31 19:19:23,coqbot-app,"Hey, I have detected that there were CI failures at commit 25bdcd4 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-category_theory, ci-fiat_parsers, ci-flocq, ci-metacoq."
14819,proux01,2021-09-01 14:41:38,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 14:45:26,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 14:49:04,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 14:52:10,proux01,@JasonGross @Zimmi48 is there a good reason for the above minimize messages to be duplicated?
14819,proux01,2021-09-01 14:52:41,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 14:56:24,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 14:59:58,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 15:03:51,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 15:07:25,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 15:10:58,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 15:14:41,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 15:18:10,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 15:20:38,proux01,"@JasonGross I'm sorry, I suck at git submodules and I'm unable to do the fiat_parsers overlay, it seems to be enough to replace Numeral Notation by Number Notation in etc/coq-script/compatibilitty/Coq__{8_15,master}__Compat.v"
14819,proux01,2021-09-01 15:21:42,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 15:25:16,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 15:28:42,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 15:32:15,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 15:35:43,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 15:36:26,SkySkimmer,Why is coqbot repeating itself? @JasonGross
14819,proux01,2021-09-01 15:39:14,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 15:42:46,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 15:46:18,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 15:49:47,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 15:53:12,coqbot-app,"Hey, I have detected that there were CI failures at commit d6e6201 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14819,proux01,2021-09-01 18:55:38,Zimmi48,"@JasonGross @Zimmi48 is there a good reason for the above minimize messages to be duplicated?\n\nYou did manually restart the metacoq job several times, right? At this point, coqbot will print minimize messages every time that a pipeline completes, which explains some duplication (we plan on making coqbot less verbose by checking if it's reposting a comment similar to a previous one).\nThen there was an issue with the fiat-parsers job being restarted over and over by coqbot. In principle, it only r"
14819,proux01,2021-09-01 20:10:06,proux01,"Thanks for the explanations and advice, I didn't even thought coqbot could restart jobs and just thought the job was taking a very long time without looking further."
14819,proux01,2021-09-02 01:10:24,coqbot-app,"Hey, I have detected that there were CI failures at commit 4d3071b without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 6bd07ba succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_parsers.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do not su"
14819,proux01,2021-09-02 09:43:49,coqbot-app,"Hey, I have detected that there were CI failures at commit 89486cb without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 6685a40 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_parsers.\nHowever, you may want to wait until the pipeline for the base commit (6685a40) finishes."
14819,proux01,2021-09-02 10:21:05,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14819,proux01,2021-09-02 11:41:38,coqbot-app,"Hey, I have detected that there were CI failures at commit 7984a76 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 6685a40 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-argosy, ci-bbv, ci-bedrock2, ci-cross_crypto, ci-fiat_crypto, ci-fiat_crypto_legacy, ci-fiat_parsers, ci-metacoq.\nIf you tag me"
14819,proux01,2021-09-02 12:40:00,coqbot-app,"Hey, I have detected that there were CI failures at commit 4bf243f without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit dbe6d3c succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_parsers.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do not su"
14819,proux01,2021-09-02 13:18:17,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14819,proux01,2021-09-02 13:49:34,Alizter,@coqbot ci minimize
14819,proux01,2021-09-02 13:49:41,coqbot-app,"I have initiated minimization at commit bd6bd0d for the suggested targets ci-fiat_crypto, ci-fiat_crypto_legacy, ci-fiat_parsers, ci-metacoq as requested.\nHowever, you may want to try again once the pipeline for the head commit (bd6bd0d) finishes."
14819,proux01,2021-09-02 13:55:28,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Common/Coq__8_4__8_5__Compat.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/coq-failing"
14819,proux01,2021-09-02 14:00:26,Alizter,Hmm seems fiat parsers is still using Numeral rather than Number. I suspect this is to support an older version of coq. @JasonGross What should be done?\nEdit: Or perhaps just adding an overlay that changes Numeral to Number would be enough. The fiat devs should merge the overlay in their own time.
14819,proux01,2021-09-02 14:02:52,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto_legacy/bbv/src/bbv/Word.v (from ci-fiat_crypto_legacy) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-notation-overridden"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto_legacy/src"" ""Crypto"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_cry"
14819,proux01,2021-09-02 14:04:17,Alizter,So it looks like we need more overlays:\n\nfiat-parsers: replace Numeral with Number.\nfiat-crypto-legacy: replace Grab Existential Variables. with Unshelve.
14819,proux01,2021-09-02 14:29:25,coqbot-app,"Hey, I have detected that there were CI failures at commit bd6bd0d without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit dbe6d3c succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-fiat_crypto, ci-fiat_crypto_legacy, ci-fiat_parsers, ci-metacoq.\nIf you tag me saying @coqbot ci minimize all, I w"
14819,proux01,2021-09-02 15:24:47,Zimmi48,The removal should be documented in (probably several distinct) changelog entries.
14819,proux01,2021-09-02 17:03:31,proux01,"So it looks like we need more overlays:\n\nfiat-parsers: replace Numeral with Number.\nfiat-crypto-legacy: replace Grab Existential Variables. with Unshelve.\n\n\nIndeed, I'm in the process of doing them, but those things use chains of git submodules, so I cannot add overlays directly here."
14819,proux01,2021-09-02 17:40:09,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto/src/Primitives/MxDHRepChange.v (from ci-fiat_crypto) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+variable-collision,+omega-is-deprecated,+deprecated-instantiate-syntax,+non-recursive"""
14819,proux01,2021-09-02 19:06:45,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/metacoq/safechecker/theories/PCUICWfReduction.v (from ci-metacoq) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 60KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/metacoq/template-coq/theories"" ""MetaCoq"
14379,herbelin,2021-05-24 14:19:24,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14379,herbelin,2021-05-24 15:22:39,coqbot-app,"Hey, I have detected that there were CI failures at commit 3d6e4ac without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ce69cf0 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-coq_tools, ci-rewriter, ci-fiat_crypto_legacy."
14379,herbelin,2021-05-24 16:06:04,coqbot-app,"Hey, I have detected that there were CI failures at commit 3d6e4ac without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ce69cf0 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-rewriter, ci-fiat_crypto_legacy, ci-coq_tools."
14379,herbelin,2021-05-24 16:12:49,JasonGross,"The changelog should also mention the change in the meaning of Reserved Infix ""'o'"".  Speaking of which, what's the correct way to reserve an infix for\nNotation ""f 'o' g"" := (compose f g).\n?  And what's the corresponding Infix command?  I thought it was Infix ""'o'"" and Reserved Infix ""'o'"", is this not the case?  Was this the case but it no longer is?"
14379,herbelin,2021-05-24 18:12:59,coqbot-app,"Hey, I have detected that there were CI failures at commit 3d6e4ac without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ce69cf0 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-rewriter, ci-fiat_crypto_legacy."
14379,herbelin,2021-05-24 20:17:43,herbelin,"The changelog should also mention the change in the meaning of Reserved Infix ""'o'"". Speaking of which, what's the correct way to reserve an infix for\nNotation ""f 'o' g"" := (compose f g).\n? And what's the corresponding Infix command? I thought it was Infix ""'o'"" and Reserved Infix ""'o'"", is this not the case? Was this the case but it no longer is?\n\nThis is not changed by the PR. You should use Infix ""o""/Reserved Infix ""o"" (without single quotes). Using Infix ""'o'""/Reserved Infix ""o"" used to only"
14379,herbelin,2021-05-24 21:09:32,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14379,herbelin,2021-05-24 22:12:17,coqbot-app,"Hey, I have detected that there were CI failures at commit 0656f03 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 205ccaf succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-fiat_crypto, ci-fiat_crypto_legacy."
14379,herbelin,2021-05-31 16:33:36,herbelin,"In the PR, some consistency is lost between Infix and Reserved Infix (as shown by fiat-crypto). I would prefer to redo this PR in a cleaner way on top of #13353. Postponing to 8.15."
14379,herbelin,2021-07-03 07:02:10,ppedrot,"Test-suite needs a trivial fix, though."
14379,herbelin,2021-07-08 10:20:16,ppedrot,@herbelin ping
14379,herbelin,2021-07-09 08:34:53,ppedrot,Last call for comments before merging.
14818,proux01,2021-08-31 17:56:46,coqbot-app,"Hey, I have detected that there were CI failures at commit 0d89589 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14818,proux01,2021-08-31 18:26:14,JasonGross,@coqbot CI minimize
14818,proux01,2021-08-31 18:26:19,coqbot-app,I have initiated minimization at commit 0d89589 for the suggested target ci-category_theory as requested.
14818,proux01,2021-08-31 18:31:38,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/category_theory/Lib/TList.v (from ci-category_theory) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.Bool.Bool.\nRequire Coq.Classes.CEquivalence.\nRe"
14818,proux01,2021-08-31 19:14:46,proux01,"@JasonGross this category_theory failure is unrelated, likely an error upstream"
14818,proux01,2021-09-07 07:33:03,proux01,@JasonGross would you be the assignee here? You are certainly the most knowledgeable about that part of the code.
14818,proux01,2021-09-07 11:55:21,JasonGross,@coqbot merge now
14818,proux01,2021-09-07 12:23:52,proux01,Thanks!
14818,proux01,2021-09-07 12:48:49,coqbot-app,This PR was postponed. Please update accordingly the milestone of any issue that this fixes as this cannot be done automatically.
14903,ppedrot,2021-09-20 18:42:55,ppedrot,"FTR, in the recent years I've rewritten this PR from scratch a dozen of times already but always ended up banging my head against the walls in despair due to some subtle ""interactions"" with other parts of kernel / declare. All the nice cleanups in the latter component seem to have made this possible at last!"
14903,ppedrot,2021-09-20 18:49:34,SkySkimmer,Removal of the context set printing for monomorphic constants.\n\nOK for me
14903,ppedrot,2021-09-21 06:57:04,herbelin,"BTW, I may have already asked the question, but I don't remember the answer. What is still blocking for reducing template polymorphism to standard explicit polymorphism?"
14903,ppedrot,2021-09-21 07:01:37,herbelin,On a related notice (and not a request for this PR):\nSet Printing Universes.\nPrint id.\n(* id = fun (A : Type@{ID.u0}) (x : A) => x *)\nCheck Type@{ID.u0}.\n(* Type@{ID.u0} : Type@{ID.u0+1} *)\n\nShouldn't there be a warning at some point telling that the name ID.u0 is generated (hence fragile)?
14903,ppedrot,2021-09-21 07:20:06,ppedrot,"What is still blocking for reducing template polymorphism to standard explicit polymorphism?\n\nKernel-side, there is the Prop-collapse rule which will never be implemented, but its use is probably uncommon, except it is used pervasively in ssreflect (at least that was still the case last time I had a look). Outside of the kernel, a hell of a lot of code that depends on template polymorphism. A trivial patch like #14471 which is transparent from the point of view of typing rules has been blocked f"
14903,ppedrot,2021-09-21 07:28:20,ppedrot,"Shouldn't there be a warning at some point telling that the name ID.u0 is generated (hence fragile)?\n\nI'd be even more radical. The generation of universe names is quite costly, it often pops up at vo require time, and it's mostly useless. Since we shouldn't even be able to use the name, I'd rather have a structure that generalizes the dirpath representation in universes, i.e. simply print a unnamed universe as the name of the constant that generated it + its number. This would solve both issues"
14903,ppedrot,2021-09-21 07:43:58,ppedrot,@gares I'll need a bit of help to port the elpi plugin. It seems to be declaring a quoting mechanism but I am unsure what to do to adapt the return type.
14903,ppedrot,2021-09-21 10:37:17,SkySkimmer,PS metacoq is still failing
14903,ppedrot,2021-09-21 10:39:02,ejgallego,"Looks interesting @ppedrot , that was one of the things I had never understood. Do you guys know why these contexts where added in the first place?\nI have a few questions, but maybe would be quicker to discuss tomorrow in the call [given that we seems to have time]?"
14903,ppedrot,2021-09-21 10:42:18,coqbot-app,"Hey, I have detected that there were CI failures at commit 901fead without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 34bc846 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14903,ppedrot,2021-09-21 11:20:06,herbelin,"Kernel-side, there is the Prop-collapse rule which will never be implemented\n\nYou mean that you are not confident that collapsing hProp in all universes is consistent? (Would you if we'd spend time at better understanding resizing and impredicativity?)\nOtherwise, that would be convenient and satisfactory to have Prop included in the quantification over universes (at least optionally)."
14903,ppedrot,2021-09-21 11:28:45,herbelin,"Shouldn't there be a warning at some point telling that the name ID.u0 is generated (hence fragile)?\n\nI'd be even more radical. The generation of universe names is quite costly, it often pops up at vo require time, and it's mostly useless. Since we shouldn't even be able to use the name, I'd rather have a structure that generalizes the dirpath representation in universes, i.e. simply print a unnamed universe as the name of the constant that generated it + its number. This would solve both issues"
14903,ppedrot,2021-09-21 11:51:21,ppedrot,"correctly register univ names\n\n@SkySkimmer I can put the printing removal first, but the other commit does not make sense alone. Best I can do is squash it with the one removing the monomorphic context from the entry. I didn't do it in the first place because I found it to be easier to review that way. Should I squash it nonetheless?"
14903,ppedrot,2021-09-21 11:54:58,SkySkimmer,"the other commit does not make sense alone\n\nIt does make sense, it's about passing the full (high level) entry to declare_univ_binders instead of looking up the univs from the global env."
14903,ppedrot,2021-09-21 11:58:01,ppedrot,"OK, let me try to do that then."
14903,ppedrot,2021-09-21 12:39:37,ppedrot,"@ejgallego it's not very complicated, but it's probably easier to talk about it viva voce tomorrow."
14903,ppedrot,2021-09-21 12:46:14,ppedrot,"hProp\n\n@herbelin please stop invoking an unrelated concept. @SkySkimmer has already argued with convincing evidence that Prop, SProp and hProp are different things and cannot be identified. Template poly is about Prop, and that's about it."
14903,ppedrot,2021-09-21 12:53:47,herbelin,"hProp\n\n@herbelin please stop invoking an unrelated concept. @SkySkimmer has already argued with convincing evidence that Prop, SProp and hProp are different things and cannot be identified. Template poly is about Prop, and that's about it.\n\n@ppedrot: I used the name hProp as a model of Prop. The question is the same using Prop. What is your model of Prop and why is it a problem for you (if ever it is a problem as you seem to say) to include it, at least optionally, in the quantification over uni"
14903,ppedrot,2021-09-21 12:54:57,ppedrot,"if ever it is a problem as you seem to say\n\nIt's not a problem, it's a POPL paper."
14903,ppedrot,2021-09-21 13:02:10,SkySkimmer,What's the prop collapse rule?
14903,ppedrot,2021-09-21 13:04:08,ppedrot,"@SkySkimmer this discussion is clearly veering out of topic. Anyways, I call ""prop collapse"" the fact that e.g. a template cartesian product type has sort Prop as soon as both its arguments have. I don't know whether this rule has an official name."
14903,ppedrot,2021-09-21 13:08:37,herbelin,"You mean ""Definitional Proof-Irrelevance without K""?\nDon't overestimate what I know of the paper! Some explicit information on what the paper implies on including Prop in the quantification over universes would help."
14903,ppedrot,2021-09-21 13:17:02,herbelin,I don't know whether this rule has an official name.\n\nStability of subsingletons by Cartesian product?
14903,ppedrot,2021-09-21 14:06:21,ppedrot,"@mattam82 after consultation of the local experts that happened to be around, it seems that the MetaCoq checker wrongly relies on the monomorphic field of the kernel entries to recompute the current set of global universes. This goes completely against this PR but I have no idea about how much work it would represent to get rid of this undesired specification. For the time being I commented out the failing test with a FIXME instead of trying to put too much effort into this. This is similar to w"
14903,ppedrot,2021-09-21 14:17:41,gares,@gares I'll need a bit of help to port the elpi plugin. It seems to be declaring a quoting mechanism but I am unsure what to do to adapt the return type.\n\nIs this still relevant?
14903,ppedrot,2021-09-21 14:20:16,ppedrot,"@gares I tried to port it bluntly by following the flow of type errors. It seems to work, though I don't know whether it's really correct. The previous state of the code didn't look very nice either so it's unlikely to be much worse. I wouldn't mind a bit of scrutiny..."
14903,ppedrot,2021-09-22 08:43:07,SkySkimmer,@coqbot merge now
14903,ppedrot,2021-09-22 08:43:10,coqbot-app,@SkySkimmer: Please take care of the following overlays:\n\n14903-ppedrot-split-mono-univ-entry.sh
14903,ppedrot,2021-09-22 08:54:10,ppedrot,"I thought we should have discussed it at the meeting today before merging, but well it does not hurt either that way..."
14573,SkySkimmer,2021-06-29 10:32:34,ejgallego,Forbig -> Forbid in the commit message.
14573,SkySkimmer,2021-06-30 15:52:47,coqbot-app,"Hey, I have detected that there were CI failures at commit 19b0e66 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit b69b918 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-mathcomp."
14573,SkySkimmer,2021-07-05 12:57:12,gares,overlay merged
14573,SkySkimmer,2021-07-06 14:17:15,ppedrot,"LGTM. I don't know how much we should document the error, it looks pretty self-explanatory to me. If nobody complains about it soon, I'll merge."
14573,SkySkimmer,2021-07-06 20:21:35,SkySkimmer,"@jfehrle it's not the variable getting renamed, it's the arguments of the variable. See the test."
14573,SkySkimmer,2021-07-06 20:26:33,jfehrle,"OK, how about ""Arguments of section variables such as @name may not be renamed.""?   ""have renamed arguments"" doesn't make much sense to me--IIUC the arguments cannot be renamed."
14573,SkySkimmer,2021-07-08 14:16:36,ppedrot,@jfehrle are you ok with the current phrasing?
14573,SkySkimmer,2021-07-09 08:32:53,ppedrot,"@SkySkimmer there is something wrong in the doc, refman is now broken on the CI."
14378,herbelin,2021-05-24 16:08:45,coqbot-app,"Hey, I have detected that there were CI failures at commit 108dc5d without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ce69cf0 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14378,herbelin,2021-05-24 17:01:33,coqbot-app,"Hey, I have detected that there were CI failures at commit 108dc5d without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ce69cf0 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14378,herbelin,2021-05-24 17:33:25,coqbot-app,"Hey, I have detected that there were CI failures at commit 108dc5d without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ce69cf0 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14378,herbelin,2021-05-25 07:53:43,ppedrot,Adding a test is probably a good idea before I merge though.
14378,herbelin,2021-05-25 17:49:19,herbelin,Adding a test is probably a good idea before I merge though.\n\nThe problem is that I don't think we have a way to test parsing errors (they are not caught by Fail).
14378,herbelin,2021-05-25 20:41:37,ppedrot,"Oh, right. You could always write a misc test but it could legitimately be considered overblown. Let's merge as-is then."
14794,herbelin,2021-08-31 20:03:55,coqbot-app,"Hey, I have detected that there were CI failures at commit 829169c without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
14402,ppedrot,2021-05-28 14:29:19,coqbot-app,"Hey, I have detected that there were CI failures at commit f4bcc35 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit d5cebc8 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools.\nHowever, you may want to wait until the pipeline for the base commit (d5cebc8) finishes."
14402,ppedrot,2021-05-30 15:13:54,ppedrot,This needs an assignee. @SkySkimmer ?
14402,ppedrot,2021-05-31 10:37:53,SkySkimmer,@coqbot: merge now
14740,Alizter,2021-08-03 15:19:05,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14740,Alizter,2021-08-03 16:31:47,coqbot-app,"Hey, I have detected that there were CI failures at commit 8a52083 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a41c99a succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-fiat_crypto_legacy, ci-fiat_parsers, ci-hott, ci-rewriter.\nIf you tag me saying @coqbot ci minimize all, I will additionally mi"
14740,Alizter,2021-08-03 16:39:13,Zimmi48,"This wasn't expected that this would break anything, was it?\n@coqbot ci minimize"
14740,Alizter,2021-08-03 16:39:20,coqbot-app,"I have initiated minimization at commit 8a52083 for the suggested targets ci-fiat_crypto_legacy, ci-fiat_parsers, ci-hott, ci-rewriter as requested."
14740,Alizter,2021-08-03 16:45:39,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/ContextFreeGrammar/Reflective.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/co"
14740,Alizter,2021-08-03 16:47:17,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/rewriter/src/Rewriter/Util/FMapPositive/Equality.v (from ci-rewriter) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+deprecated-hint-constr,+fragile-hint-constr,+variable-collision,+unexpected-impli"
14740,Alizter,2021-08-03 16:51:16,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Algebra/Universal/TermAlgebra.v (from ci-hott) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hott/theories"" ""HoTT"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/"
14740,Alizter,2021-08-03 17:13:31,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto_legacy/src/Util/FMapPositive/Equality.v (from ci-fiat_crypto_legacy) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-notation-overridden"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto_legacy/src"" ""Crypto"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_bui"
14740,Alizter,2021-08-03 18:08:07,Alizter,"@Zimmi48 I'm currently having some parsing issues, I'll need to investigate further."
14740,Alizter,2021-08-04 10:45:43,Alizter,"The issues weren't to do with parsing actually, but the name generation of induction schemes. Unfortunately, the generation is a bit more complicated than I had initially gathered, so I am currently writing tests for the name generation before this patch so I can document every name, then I will try to replicate it here."
14740,Alizter,2021-08-04 15:01:18,Alizter,"Alright, this now passes the test I wrote in #14742. Let's see if anything breaks."
14740,Alizter,2021-08-04 17:21:14,Alizter,Looks like equations has broke which isn't surprising. I will submit an overlay soon.\nThe linter isn't happy because I haven't updated the grammar yet.
14740,Alizter,2021-08-29 19:49:38,Alizter,"I got stuck writing the overlay for equations on this one. Hopefully, I can make some progress soon. cc @mattam82 who might be able to help me here."
14740,Alizter,2021-09-07 04:47:22,jfehrle,@Alizter > I got stuck writing the overlay for equations on this one.\nPerhaps you could describe the issues you're running into.  The build doesn't even run ci-equations at the moment.  (Not that I have a lot of expertise to offer on equations.  I might be able to help with overlay basics if that's what you're stuck on--though others know that much better than I do.)
14740,Alizter,2021-09-07 08:22:50,Alizter,@jfehrle I had a meeting with @mattam82 so I now have a better idea of what needs to be done. I don't currently have too much time to do it however. I will close this for the time being so that I can work on it again in the future.
14740,Alizter,2021-09-07 12:18:26,Zimmi48,"@Alizter If you do have enough time to write what needs to be done, this would be useful if someone wants to pick it up, or for yourself if you come back to this after some time."
14377,herbelin,2021-05-24 16:43:44,coqbot-app,"Hey, I have detected that there were CI failures at commit 17889ff without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ce69cf0 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14377,herbelin,2021-05-31 16:37:03,herbelin,@coq/extensible-syntax-maintainers : This is a 8.13 regression which should better be fixed earlier than later.
14377,herbelin,2021-06-01 09:00:21,ppedrot,"Given that this does not attract the masses, I am assigning."
14986,SkySkimmer,2021-10-05 14:28:30,ppedrot,"We don't need that for meta-based clenv (see Clenv.clenv_environments) because the invariant is that we only call it on closed terms at toplevel. Are you saying that the evar instance can capture a rel somewhere? I don't understand how that can happen, except if setoid_rewrite is incorrectly calling the clenv on an open term."
14986,SkySkimmer,2021-10-05 14:53:37,SkySkimmer,"setoid_rewrite calls refresh_hypinfo \n  \n    \n      coq/plugins/ltac/rewrite.ml\n    \n    \n         Line 596\n      in\n      eb745e1\n    \n    \n    \n    \n\n        \n          \n           let refresh_hypinfo env sigma (is, cb) = \n        \n    \n  \n\n on constant Hfg : forall n m, n = n -> f n m = g n m\nmake_evar_clause is called on its type (which is closed) \n  \n    \n      coq/plugins/ltac/rewrite.ml\n    \n    \n         Line 503\n      in\n      eb745e1\n    \n    \n    \n    \n\n        \n          \n           "
14986,SkySkimmer,2021-10-05 15:16:05,ppedrot,"Ah, yes, obviously the problem is that the environment has an non-empty rel context..."
14986,SkySkimmer,2021-10-05 16:37:58,SkySkimmer,"No idea what's going on in fiat_parsers, cc @JasonGross"
14986,SkySkimmer,2021-10-05 17:12:33,coqbot-app,"Hey, I have detected that there were CI failures at commit e9af7c6 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit eb745e1 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_parsers."
14986,SkySkimmer,2021-10-05 17:13:30,SkySkimmer,@coqbot ci minimize
14986,SkySkimmer,2021-10-05 17:13:36,coqbot-app,"I have initiated minimization at commit e9af7c6 for the suggested target ci-fiat_parsers as requested.\nHowever, you may want to try again once the pipeline for the head commit (e9af7c6) finishes."
14986,SkySkimmer,2021-10-05 18:17:40,coqbot-app,"Hey, I have detected that there were CI failures at commit e9af7c6 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit eb745e1 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_parsers."
14986,SkySkimmer,2021-10-05 22:30:22,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 51KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14986,SkySkimmer,2021-10-06 03:47:19,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 63KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14986,SkySkimmer,2021-10-06 09:04:26,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 72KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14986,SkySkimmer,2021-10-06 14:21:30,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 78KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14986,SkySkimmer,2021-10-06 19:38:35,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 89KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14986,SkySkimmer,2021-10-07 00:55:18,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 97KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14986,SkySkimmer,2021-10-07 06:12:26,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 101KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/bui"
14986,SkySkimmer,2021-10-07 11:29:38,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 100KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/bui"
14986,SkySkimmer,2021-10-07 16:46:40,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 120KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/bui"
14986,SkySkimmer,2021-10-07 22:03:49,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 121KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/bui"
14986,SkySkimmer,2021-10-08 01:46:21,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 102KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" """
14986,SkySkimmer,2021-10-08 12:24:36,JasonGross,It seems that minimization has once again gotten stuck because of #14529 / #14541. I'll try to implement import absolutizing to fix this.
14986,SkySkimmer,2021-10-09 01:37:39,JasonGross,"I've hopefully fixed the import problem, let's try again (and wait another couple of days, because I'm too lazy to do manual minimization to take advantage of manual resumption).\n@coqbot ci minimize"
14986,SkySkimmer,2021-10-09 01:37:44,coqbot-app,I have initiated minimization at commit e9af7c6 for the suggested target ci-fiat_parsers as requested.
14986,SkySkimmer,2021-10-09 06:54:54,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 43KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14986,SkySkimmer,2021-10-09 12:12:02,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 89KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14986,SkySkimmer,2021-10-09 17:28:59,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 72KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14986,SkySkimmer,2021-10-09 22:45:58,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 81KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14986,SkySkimmer,2021-10-10 04:03:15,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 82KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14986,SkySkimmer,2021-10-10 09:20:16,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 97KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14986,SkySkimmer,2021-10-10 14:37:17,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 97KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14986,SkySkimmer,2021-10-10 19:54:24,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 100KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/bui"
14986,SkySkimmer,2021-10-11 01:11:31,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 120KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/bui"
14986,SkySkimmer,2021-10-11 06:28:39,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 146KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/bui"
14986,SkySkimmer,2021-10-11 11:34:30,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 102KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" """
14986,SkySkimmer,2021-10-11 14:01:56,SkySkimmer,@JasonGross can you stop the minimization? I don't think it's going to be useful.
14986,SkySkimmer,2021-10-11 14:17:43,JasonGross,"Minimization finished, I'm a bit bummed that my fix didn't actually allow the minimizer to inline Fiat.Common.FMapExtensions, I'll have to look into that."
14986,SkySkimmer,2021-10-11 19:59:40,coqbot-app,"Hey, I have detected that there were CI failures at commit b541298 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 954deda succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_parsers."
14986,SkySkimmer,2021-10-12 09:57:21,SkySkimmer,Ready
14986,SkySkimmer,2021-10-12 18:22:04,ppedrot,What was the issue with fiat? Do you have a small reproducible example that could be added as a test?
14986,SkySkimmer,2021-10-12 18:22:49,SkySkimmer,Just the usual non monotony of ltac.
14986,SkySkimmer,2021-10-12 18:23:58,ppedrot,You mean that fiat was actively exploiting the bug?
14986,SkySkimmer,2021-10-12 18:25:19,SkySkimmer,More unconsciously working around it IMO
14986,SkySkimmer,2021-10-12 20:47:53,JasonGross,"The fiat issue was that, with this fix, there were no remaining goals after running a tactic, so the previous strategy of tac. handle goal that setoid_rewrite couldn't. tac. errors with ""no remaining goals""."
14986,SkySkimmer,2021-10-12 21:01:27,ppedrot,Bench just in case: https://gitlab.com/coq/coq/-/jobs/1670711344
14986,SkySkimmer,2021-10-12 21:14:53,SkySkimmer,"The fiat issue was that, with this fix, there were no remaining goals after running a tactic, so the previous strategy of tac. handle goal that setoid_rewrite couldn't. tac. errors with ""no remaining goals"".\n\nNot quite. The issue was that in a big match goal a branch that used to fail was now taken producing a garbage goal. By adding a solve in that branch the tactic then became more powerful."
14986,SkySkimmer,2021-10-13 07:30:05,ppedrot,@coqbot merge now
13972,ejgallego,2021-03-21 18:40:28,ejgallego,"@MSoegtropIMC , see the above comments; there is not a clear choice here as every choice there has some downsides, personally I'd go for option 1 as this keeps more flexibility , tho doing 2 or 3 for example should also work as other protocols already require a printing call to set the formatting parameters anyways."
13972,ejgallego,2021-03-21 18:42:34,ejgallego,"For completeness, these are the parameters used in other protocols that expose rendering:\ntype format_opt =\n  { pp_format : print_format  [@default PpSer]\n  (** Output format ({e default PpSer}) *)\n  ; pp_depth  : int           [@default 0]\n  (** Depth  ({e default 0}) *)\n  ; pp_elide  : string        [@default ""...""]\n  (** Elipsis ({e default: ""...""}) *)\n  ; pp_margin : int           [@default 72]\n  (** Margin ({e default: 72}) *)\n  }"
13972,ejgallego,2021-03-21 18:45:45,MSoegtropIMC,"@MSoegtropIMC , see the above comments; there is not a clear choice here as every choice there has some downsides, personally I'd go for option 1 as this keeps more flexibility , tho doing 2 or 3 for example should also work as other protocols already require a printing call to set the formatting parameters anyways.\n\nI agree that it makes most sense to have a GUI option for this, as for all the other printing options. One could have a sub-menu with 10,20,50,100,200,500,1000,custom and ""custom"" s"
13972,ejgallego,2021-03-21 18:58:46,ejgallego,"I agree that it makes most sense to have a GUI option for this, as for all the other printing options. One could have a sub-menu with 10,20,50,100,200,500,1000,custom and ""custom"" set in the preferences.\n\nSounds good then, I'm a bit short of time this week due to deadlines and confs, feel free to push to this branch to implement the option, otherwise I'll take care when I can."
13972,ejgallego,2021-04-27 15:30:13,ejgallego,@coq/coqide-maintainers ping
13972,ejgallego,2021-04-30 13:14:35,Blaisorblade,Does this also address VsCoq (which has the same bug)?
13972,ejgallego,2021-04-30 13:26:48,MSoegtropIMC,"@herbelin : I would say an entry in the view menu, where all the other printing options are would be more consistent."
13972,ejgallego,2021-06-10 12:47:18,Zimmi48,Should this be considered at a discussion stage (in which case this PR should be turned into draft mode) or at a ready to merge stage (in which case @herbelin should probably self-assign)?
13972,ejgallego,2021-06-10 12:51:54,MSoegtropIMC,@Zimmi48 : I would say the Coq side of this (which is in this PR) is fine. What is missing is using this in CoqIDE. It would make sense to merge this as is - maybe VsCoq is quicker in picking it up. I have the CoqIDE side still on my ToDo list.
13972,ejgallego,2021-07-29 09:10:49,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
13972,ejgallego,2021-08-31 12:21:12,ppedrot,cc @maximedenes @fakusb could you prepare an overlay for vscoq so that when this get merged we don't get a flurry of people complaining that coq master is broken? Thanks.
13972,ejgallego,2021-08-31 17:00:00,ejgallego,Let me rebase just in case.
13972,ejgallego,2021-08-31 21:36:15,coqbot-app,"Hey, I have detected that there were CI failures at commit 2b18a1e without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-category_theory."
13972,ejgallego,2021-09-01 10:22:21,ppedrot,"CI failure unrelated, let's merge."
14536,jfehrle,2021-06-21 21:32:25,coqbot-app,"Hey, I have detected that there were CI failures at commit 654617d without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ff73469 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14536,jfehrle,2021-06-22 06:21:19,ppedrot,"It depends quite a bit on implementation details of the IDLE callback, so ideally this should be tested on several machines / platforms."
14536,jfehrle,2021-06-22 08:12:13,silene,"In particular, we have to make sure that no Paint event happens before the Idle event can trigger the new Layout+Paint events. Otherwise we will just be regressing to the old bug, that is, a first layout is displayed and then a second one, which causes an ugly visual glitch."
14536,jfehrle,2021-06-22 18:50:05,jfehrle,"@ppedrot ideally this should be tested on several machines / platforms.\n\nI did the work on Ubuntu (on WSL).  I would be surprised if this doesn't work correctly on any other Linux variant.  If I'm able to build a native Windows version, I can try that, too.  Beyond those, I would need others to try it.  What other platforms would be most likely to behave differently?\n\nIt depends quite a bit on implementation details of the IDLE callback\n\nThe event loop uses a priority system, so I expect the beh"
14536,jfehrle,2021-06-22 19:00:36,jfehrle,"@silene Otherwise we will just be regressing to the old bug\n\nDo you mean #10578 or a different bug?  The original description in #10578 says:\n\nWhen starting Coqide, its layout is completely messed up until the first interaction of the user with the window (e.g., clicking the ""forward step"" button). Only the ""messages"" lower part is visible, neither script nor goals are visible. On 50 consecutive starts of Coqide, the initial layout was correct only three times.\n\nIn a couple dozen starts of CoqID"
14536,jfehrle,2021-06-23 07:12:59,silene,"Do you mean #10578 or a different bug?\n\nNo, I mean the fact that the window is painted twice in a quick succession with a layout change inbetween. You say that the ""flicker is quite minor"". But first, it is a subjective matter. What might seem minor to you might not be for other users. And second, it is obviously dependent on the operating system, window manager, refresh rate, etc. That is why it needs to be tested on various machines by various users.\nThe only difference between the original co"
14536,jfehrle,2021-06-23 07:54:54,jfehrle,Perhaps you would try the change and let us know whether it works for you.
14536,jfehrle,2021-06-23 21:34:30,jfehrle,The change works correctly on Windows.
14536,jfehrle,2021-06-24 18:49:13,jfehrle,"Somewhat off topic: I see that this callback in Coqide.build_ui is called a couple times a second even while the GUI is idle.  That seems pretty peculiar.  The size is always the same.\n  let _ = w#misc#connect#size_allocate\n            ~callback:(fun rect -> window_size := (rect.Gtk.width, rect.Gtk.height)) in"
14536,jfehrle,2021-06-25 07:53:10,herbelin,"I used the PR for a while yesterday and it apparently works well (on MacOS X).\n\nSomewhat off topic: I see that this callback in Coqide.build_ui is called a couple times a second even while the GUI is idle. That seems pretty peculiar. The size is always the same.\n  let _ = w#misc#connect#size_allocate\n            ~callback:(fun rect -> window_size := (rect.Gtk.width, rect.Gtk.height)) in\n\n\nAre you suspecting a gtk or lablgtk bug in size_allocate?\n\nPS: On MacOS, starting Coqide produces (3 copies "
14536,jfehrle,2021-06-25 09:18:46,herbelin,"About the flicker, I did not notice it at first, but if one wants to pay attention, it is visible."
14536,jfehrle,2021-06-25 10:51:13,ppedrot,@herbelin so you're actually saying that this PR is indeed introducing a regression?
14536,jfehrle,2021-06-25 11:58:01,herbelin,"introducing a regression?\n\nI would not say that. This ""flickering"" (*) can easily be interpreted as a step of the initialization.\n(*) Concretely, the ""flickering"" is that ""Welcome to CoqIDE, ..."" appears for a 10th of a second (or even shorter) in the middle of the whole coqide windows before reappearing in the message buffer.\nThe code in this PR seems less tricky to me than the previous one, so I would still lean to prefer this code."
14536,jfehrle,2021-06-25 16:26:17,jfehrle,"Are you suspecting a gtk or lablgtk bug in size_allocate?\n\nThe number of messages smells buggy, but I don't know that it's relevant to the flicker.  I often note unexpected behavior that's not immediately relevant--sometimes they become important clues later on.\nFWIW, I just tried this variation based on the doc.  With +21 there is a flicker and with +20 the allocation is 1 (i.e. not useful for setting the divider location).\n  let prio = Glib.(int_of_priority `HIGH_IDLE) + 21 in (* after sizing,"
14536,jfehrle,2021-06-25 16:33:07,herbelin,"Also, I've wondered how difficult it is to get changes into lablgtk3 or gtk3 itself (if I ever am tempted to try that). Do you have any experience doing that?\n\nI don't think I submitted to gtk3 yet (or I forgot). Lablgtk3 is maintained by relatively close colleagues, so it should be easy to propose changes."
14536,jfehrle,2021-06-27 12:58:35,ppedrot,"FTR, this PR works as intended on Debian amd64 + KDE + qt5-gtk. I wouldn't mind more users to test it, still."
14536,jfehrle,2021-10-13 15:10:28,jfehrle,"In a Coq Call discussion, we thought we couldn't be certain that this works for all possible cases.  Hard to prove a negative with testing."
14272,JasonGross,2021-05-06 21:46:16,jfehrle,Does this really need a changelog entry?\n\nNo.  In general we don't do changelog entries for documentation-only changes.  And also not worth it for tiny changes with low impact.\n\nI'm not sure how to get literal backticks in the doc\n\nDid you try \`?
14272,JasonGross,2021-05-28 08:08:22,ppedrot,"This is a trivial doc fix, so I am assigning."
14272,JasonGross,2021-05-28 09:46:21,coqbot-app,"Hey, I have detected that there were CI failures at commit 3454ede without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 2589a57 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14272,JasonGross,2021-05-28 11:49:56,ppedrot,"CI failure unrelated, let's merge."
14272,JasonGross,2021-05-28 11:54:44,coqbot-app,"Hey, I have detected that there were CI failures at commit 3454ede without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 2589a57 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools.\nHowever, you may want to wait until the pipeline for the base commit (2589a57) finishes."
14598,herbelin,2021-07-05 01:58:42,coqbot-app,"Hey, I have detected that there were CI failures at commit d46ec0b without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit d91d22d succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-argosy, ci-compcert."
14598,herbelin,2021-07-05 01:59:45,coqbot-app,"Hey, I have detected that there were CI failures at commit d46ec0b without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit d91d22d succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-argosy, ci-compcert."
14598,herbelin,2021-07-05 07:47:49,JasonGross,@coqbot CI minimize
14598,herbelin,2021-07-05 07:47:59,coqbot-app,"I have initiated minimization at commit d46ec0b for the suggested targets ci-argosy, ci-compcert as requested."
14598,herbelin,2021-07-05 07:57:27,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/argosy/src/Spec/Proc.v (from ci-argosy) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/argosy/src"" ""RecoveryRefinement"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/argosy/vendor/classes/src"" ""Classes"" ""-R"" ""/github/workspace/builds/"
14598,herbelin,2021-07-05 08:00:56,ppedrot,"See also #6651. IIUC, this PR was reverted due to issues with backwards compatibility."
14598,herbelin,2021-07-05 08:07:56,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/compcert/common/Unityping.v (from ci-compcert) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-undeclared-scope"" ""-w"" ""-omega-is-deprecated"" ""-dump-glob"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/doc/Unityping.glob"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/lib"" ""compcert.lib"" ""-R"" ""/githu"
14598,herbelin,2021-07-05 08:45:09,herbelin,"See also #6651. IIUC, this PR was reverted due to issues with backwards compatibility.\n\nYes, I know well #6651 and I started from it. The differences are:\n\nThe PR applies to the syntax of both primitive and non-primitive projections indifferently in constr_expr and glob_term; its purpose is to get rid of the isproj encoding in CApp/CAppExpl, independently of the question of whether p.(x) was used for primitive or non-primitive records\nBecause it applies to both primitive and non-primitive projec"
14598,herbelin,2021-07-05 10:25:24,JasonGross,@coqbot ci minimize ci-compcert
14598,herbelin,2021-07-05 10:25:27,coqbot-app,I am now running minimization at commit d46ec0b on requested target ci-compcert. I'll come back to you with the results once it's done.
14598,herbelin,2021-07-05 10:41:26,coqbot-app,Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/compcert/common/Unityping.v (from ci-compcert) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* *********************************************************************)\n(*                                                                     *)\n(*              The Compcert verified compiler                         *)\n(*                                                                     
14598,herbelin,2021-07-05 19:48:38,herbelin,"@JasonGross: for the record, I could compile the minimized Compcert file with a few changes:\n\ninlining of the Compcert modules Coqlib (and Errors and Maps) in Module Import Coqlib. ... End Coqlib. (etc.), so that it is stand-alone (but a tar with several files and a makefile would have been as useful probably).\nan additional well-chosen Import List so that length is taken in List rather than in String"
14598,herbelin,2021-07-05 19:58:44,ppedrot,"Was someone thinking that adding an explicit Proj node in constr_expr and glob_term was a bad idea?\n\nAt least I believe it's a necessary change, but it must be performed as incrementally as possible. It's too easy to silently wreak havoc for users of primitive projections, so we must clearly delineate the potential effects on semantics that were not envisioned at the time of writing the patch."
14598,herbelin,2021-07-05 20:53:26,herbelin,"but it must be performed as incrementally as possible\n\nI moved the ""feature"" part in #14606. So, up to mistakes, this PR should now be restricted to only changing the isproj-based encoding of CApp/CAppExpl to explicit CProj/GProj/NProj constructors.\nIn particular, in this PR, NProj behaves like NApp and GProj like GApp (for instance, reversibility of parsing as in #6764 works).\nNote that the notation x.(f) when f is not registered as a (prim or not prim) projection, as in Check O.(S). fails thou"
14598,herbelin,2021-07-05 22:26:25,coqbot-app,"Hey, I have detected that there were CI failures at commit b5c563c without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 8560c27 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-argosy."
14598,herbelin,2021-07-05 22:43:30,JasonGross,"@JasonGross: for the record, I could compile the minimized Compcert file with a few changes:\n\n@herbelin indeed, but the issue with the minimizer is that compcert dumps the .glob files in non-standard locations, and rebuilding the glob files clobbers the .vo files when it shouldn't.  I'll fix the minimizer to handle this.  Do you still have access to commit d46ec0b (the state of Coq when compcert failed to minimize)?  If so, could you force-push it to #14579 / JasonGross:test-coqbot-minimize so I"
14598,herbelin,2021-07-05 22:52:17,coqbot-app,"Hey, I have detected that there were CI failures at commit b5c563c without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 8560c27 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-argosy."
14598,herbelin,2021-07-05 23:04:34,coqbot-app,"Hey, I have detected that there were CI failures at commit b5c563c without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 8560c27 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-argosy."
14598,herbelin,2021-07-05 23:12:53,coqbot-app,"Hey, I have detected that there were CI failures at commit b5c563c without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 8560c27 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-argosy."
14598,herbelin,2021-07-05 23:58:20,coqbot-app,"Hey, I have detected that there were CI failures at commit b5c563c without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 8560c27 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-argosy."
14598,herbelin,2021-07-06 00:58:50,coqbot-app,"Hey, I have detected that there were CI failures at commit b5c563c without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 8560c27 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-argosy."
14598,herbelin,2021-07-06 18:59:11,JasonGross,"Minimization of ci-compcert now works:\nMinimized File /github/workspace/builds/coq/coq-failing/_build_ci/compcert/common/Unityping.v (from ci-compcert) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-undeclared-scope"" ""-w"" ""-omega-is-deprecated"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/lib"" ""compcert.lib"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/c"
14598,herbelin,2021-07-09 08:38:45,Matafou,@herbelin can you tell where the exception in funin doccurs? I can't find it.
14598,herbelin,2021-07-09 08:48:20,herbelin,"It is in Glob_term_to_relation.build_entry_lc, corresponding to a situation term.(f args) args'. What do you think should be done?"
14598,herbelin,2021-07-09 08:53:27,Matafou,"Ho found it. I am not familiar with primitive projection but why do you think ""(Gapp (Gproj ...) ....)"" should not happen?"
14598,herbelin,2021-07-09 09:00:31,Matafou,I would say it needs a simple recursive treatment like at line 526.\nIt would probably need some testing.
14598,herbelin,2021-07-09 09:01:06,Matafou,l. 526 sorry.
14598,herbelin,2021-07-09 09:30:38,herbelin,I think I'm wrong. Something should be done. Would it be ok to do the same as in the Case case?
14598,herbelin,2021-07-09 09:42:00,herbelin,"Seeing your previous comments: what you propose is what I did on line 544 (for GProj not under a GApp). So doing the same under a GApp as in the Case case should do the same as what you said, right?\nWhere this code is used is a bit abstract to me. What would be a good example to test it?"
14598,herbelin,2021-07-09 09:44:22,herbelin,Or should I avoid calling combine_app which seems to do complex things?
14598,herbelin,2021-07-10 09:04:33,coqbot-app,"Hey, I have detected that there were CI failures at commit b8bac09 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 8fd45c7 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-compcert."
14598,herbelin,2021-07-10 13:24:14,Matafou,"It is in Glob_term_to_relation.build_entry_lc, corresponding to a situation term.(f args) args'.\nWhat do you think should be done?\nSeeing your previous comments: what you propose is what I did on line 544 (for GProj\nnot under a GApp). So doing the same under a GApp as in the Case case should do the\nsame as what you said, right?\nOr should I avoid calling combine_app which seems to do complex things?\n\nProbably the call to combine_app is useless but not harmful: there will be one case to combine so"
14598,herbelin,2021-07-10 13:30:33,Matafou,"Where this code is used is a bit abstract to me. What would be a good example to test it?\n\n\nFTR: This function is the main function for building an inductive type equivalent to the function written by the user (which will be defined later in the Function process). More precisely builds the list of constructors types.\nAfter Function f ... this inductive type (and the proof that it is equivalent to the f) remains in the environment , it is named R_f. It is used in particular by the functional inve"
14598,herbelin,2021-07-20 14:12:38,herbelin,Waiting for some feedback before preparing overlays.
14598,herbelin,2021-07-21 09:41:28,gares,"For the files I'm supposed to review, it looks ok"
14598,herbelin,2021-07-24 14:10:59,gares,"The overlay for coq-elpi is now OK IMO. (but you need to rebase this PR, since another PR with an overlay was merged meanwhile)"
14598,herbelin,2021-07-29 15:58:57,ppedrot,"@herbelin can we try to get a clean CI? I don't remember if this was ever green, but if so it'd allow to merge quickly."
14598,herbelin,2021-07-30 20:49:41,ppedrot,"CI green. I'll leave a few more days for potential input before merging, but don't wait for too long if you want to comment here."
12493,ppedrot,2020-06-10 17:32:02,Zimmi48,"There might be a fresh name issue, see the build error from HoTT:\n Error: The label Private_hint_local is already declared."
12493,ppedrot,2020-06-10 17:32:40,Zimmi48,The flag should probably be unset in the appropriate Compat file. (I'm surprised @JasonGross didn't say that already.)
12493,ppedrot,2020-06-10 17:36:15,JasonGross,I guess I'm not on top of my compat game today :-). Thanks for reminding!  Perhaps we should add a checkbox to the issue template for the compat files?
12493,ppedrot,2020-06-10 18:36:51,ppedrot,"The HoTT issue is due to the inclusion of a module after another one, and both define anonymous hints. Since the name is unique only locally to the module, boom! What should be done? Writing an overlay for HoTT, or try to put more data in the autogenerated hint name?"
12493,ppedrot,2020-06-10 18:38:09,Zimmi48,Perhaps we should add a checkbox to the issue template for the compat files?\n\nI dunno. This seems too infrequent to justify increasing the complexity of the template.
12493,ppedrot,2020-06-10 19:13:54,ejgallego,This whole thing seems quite hacky to me.\nIn particular there still are concerns about the scalability of the approach; how does this compare to the alternative for the Hints code of properly generalizing the hints; how's indexing supposed to work now if new head constants are added?\nToo many questions IMHO for 8.12 maybe.
12493,ppedrot,2020-06-10 21:47:38,Zimmi48,"If this is going to be leftover to 8.13, then IMHO we still need to remove the deprecation in 8.12."
12493,ppedrot,2020-06-10 22:14:49,ejgallego,"If this is going to be leftover to 8.13, then IMHO we still need to remove the deprecation in 8.12.\n\nNote that I'm just wary, but not essentially opposed to 8.12 for this. I understand the tradeoff is not easy here. My main worry points are:\n\nthis seems to break quite a few things in the CI, at this stage,\nit seems that the approach may need more testing / discussion,\nIMHO it adds a tad of technical debt [one quirk in exchange of another]\n\nOn the other hand, removing terms as hints should help w"
12493,ppedrot,2020-06-11 08:40:42,Zimmi48,"There are three errors in CI (CoLoR, bedrock2 and fiat-parsers). The error in CoLoR is the most surprising:\nThe field Private_hint_local_70c3eff3b9cc41a1_ is missing in\nCoLoR.Util.Relation.RelExtras.Eqset_def."
12493,ppedrot,2020-06-11 09:00:34,ppedrot,"The error in CoLoR is the most surprising\n\nI speculate that this corresponds to a hint added to a module type, but not to the corresponding module implementation.\nJudging from the level of breakage, this doesn't appear ready for 8.12. Since I really don't want to have to delay the hint database cleanup, can I advocate for a middle ground where the deprecation warning is turned into a pure warning recommending to replace non-global hints into definitions? At least this will provide an incentive t"
12493,ppedrot,2020-06-11 09:04:54,Zimmi48,"Since I really don't want to have to delay the hint database cleanup, can I advocate for a middle ground where the deprecation warning is turned into a pure warning recommending to replace non-global hints into definitions?\n\nSounds reasonable to me. Can you prepare the PR?"
12493,ppedrot,2020-06-11 09:06:38,Zimmi48,"Regarding this PR, since it now targets 8.13, note that you will have to go back to a standard changelog entry file and move the compat option to the Compat812.v file."
12493,ppedrot,2020-06-11 14:34:22,ejgallego,"can I advocate for a middle ground where the deprecation warning is turned into a pure warning recommending to replace non-global hints into definitions?\n\nYup, that seems like best option in view of the difficulties."
12493,ppedrot,2020-06-23 15:22:36,Zimmi48,"@ppedrot How far are we to merging this? If it is merged before the 8.12.0, then we can confidently adjust the deprecation warning in 8.12 to say ""in the next version, the behavior of terms declared as hints will change to generate a constant on the fly""."
12493,ppedrot,2020-06-23 15:28:47,ppedrot,"This is way too difficult, I believe. Color uses a pattern of declaring hints inside functors, which requires an involved patch. As for the other failures, I haven't had time to investigate yet, partly because they involve very complex automation.\nThe more I am fixing the hint implementation the more nonsensical it appears to me. I am definitely leaning towards the removal of the general term hint feature."
12493,ppedrot,2020-06-23 15:40:00,Zimmi48,Is there a middle-ground to be found where simple use cases would still work fine with Hint Resolve and more complex ones would need to be converted into a Definition (possibly a #[ hint(db) ] Definition to save an extra line)?
12493,ppedrot,2020-06-23 15:44:26,maximedenes,"simple use cases would still work fine with Hint Resolve and more complex ones would need to be converted into a Definition (possibly a #[ hint(db) ] Definition to save an extra line)?\n\nYuck, this sounds like a lot of complexity."
12493,ppedrot,2020-06-23 16:14:18,CohenCyril,What exactly is the problem with hints being arbitrary terms?
12493,ppedrot,2020-06-23 16:18:14,ppedrot,"What exactly is the problem with hints being arbitrary terms?\n\nThere are several issues. First, equality for terms is not unique and badly specified. Second, it forces to handle universe constraints and evars generated by non-global clenvs in a hackish (read unsound) way. Third, it forces to use an inefficient representation for hint databases."
12493,ppedrot,2020-06-23 16:26:40,gares,"I think the proxy constant is the right approach. I don't see the problem with functors, can you explain it?"
12493,ppedrot,2020-06-23 16:33:10,ppedrot,"@gares so, first, I have to generate somewhat unique names for hints, because there are people including two different modules declaring each a constr hint. So in order for this to work the hint name must depend on the current module name.\nBut, wait. In coq-color, one of the patterns is to declare a constr hint inside a functor type, to emulate partial application of hints. So, every time a module is defined with this type, it needs to declare the same proxy constants. Thus the constants must be"
12493,ppedrot,2020-06-23 16:59:53,ejgallego,"I am not very familiar with the current hints implementation, but indeed from a ""logic programming"" perspective this limitation seems pretty weird to me too. Is there a fundamental problem here in terms of equality / indexing, or it is just that the current design cannot accommodate it?"
12493,ppedrot,2020-06-23 17:03:11,ppedrot,"Is there a fundamental problem here in terms of equality / indexing\n\nThis is my belief. I still don't know how to properly define a map indexed by evar-containing terms, for instance."
12493,ppedrot,2020-06-23 17:09:34,ejgallego,"This is my belief. I still don't know how to properly define a map indexed by evar-containing terms, for instance.\n\nUsually you do so on the basis of the head constant, this can be used to build indexing tables indeed for ""hint"" application. IIANM there are many papers talking about this [I'd be happy to do a call and discuss]\nThe solution here is just a bit horrible IMHO, so indeed I dunno if we want to go this way, I can see already a few problems with this constant generation [pollution of bo"
12493,ppedrot,2020-06-23 17:15:15,ppedrot,"The solution here is just a bit horrible IMHO\n\nThe amount of non-global hints is rather low. I acknowledge that it's tiresome to have to work around it by hand, but it's not common. Meanwhile, the trade-offs are fairly clear to me. Declaring a constant is a fairly straightforward fix to satisfy everybody. The fact that color does strange things is not restricted to hints. I remember having had to port it several times due to reliance on a lot of hint-unrelated features that were frankly dubious."
12493,ppedrot,2020-06-23 17:26:52,ejgallego,"Umm, I'm still missing some stuff here, maybe I can try to ask my questions in the call if there is time."
12493,ppedrot,2020-06-23 17:33:37,maximedenes,"I still don't know how to properly define a map indexed by evar-containing terms, for instance.\n\nThis would be a nice topic for the Coq call IMHO."
12493,ppedrot,2020-06-23 18:22:43,gares,Evars do not exist outside a proof. Hints do. How are hints terms stored today? Are these terms globterms?
12493,ppedrot,2020-06-23 18:37:04,ppedrot,"@gares nope, they are essentially terms (clausenvs) + additional data to handle universe contexts."
12493,ppedrot,2020-06-23 18:41:46,ppedrot,"FTR, I forgot mentioning that, but there is already a similar mechanism to register hints. They are given a unique identifier which is constructed from the module name, but this suffers from a lot of drawbacks, including multiple registering of constants when using functors and the like. The only stable data in this case really is the kernel name of the corresponding global."
12493,ppedrot,2020-11-16 11:07:17,gares,Is this really a draft?
12493,ppedrot,2020-11-16 11:32:51,ppedrot,"Yes, because I still don't have ported coq-color to this new mechanism, and I am not sure how to do it actually."
12493,ppedrot,2021-06-02 19:24:37,silene,"As this is still a draft and has been for several releases, I am removing the milestone."
12493,ppedrot,2021-06-19 18:39:59,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color.\nHowever, you may want to wait until the pipeline for the base commit (533596b) finishes."
12493,ppedrot,2021-06-19 19:00:11,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color.\nHowever, you may want to wait until the pipeline for the base commit (533596b) finishes."
12493,ppedrot,2021-06-19 19:19:28,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color.\nHowever, you may want to wait until the pipeline for the base commit (533596b) finishes."
12493,ppedrot,2021-06-19 19:39:06,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-19 19:57:06,JasonGross,@Zimmi48 do you know why the bot keeps posting here?  Does the pipeline keep updating every time a subpipeline completes and somehow the bot thinks the head pipeline is finished when it's not?
12493,ppedrot,2021-06-19 19:57:25,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-19 19:57:50,JasonGross,@coqbot ci minimize
12493,ppedrot,2021-06-19 19:57:55,coqbot-app,"I have initiated minimization at commit 01ae7bf for the suggested targets ci-bedrock2, ci-color as requested.\nHowever, you may want to try again once the pipeline for the head commit (01ae7bf) finishes."
12493,ppedrot,2021-06-19 20:03:50,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/color/Util/Relation/RelExtras.v (from ci-color) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(**\nCoLoR, a Coq library on rewriting and termination.\nSee the COPYRIGHTS and LICENSE files.\n\n- Adam Koprowski, 2004-09-06\n- William Delobel, 2005-10-07\n\nThis file provides some basic results concerning relations that were\nmissing in the standard library.\n*)\n\nDeclare ML Module ""ltac_plugin""."
12493,ppedrot,2021-06-19 20:16:27,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-19 20:37:16,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-19 20:56:06,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-19 21:15:11,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-19 21:35:05,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-19 21:54:56,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-19 22:16:36,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-19 22:36:03,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
14395,SkySkimmer,2021-05-26 21:47:09,coqbot-app,"Hey, I have detected that there were CI failures at commit 4c10de2 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ac9a310 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-unimath.\nHowever, you may want to wait until the pipeline for the base commit (ac9a310) finishes."
14395,SkySkimmer,2021-05-27 07:38:02,Zimmi48,"Given the choice to restrict the use of these flags inside sections (and the compatibility impact on Unimath), this PR should target 8.14 rather than 8.13.3. We should also update the documentation to mention this restriction."
14395,SkySkimmer,2021-05-28 09:56:54,SkySkimmer,"Let's also allow changing Kernel Term Sharing, maybe unimath will work."
14395,SkySkimmer,2021-05-28 14:24:54,ppedrot,Seems to have worked.
13396,herbelin,2020-11-30 14:13:45,ppedrot,"This seems to be faulty, the printer complains about being registered several times? I might have missed that one somewhere. The joy of global variables..."
13396,herbelin,2020-11-30 14:26:26,herbelin,It is registered also in pptactic.ml (not only raw but also glob and top). It complains there.\nWhat to do? To add a register_extra_print0 for registering of only glob and top from pptactic.ml? Or to register the glob and top already in pvernac.ml?\nMaybe the second solution?
13396,herbelin,2020-11-30 14:34:10,ppedrot,Definitely the second one.
13396,herbelin,2021-05-24 18:57:21,coqbot-app,"Hey, I have detected that there were CI failures at commit 8f98d30 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 7ce1c48 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
13396,herbelin,2021-05-31 22:03:35,herbelin,Another example showing that Ltac2 would also need to track the environment in which Ltac2 variables live:\nFrom Ltac2 Require Import Ltac2.  \nLtac2 g x := clear y; intro y; exact ($x).\nTheorem foo (y:bool) : nat -> nat.\ng constr:(y).\n(* is it expected to work? *)
13396,herbelin,2021-06-01 08:52:11,ppedrot,"@herbelin you're confusing the dynamic proof environment with the static Ltac2 environment. If you need to know the name of a bound Ltac2 variable at runtime in the implementation, it means you basically lost and implemented dynamic binding."
13396,herbelin,2021-06-01 10:26:16,herbelin,"@herbelin you're confusing the dynamic proof environment with the static Ltac2 environment. If you need to know the name of a bound Ltac2 variable at runtime in the implementation, it means you basically lost and implemented dynamic binding.\n\nWhat sentence are you referring to? To the expression Ltac2 f x := intros y; apply (fun z => $x + $y + $z)? This doesn't need to know the name of a bound Ltac2 variable at runtime: it expands in only static bindings, i.e. to Ltac2 f x := let y := @y in intr"
13396,herbelin,2021-06-01 15:48:35,herbelin,"As an attempt to summarize the discussion on pretype_id, I have real time for it, but I'm ready to supporting a move of GlobEnv.ml to plugins/ltac, with the registration of an effect on push_rel."
13396,herbelin,2021-06-10 13:04:33,ppedrot,@herbelin we're both losing a lot of time with this trivial PR. Please move the genarg definition in extraargs and I will happily merge it in a blink.
13396,herbelin,2021-06-10 16:33:32,herbelin,"@herbelin we're both losing a lot of time with this trivial PR. Please move the genarg definition in extraargs and I will happily merge it in a blink.\n\nI was about to propose the converse! Let's join our forces rather than annihilating them. Once this PR, which I still think is right, is merged, I will happily merge a PR from you tomorrow which provides binders in vernac without the substitution and interpretation part, but in the meantime, the mechanism to make vernac extensions (and virtually "
14924,ppedrot,2021-09-24 10:00:58,SkySkimmer,@coqbot ci minimize bedrock2
14924,ppedrot,2021-09-24 10:00:58,coqbot-app,I was unable to minimize any of the CI targets that you requested.\nci-bedrock2 was not minimized because no error message was found
14924,ppedrot,2021-09-24 11:42:13,ppedrot,"@SkySkimmer I can't reproduce the bedrock2 failure locally. I think it's just an OOM that was barely passing before, but now consumes slightly more memory and thus dies."
14924,ppedrot,2021-09-24 11:43:23,SkySkimmer,Are you benching this btw?
14924,ppedrot,2021-09-24 11:59:26,ppedrot,Bench: https://gitlab.com/coq/coq/-/jobs/1620249506
14924,ppedrot,2021-09-24 12:01:20,ppedrot,"Note that looking a bit at bedrock2 showed me that Print Assumptions is completely crazy, since it does not cache the contents of the body of a global. This is not specific to this PR, it can already be very slow on master since that means we keep fetching and substituting huge proof terms for nothing. Maybe this patch is making it marginally worse but there is a clear and small unrelated fix that I'll submit separately.\nEDIT: see #14931."
14924,ppedrot,2021-09-24 12:09:06,SkySkimmer,"We don't bench bedrock2 anyway (the bench claims to do it, but it's actually a tiny subset as you can tell by it taking less than 2min)"
14924,ppedrot,2021-09-24 12:47:58,ppedrot,"Wait a sec, I think I know why bedrock2 explodes midflight. I've just realized that I forgot to perform hashconsing on opaque proofs in the upper layers. That probably explains why the bench is faster. Out of curiosity I'll still let it run to completion before fixing the PR."
14924,ppedrot,2021-09-24 13:45:00,gares,General question: in the old API the safe_env opaque type had a method to ensure that all delayed proofs were there and checked.\nThis API was part of the TCB.\nI can't find the corresponding entry in the TCB. Can you point it out?
14924,ppedrot,2021-09-24 14:17:11,ppedrot,"I can't find the corresponding entry in the TCB. Can you point it out?\n\nIt didn't move, it's still Safe_env.is_joined_environment."
14924,ppedrot,2021-09-24 15:51:55,gares,"It didn't move, it's still Safe_env.is_joined_environment.\n\nGreat, but that one is not called (in master) whenever we save a .vo library to disk (while the one you moved to upper layers yes). IMO this one should be called, that is the tool that saves a .vo should ask the kernel if the env is joined."
14924,ppedrot,2021-09-24 16:02:14,ppedrot,I've added a check that the env is joined in the commit about assertions.
14924,ppedrot,2021-09-24 16:54:47,ejgallego,"Bench: https://gitlab.com/coq/coq/-/jobs/1620249506\n\nGiven this, having a flag -i-dont-care-about-memory-but-i-do-care-about speed could be very interesting for some users."
14924,ppedrot,2021-09-24 19:32:57,ppedrot,Bench with hashconsing: https://gitlab.com/coq/coq/-/jobs/1621402930
14924,ppedrot,2021-09-24 19:59:56,gares,@ppedrot I don't get why odd-order gets 16% more memory use without hashconsing. I thought we did hashcons only opaque terms (and for sure there is no extraction or Print which loads them).
14924,ppedrot,2021-09-24 20:07:52,ejgallego,@ppedrot I don't get why odd-order gets 16% more memory use without hashconsing. I thought we did hashcons only opaque terms (and for sure there is no extraction or Print which loads them).\n\nCould indeed this be due to actually 16% sharing inside opaque proofs?
14924,ppedrot,2021-09-24 20:15:01,gares,"That could be (just holding them until the file ends). If so, the option ""-dont-store-opaque-proofs"" would be even better."
14924,ppedrot,2021-09-24 22:05:46,ppedrot,"I don't get why odd-order gets 16% more memory use without hashconsing.\n\n@gares I am not sure what seems surprising to you there. Were you expecting less or more memory use without hashconsing? Obviously since we don't hashcons proof terms take more space in memory, leading to the observed increase..."
14924,ppedrot,2021-09-25 15:01:38,gares,"In general I'm puzzled the overhead is so little, so why bother?!\nI'm puzzled to see it in the OOthm, maybe there proofs are super large but then.. only 15% is saved by maximal sharing? Again why bother?!\nMoreover unimath gets a 50% extra space, but IIRC it has no opaque proofs. Do we share transparent terms?\nIt is OT for this PR, but these numbers don't make much sense to me. It seems a feature one may opt in, but not a sane default."
14924,ppedrot,2021-09-25 15:19:01,SkySkimmer,"In general I'm puzzled the overhead is so little, so why bother?!\n\nThere is also vo size\n\nMoreover unimath gets a 50% extra space, but IIRC it has no opaque proofs. Do we share transparent terms?\n\nhttps://github.com/UniMath/UniMath/search?q=qed"
14924,ppedrot,2021-09-26 09:40:12,ppedrot,We do share transparent proofs as well.
14924,ppedrot,2021-09-26 09:46:37,ppedrot,"Also note that the memory measure of the process is not reliable, it's common to see it vary up to 30% without any good reason. We should use instead the informations coming directly from the GC as per the Print Debug GC command."
14924,ppedrot,2021-09-27 21:24:45,ppedrot,@gares comments addressed.
14924,ppedrot,2021-09-28 08:07:48,gares,I will look into the async failure.\nI need a review from @coq/kernel-maintainers.\nI'm running a bench https://gitlab.com/coq/coq/-/jobs/1627376688
14924,ppedrot,2021-09-28 08:14:18,ppedrot,"The async failure is unrelated, it's been introduced by #14758. Also, we already had a bench there: #14924 (comment), there was no code change in between."
14924,ppedrot,2021-09-28 08:21:13,gares,"The async failure is unrelated, it's been introduced by #14758.\n\nYou mean that the PR adds a test with the case where processing proof in async mode (adding late univ constraints from opaque body) does matter for TC search? If so, @SkySkimmer you should add -async-proofs off to bug_14734.v (or even better implement assert_fails_univ_async)."
14924,ppedrot,2021-09-28 08:33:22,ppedrot,"You mean that the PR adds a test with the case where processing proof in async mode (adding late univ constraints from opaque body) does matter for TC search?\n\nErm, actually yes.\n\nor even better implement assert_fails_univ_async\n\nCouldn't we also have a few vernacular commands that act as write barriers and attributes to control finely the deferring of Qed-opaque proofs? For instance I started implementing a mechanism for private monomorphic universes and for efficient document processing it'd b"
14924,ppedrot,2021-09-30 07:39:31,ppedrot,@gares I've hardened the opaque filling API as you requested.
14924,ppedrot,2021-10-04 13:47:38,ppedrot,"@gares Thanks a lot, it seems this is fine now. I think that the STM API could be simplified quite a bit now that the futures are only in the upper layers, allowing for finer-grained invariants (and lesser reliance on hacks like fix_exn, no offense). But for now I think this PR can be considered ready."
14924,ppedrot,2021-10-04 13:59:57,gares,"Great! But I don't see how to make the fix_exn hack less hackish, so suggestions are welcome. If you hoist a thunk out of a context with try - with - in it, then you have to close it w.r.t. that. I can't think of a safe (by typing) and not heavy (monad heavy) solution. Maybe fix_exn:exn -> exn was a bit too blunt, but quite expressive ;-)"
14924,ppedrot,2021-10-04 14:03:59,ppedrot,@gares Futures are much less interesting now since we're basically only considering a fixed code path in vernac/declare. We could simply defunctionalize the beast and reify the possible interactions as a nice AST. The only reason we had higher-order functions was to hide the horrible process state from the kernel.
14924,ppedrot,2021-10-04 15:35:04,gares,"Oh, I see. But then Opaques should be even higher, in the DM (the STM for now), not in vernac."
14924,ppedrot,2021-10-04 19:15:57,ppedrot,"CI green, AFAIU this is ready to merge."
14924,ppedrot,2021-10-05 08:16:33,gares,@coqbot merge now and let's party!
14924,ppedrot,2021-10-05 08:16:36,coqbot-app,@gares: Please take care of the following overlays:\n\n14924-ppedrot-move-opaque-out-of-kernel.sh
14391,ppedrot,2021-05-26 13:32:26,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14391,ppedrot,2021-05-26 13:51:37,SkySkimmer,@coqbot ci minimize fiat-crypto-legacy
14391,ppedrot,2021-05-26 13:51:38,coqbot-app,Error while attempting to find job minimization information:\nCould not find pipeline check for head commit 74506b3 and no summary was passed.  (Found checks: GitLab CI job library:ci-fiat_crypto_legacy (pull request))
14391,ppedrot,2021-05-26 17:41:13,ppedrot,Is the minimizer running or has it failed?
14391,ppedrot,2021-05-26 18:16:35,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14391,ppedrot,2021-05-26 19:08:31,ppedrot,"@JasonGross I have found the issue. The problem is that fcl doesn't follow the Coq documentation. Equality schemes should manually define their subcomponents, but the previous code was lenient about that. It would silently generate the missing equality schemes, but now with these PRs these schemes are internal and thus prefixed with internal_ in their names. Since fcl explicitly refers to implicitly generated subschemes, it fails.\nThe precise root of the issue is in CommonSubexpressionEliminatio"
14391,ppedrot,2021-05-26 19:33:40,JasonGross,"Is the minimizer running or has it failed?\n\nIt failed to start because coqbot previous did not support starting minimization when the overall pipeline was still in progress.  I've since changed this, so it should work now if we try it again."
14391,ppedrot,2021-05-26 19:58:45,herbelin,"It would silently generate the missing equality schemes, but now with these PRs these schemes are internal and thus prefixed with internal_\n\nThere are already various problems with the late binding of previous scheme names. For instance, it is assumed that the name is necessarily of the form foo_beq. If there are several constants with such name, one is picked ""arbitrarily"". Also Scheme foo_scheme := Equality for foo. is broken (which maybe is good so that the scheme for foo is always foo_bweq -"
14391,ppedrot,2021-05-26 20:09:52,ppedrot,"is it crucial that the intermediate generated schemes have suffix internal_ rather than no particular suffix?\n\nNo, but it ensures better backwards compatibility. Some tests in the test-suite capture this naming scheme.\nRegarding the naming, the situation before the PR is quite dire, because it depends on the runtime reachability of declared schemes, which can influence the naming of the generated subschemes. After the PR, the naming is uniform, i.e. all subschemes are prefixed with internal_. My"
14391,ppedrot,2021-05-27 16:06:27,ppedrot,"CI is now green, FWIW."
14391,ppedrot,2021-05-28 09:38:50,SkySkimmer,@coqbot: merge now
14401,MSoegtropIMC,2021-05-28 06:30:36,MSoegtropIMC,"@koraa : fyi: the change log entry for your PR #14087 ended up in a wrong folder (which is fixed by this PR). Do you remember how you created it? I guess you followed some documented procedure and we might want to fix this documentation. I darkly remember that I did the same once, so I guess it is somewhere written down that it should be done like this."
14401,MSoegtropIMC,2021-05-28 07:33:50,Zimmi48,"I guess you followed some documented procedure and we might want to fix this documentation.\n\nAFAIK, the documentation only mentions the script that should be used to generate changelog entries."
14401,MSoegtropIMC,2021-05-28 07:43:06,MSoegtropIMC,"AFAIK, the documentation only mentions the script that should be used to generate changelog entries.\n\nYes I know, the documentation here (https://github.com/coq/coq/tree/master/doc/changelog#unreleased-changelog) is clear, but as I said, afair I did exactly the same thing once and really wonder how it came to that. I suspect there is some outdated alternate documentation which google leads to or whatever."
14401,MSoegtropIMC,2021-05-28 09:12:54,coqbot-app,"Hey, I have detected that there were CI failures at commit 81fd007 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit b7d10ab succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14401,MSoegtropIMC,2021-05-28 11:03:26,koraa,I basically just followed the script and then had to fix it up manually later…\n./dev/tools/make-changelog.sh\nThe script is exceedingly hard to read but in lines [8…12] there are multiple candidates which might potentially add an extra directory. Maybe a combination of 8 + 12 (asking for the title of the pr and then determining it using git rev-parse?)
14401,MSoegtropIMC,2021-05-28 11:56:17,SkySkimmer,Yeah if the branch name contains a slash (as #14087 did) the script would misbehave.
14153,mrhaandi,2021-04-22 17:57:43,coqbot-app,"Hey, I have detected that there was a failure in project ci-mtac2 (for commit 7ddc0fe) without any failure in the test-suite.\nI checked that the corresponding job for the base commit d758cc5 succeeded. Now, I'm trying to extract a minimal test case from this so that it can be added to the test-suite. I'll come back to you with the results once it's done."
14153,mrhaandi,2021-05-03 06:28:04,mrhaandi,"@olaure01 would you take a look and see whether the changes are worthwhile?\nSomewhat related to this, I documented the removed anti-patterns in the wiki."
14153,mrhaandi,2021-05-03 06:35:16,olaure01,"@mrhaandi I have this on my todo list, but I will still not have time in the next two weeks unfortunately."
14153,mrhaandi,2021-05-27 09:46:08,mrhaandi,"There are small troubles with name mangling from a previous PR, it might be a good opportunity to correct them here.\n\n@olaure01 Which troubles/corrections do you mean? Is it related to your above suggestions?\n(also I now implemented your above suggestions, and rebased on current master)."
14153,mrhaandi,2021-05-27 13:09:43,olaure01,"Which troubles/corrections do you mean? Is it related to your above suggestions?\n\n@mrhaandi not at all. There are 3 places (if I remember well) where #13986 has introduced troubles with name mangling. You can locate them by adding Set Mangle Names. at the beginning of the file.\nSince this is not directly related to the present PR, I can do a separate one, but it seems we can save time by doing it here since the current PR already does quite a lot of cleaning."
14153,mrhaandi,2021-05-27 13:14:48,olaure01,There are 2 modified changelog files which looks a bit strange.
14153,mrhaandi,2021-05-27 13:41:12,mrhaandi,You can locate them by adding Set Mangle Names.\n\nFixed. Now List.v compiles with Set Mangle Names.\n\nThere are 2 modified changelog files which looks a bit strange.\n\nFixed. (I mistakenly touched the wrong changelog file).
14153,mrhaandi,2021-05-27 14:17:43,olaure01,"@mrhaandi Assuming CI goes well, you can squash and I will merge by Monday if there is no additional comment in the meantime."
14153,mrhaandi,2021-05-27 19:30:19,mrhaandi,"Assuming CI goes well, you can squash and I will merge by Monday if there is no additional comment in the meantime.\n\nAlright. Previous ci went through fine. I squashed the commits."
14153,mrhaandi,2021-05-28 08:57:49,coqbot-app,"Hey, I have detected that there were CI failures at commit f7621fe without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit b7d10ab succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14153,mrhaandi,2021-05-28 09:08:49,coqbot-app,"Hey, I have detected that there were CI failures at commit f7621fe without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit b7d10ab succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14153,mrhaandi,2021-05-28 12:26:02,coqbot-app,"Hey, I have detected that there were CI failures at commit f7621fe without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit b7d10ab succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14153,mrhaandi,2021-05-28 14:14:00,coqbot-app,"Hey, I have detected that there were CI failures at commit f7621fe without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit b7d10ab succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14153,mrhaandi,2021-05-31 07:55:32,olaure01,@coqbot: merge now
14462,ppedrot,2021-06-07 12:23:56,ppedrot,Bench: https://gitlab.com/coq/coq/-/jobs/1324044303\n┌─────────────────────────────┬─────────────────────────┬───────────────────────────────────────┬───────────────────────────────────────┬─────────────────────────┬─────────────────┐\n│                             │      user time [s]      │              CPU cycles               │           CPU instructions            │  max resident mem [KB]  │   mem faults    │\n│                             │                         │                           
14462,ppedrot,2021-06-21 23:54:22,coqbot-app,"Hey, I have detected that there were CI failures at commit d8029bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 76e20b5 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14462,ppedrot,2021-06-22 00:23:42,coqbot-app,"Hey, I have detected that there were CI failures at commit d8029bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 76e20b5 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14462,ppedrot,2021-06-28 08:07:51,ppedrot,Rerunning a bench on the noisy coqprime to check whether the slowdown was real: https://gitlab.com/coq/coq/-/jobs/1381540510.
14462,ppedrot,2021-06-28 09:22:42,SkySkimmer,┌──────────────┬───────────────────────┬─────────────────────────────────────┬─────────────────────────────────────┬───────────────────────┬─────────────────┐\n│              │     user time [s]     │             CPU cycles              │          CPU instructions           │ max resident mem [KB] │   mem faults    │\n│              │                       │                                     │                                     │                       │                 │\n│ package_name │    NEW
14462,ppedrot,2021-06-28 09:31:04,ppedrot,Either coqprime is very noisy or this PR does weird stuff.
14462,ppedrot,2021-07-05 09:26:23,ppedrot,This needs an assignee.
14462,ppedrot,2021-07-05 15:08:14,herbelin,coqprime manipulates very large integers so is probably pretty sensitive to cache/memory issues (???).\nLet me assign since I'm currently around.
14462,ppedrot,2021-07-07 09:06:50,herbelin,@coqbot: merge now
13126,herbelin,2020-10-01 19:20:48,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
13126,herbelin,2020-10-02 14:57:10,maximedenes,Wasn't the information already available after #7825?
13126,herbelin,2020-10-02 15:29:02,herbelin,"Wasn't the information already available after #7825?\n\nGood question.\nAfter looking at #7825, the answer is:\n\nthe aliased map there is tracking instanciations of the form ?x := ?y, and the map tells what is the current undefined incarnation of a defined evar that was yet undefined at some initial time of observation;\nthe equivalence classes here are partitioning the undefined evars involved in ?x == ?y pending conversion problems (i.e. equations that we are not able to ensure that they have eith"
13126,herbelin,2020-10-25 11:25:33,herbelin,Waiting for #13269 to first attach to the OccurCheck error in solve_simple_eqn a more precise meaning.
13126,herbelin,2021-06-07 14:11:28,coqbot-app,"Hey, I have detected that there were CI failures at commit e6e2f02 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ff1040b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-hott."
13126,herbelin,2021-06-07 14:13:47,JasonGross,@coqbot CI minimize
13126,herbelin,2021-06-07 14:13:54,coqbot-app,I have initiated minimization at commit e6e2f02 for the suggested target ci-hott as requested.
13126,herbelin,2021-06-07 16:36:22,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Spaces/Torus/TorusEquivCircles.v (from ci-hott) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-time"" ""-q"" ""-noinit"" ""-indices-matter"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hott/theories"" ""HoTT"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq"
13126,herbelin,2021-06-09 17:00:00,JasonGross,"Failure to fully minimize here is due to JasonGross/coq-tools#63, which I plan to fix soon"
13126,herbelin,2021-06-09 19:32:49,JasonGross,"Let's try minimizing again, now that the issue with vernac in proofs is fixed\n@coqbot ci minimize"
13126,herbelin,2021-06-09 19:32:54,coqbot-app,I have initiated minimization at commit e6e2f02 for the suggested target ci-hott as requested.
13126,herbelin,2021-06-09 19:36:00,coqbot-app,Error: Could not minimize file  (from ci-hott) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.7MiB file on GitHub Actions Artifacts under build.log)\nating: _build_ci/hott/theories/Spaces/Int.vos  \n  inflating: _build_ci/hott/theories/Spaces/Int/.Core.aux  \n  inflating: _build_ci/hott/theories/Spaces/Int/.Equiv.aux  \n  inflating: _build_ci/hott/theories/Spaces/Int/.LoopExp.aux  \n  inflating: _build_ci/hott/theories/Spaces/Int/.Spec.aux  \n  inflating: _build_ci/hott/theori
13126,herbelin,2021-06-09 19:43:45,JasonGross,Have the artifacts at the base job expired or something?
13126,herbelin,2021-06-09 19:46:07,JasonGross,I'm going to rebase and force-push
13126,herbelin,2021-06-09 20:30:32,JasonGross,@coqbot ci minimize ci-hott
13126,herbelin,2021-06-09 20:30:36,coqbot-app,I am now running minimization at commit 39ee7ec on requested target ci-hott. I'll come back to you with the results once it's done.
13126,herbelin,2021-06-09 21:50:58,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Spaces/Torus/TorusEquivCircles.v (from ci-hott) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-noinit"" ""-indices-matter"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hott/theories"" ""HoTT"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing"
13126,herbelin,2021-06-09 22:31:26,coqbot-app,"Hey, I have detected that there were CI failures at commit 39ee7ec without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 623a1af succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-hott."
13126,herbelin,2021-06-09 22:48:32,JasonGross,Success!  HoTT minimization worked!
13126,herbelin,2021-08-25 12:24:32,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
13126,herbelin,2021-09-24 02:13:22,coqbot-app,"This PR was not rebased after 30 days despite the warning, it is now closed."
13126,herbelin,2021-09-24 08:36:27,herbelin,Rebased and reopened as #14929.
14528,ppedrot,2021-06-20 15:30:12,ppedrot,"@silene this patch could even go into 8.14 in order not to delay the code removal it permits, but I would perfectly understand if you didn't want it to."
14528,ppedrot,2021-06-20 15:30:41,ppedrot,Also ping @mattam82 for an opinion on the matter.
14528,ppedrot,2021-06-21 08:02:21,herbelin,"In passing, I'd be interested on knowing the plans of the team about automation in general. Do we mostly aim to maintain what exists or are there plans to get closer to our ""dreams""?"
14528,ppedrot,2021-06-21 08:28:25,Zimmi48,"There's a lot of work going on by @mattam82 to improve automation supported by typeclasses eauto. AFAICT, the plans of the team are to focus the efforts there, by making programmable automation more and more controllable."
14528,ppedrot,2021-06-21 09:41:14,herbelin,"Thanks for the answer.\nMore generally, I had typically general questions about things like:\n\nsupport for destructing tuples in hypotheses in the variants of eauto\ncombination of rewriting and eauto\ncombination of eauto and tactics such as congruence, or ring, or lia\n\nI wanted to know if someone had projects in these directions."
14528,ppedrot,2021-06-21 10:04:43,mattam82,"I'm fine with this deprecation. Indeed most of it is available through typeclasses eauto.\nAbout Hugo's questions:\nMore generally, I had typically general questions about things like:\n\n\nsupport for destructing tuples in hypotheses in the variants of eauto\nOne can have an Hint Extern for that. It should probably be marked as an invertible rule so we don't backtrack on it. Hint Extern When should be enough to handle that.\n\n\ncombination of rewriting and eauto\nOne can also use Hint Extern for that. I"
14528,ppedrot,2021-06-21 10:16:39,herbelin,"Thanks for the answer. Then, is it a correct feeling that the Hint Extern technique is for relatively knowledgeable users? Or conversely, is there some collection of Hint Extern that should be made available out of the box without having to think (the same way as a collection of Hint Resolve and hint bases are provided - even if there are some mistakes in the building of these bases). [The question is quite naive. Automation is important but I know little about it. The question is more to have a"
14528,ppedrot,2021-06-21 11:57:00,MSoegtropIMC,"Unfortunately I am a bit out of the auto proof business right now - I am mostly working on numerics these days, which requires different techniques, mostly specialized decision procedures I write in Ltac2 and sometimes in Mtac2. There is not much to gain from auto in this domain. My tactics typically make heavy use of reliable building blocks like lia, ring, interval and gappa and I very much appreciate the increase of robustness and flexibility in these.\nRegarding hint extern: I used this exten"
14528,ppedrot,2021-06-21 15:57:14,silene,"this patch could even go into 8.14\n\nThere is a changelog entry, so backporting it would be painful."
14528,ppedrot,2021-06-21 15:58:47,ppedrot,@silene As you wish.
14528,ppedrot,2021-06-21 17:09:00,Zimmi48,"@silene If that's the only issue, then you can ask @ppedrot to move the changelog entry to the appropriate location in the 8.14 release notes (that works only if the patch is then guaranteed to go in 8.14+beta1)."
14528,ppedrot,2021-06-21 17:25:13,ppedrot,@silene ready to do that if you give your green light.
14528,ppedrot,2021-06-22 07:06:03,silene,Okay then.
14528,ppedrot,2021-06-22 08:18:35,ppedrot,"@silene done. Can a maintainer quickly assign and merge once the CI is green, so as to make the life of our beloved RM easier?"
14528,ppedrot,2021-06-22 09:50:06,herbelin,"Metacoq is failing everywhere, for apparently unrelated reasons.\nPing me, if I forgot to merge (actually it will be ok if @silene or @SkySkimmer happens to pass here and merge it)."
14528,ppedrot,2021-06-22 11:29:28,coqbot-app,"Hey, I have detected that there were CI failures at commit a4066da without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 76e20b5 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14528,ppedrot,2021-06-22 11:37:54,coqbot-app,"Hey, I have detected that there were CI failures at commit a4066da without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 76e20b5 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14528,ppedrot,2021-06-22 12:07:00,ppedrot,"metacoq is broken on master, I am trying to fix it with input from some of its devs but it ain't easy. I think this PR can be safely merged. The only important thing is the test-suite and the linter, since the PR removing the tactic had a green CI two days ago."
14528,ppedrot,2021-06-23 09:20:54,ppedrot,@herbelin this is ready to merge.
14528,ppedrot,2021-06-23 14:28:00,herbelin,@ppedrot: Would you mind if I push my + nitpicking on top of the PR before merging?
14528,ppedrot,2021-06-23 14:39:01,ppedrot,"@herbelin go ahead, but this needs to be merged quickly since this must go in 8.14."
14528,ppedrot,2021-06-23 14:39:40,ppedrot,"(@herbelin Please don't put a section though, this is complexifying the code and might have weird side-effects.)"
14528,ppedrot,2021-06-23 14:54:44,ppedrot,@herbelin you messed up the rebase it seems.
14528,ppedrot,2021-06-24 14:22:18,herbelin,UniMath is failing elsewhere too. I suppose we don't have to care.\n@coqbot: merge now
14499,SkySkimmer,2021-06-16 12:19:38,Zimmi48,"The error in the Nix job seems related:\nFile ""theories/.coq-native/Ntest_test.native"", line 14, characters 3-40:\n14 |   (NCoq_Init_Nat.const_NCoq_Init_Nat_add\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: Unbound module NCoq_Init_Nat\nError: Native compiler exited with status 2 (in case of stack overflow,\n       increasing stack size (typicaly with ""ulimit -s"") often helps)\nmake[4]: *** [Makefile:765: theories/test.vo] Error 1\nmake[3]: *** [Makefile:386: all] Error 2\nmake[3]: Leaving direc"
14499,SkySkimmer,2021-06-17 10:53:58,SkySkimmer,I don't know how to debug the nix issue @coq/nix-maintainers
14499,SkySkimmer,2021-06-17 11:57:10,Zimmi48,"IIUC these tests were being skipped since the Dune switch and thus were never really checked against Dune and coqnative?\nIINM Nix is the only job that checks the test-suite after make install. Therefore, you might be able to reproduce the issue by doing ./configure -prefix ... && make && make install && make check on your own machine..."
14499,SkySkimmer,2021-06-17 12:00:07,SkySkimmer,"IIUC these tests were being skipped since the Dune switch and thus were never really checked against Dune and coqnative?\n\nNo, they were never skipped but they tested native compilation of a trivial file (with just a Qed proof in it) which is too trivial to detect bugs.\nI changed the test to make it nontrivial, which required fixing the skip logic so that we don't get errors when native is configured off."
14499,SkySkimmer,2021-06-17 12:01:16,SkySkimmer,"IINM Nix is the only job that checks the test-suite after make install. Therefore, you might be able to reproduce the issue by doing ./configure -prefix ... && make && make install && make check on your own machine...\n\nHow does make check use the installed coq instead of the non-installed files?"
14499,SkySkimmer,2021-06-17 12:57:51,Zimmi48,How does make check use the installed coq instead of the non-installed files?\n\nI'm not sure how things work.
14499,SkySkimmer,2021-06-17 14:09:19,SkySkimmer,I think the nix failure is because the default for native compile is ondemand. Let's try skipping also for ondemand.
14499,SkySkimmer,2021-06-17 14:54:55,SkySkimmer,That worked
14499,SkySkimmer,2021-06-21 19:14:21,ejgallego,@coqbot: merge now
14499,SkySkimmer,2021-06-21 19:48:15,coqbot-app,"Hey, I have detected that there were CI failures at commit ffbe972 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ff73469 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq.\nHowever, you may want to wait until the pipeline for the base commit (ff73469) finishes."
13269,herbelin,2021-06-02 23:40:13,coqbot-app,"Hey, I have detected that there were CI failures at commit a4e4ed0 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ff1040b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-hott."
13269,herbelin,2021-06-03 01:20:16,JasonGross,@coqbot CI minimize
13269,herbelin,2021-06-03 01:20:24,coqbot-app,I have initiated minimization at commit a4e4ed0 for the suggested target ci-hott as requested.
13269,herbelin,2021-06-03 01:24:50,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Spaces/Circle.v (from ci-hott) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; mode: visual-line -*- *)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire HoTT.Basics.Notations.\nRequire HoTT.Basics.Logic.\nRequire HoTT."
13269,herbelin,2021-06-03 07:29:32,herbelin,"Thanks @JasonGross and @Zimmi48, that's very cool and a time-saving to have these minimized examples!"
13269,herbelin,2021-06-03 09:33:44,Zimmi48,Thanks @herbelin! Do not hesitate to copy-paste this test case in the test-suite since it is reasonably small and shows a limitation of the current test-suite.
13269,herbelin,2021-06-03 12:57:54,JasonGross,"Unfortunately in this case the minimizer did not work well (note all the Require at the top and the comments).  I believe the issue is that it's not picking up -noinit and -indices-matter correctly, so I'm going to try to fix those later today sand then hopefully we'll have an actually minimized test-case."
13269,herbelin,2021-06-03 14:05:24,JasonGross,"Should be fixed now, let's try again.  @coqbot ci minimize"
13269,herbelin,2021-06-03 14:05:31,coqbot-app,I have initiated minimization at commit a4e4ed0 for the suggested target ci-hott as requested.
13269,herbelin,2021-06-03 19:22:28,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hott/theories/Spaces/Circle.v (from ci-hott) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-time"" ""-q"" ""-noinit"" ""-indices-matter"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hott/theories"" ""HoTT"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hott/contrib"" ""HoTT.Contrib"" ""-Q"" ""/github/w"
13269,herbelin,2021-06-03 19:37:52,JasonGross,And now we encounter the limitations of 6-hour timeouts.  I wonder if there's a way to make it easy to resume minimization...
13269,herbelin,2021-06-07 09:22:19,ppedrot,"Regardless of the backwards compatibility issues, this will need a bench when HoTT is fixed."
13269,herbelin,2021-06-21 01:38:37,JasonGross,"Now we have auto-resumption, let's try minimization again\n@coqbot ci minimize"
13269,herbelin,2021-06-21 01:38:40,coqbot-app,I have initiated minimization at commit a4e4ed0 for the suggested target ci-hott as requested.
13269,herbelin,2021-06-21 01:41:42,coqbot-app,Error: Could not minimize file  (from ci-hott) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.7MiB file on GitHub Actions Artifacts under build.log)\n_ci/hott/theories/Spaces/Cantor.vos  \n  inflating: _build_ci/hott/theories/Spaces/Card.v  \n  inflating: _build_ci/hott/theories/Spaces/Circle.glob  \n  inflating: _build_ci/hott/theories/Spaces/Circle.v  \n  inflating: _build_ci/hott/theories/Spaces/Circle.v.timing  \n   creating: _build_ci/hott/theories/Spaces/Finite/\n  inflat
13269,herbelin,2021-06-21 01:44:51,JasonGross,"This needs rebasing for minimization to be re-run, since the base commit artifacts are expired"
13269,herbelin,2021-06-21 11:20:07,JasonGross,And unfortunately ci-hott depends on build:base which is currently broken for unknown reasons :-/
13269,herbelin,2021-06-21 21:53:05,JasonGross,Rebase once more and we should be able to minimize?
13269,herbelin,2021-08-05 17:12:55,herbelin,This PR was going in the wrong direction: instantiating an evar by its eta-expansion doesn't actually need eta so as to be valid. This is because eta-expansion is idempotent where idempotency requires using only beta/iota.\nSee #14746 for a new version.
13269,herbelin,2021-09-01 13:02:43,ppedrot,IIUC we should close then.
14788,ppedrot,2021-08-16 21:50:43,ppedrot,Bench: https://gitlab.com/coq/coq/-/jobs/1507802394
14788,ppedrot,2021-08-18 00:42:16,coqbot-app,"Hey, I have detected that there were CI failures at commit f0bbc18 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 23a8a7e succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-compcert, ci-vst."
14788,ppedrot,2021-08-18 09:23:57,ppedrot,@coqbot ci minimize
14788,ppedrot,2021-08-18 09:24:04,coqbot-app,"I have initiated minimization at commit f0bbc18 for the suggested targets ci-compcert, ci-vst as requested."
14788,ppedrot,2021-08-18 09:51:45,coqbot-app,"Hey, I have detected that there were CI failures at commit f0bbc18 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 23a8a7e succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-compcert, ci-vst."
14788,ppedrot,2021-08-18 12:28:41,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/veric/mem_lessdef.v (from ci-vst) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/msl"" ""VST.msl"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/sepcomp"" ""VST.sepcomp"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/ver"
14788,ppedrot,2021-08-18 14:41:16,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/compcert/x86/SelectLongproof.v (from ci-compcert) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 111KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-undeclared-scope"" ""-w"" ""-omega-is-deprecated"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/lib"" ""compcert.lib"" ""-R"" ""/github/"
14788,ppedrot,2021-08-18 16:40:03,ppedrot,"Further minimization of the compcert failure:\nDefinition ptr64 := false.\n\nInductive val: Set := Vundef: val.\n\nInductive lessdef: val -> val -> Prop := lessdef_undef: forall v, lessdef Vundef v.\n\nGlobal Hint Resolve lessdef_undef : foo.\n\nAxiom memval : Set.\nAxiom load_result : memval -> val.\n\nLemma foo : forall (v : val)\n  (vl' : memval), lessdef (if ptr64 then load_result vl' else Vundef) v.\nProof.\nintros vl'.\nauto with foo.\nQed.\n\nThe root of the failure is that btermdn pattern recognition does "
14788,ppedrot,2021-08-18 19:58:15,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/compcert/x86/SelectLongproof.v (from ci-compcert) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 95KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-undeclared-scope"" ""-w"" ""-omega-is-deprecated"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/lib"" ""compcert.lib"" ""-R"" ""/github/w"
14788,ppedrot,2021-08-18 20:01:23,coqbot-app,"Minimized File  (from ci-compcert) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 95KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-undeclared-scope"" ""-w"" ""-omega-is-deprecated"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/lib"" ""compcert.lib"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/common"" ""compcert.common"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/com"
14788,ppedrot,2021-08-18 21:34:25,ppedrot,Bench: https://gitlab.com/coq/coq/-/jobs/1514200166
14788,ppedrot,2021-08-19 11:44:47,Janno,The root of the failure is that btermdn pattern recognition does not realize that the if can be reduced by unfolding ptr64. Since we don't want to perform agressive βδι-reduction I guess we'll have to match everything in this case...\n\nAny connection to #13209? (My attempt at an explanation of the behavior is in #13209 (comment))
14788,ppedrot,2021-08-19 11:48:59,ppedrot,"Probably. The PRs I have been writing around Btermdn are precisely trying to put a bit of order around the semantics of dn matching, which was pretty crazy before. Now we're essentially using an (overapproximation) of syntactic equality on neutral forms for βι-reduction up to η-equality. There are still a few weird cases (notably for let-ins) but it should be saner."
14788,ppedrot,2021-08-19 11:51:00,ppedrot,"Indeed, I confirm that #13209 is solved by this PR."
14788,ppedrot,2021-08-19 12:30:30,Janno,"On second thought, I suppose I shouldn't be too happy before I understand this fully. Does this PR fix the bug by treating ifs as matching everything in a symmetric way? If so, it might be bad news because that would bring down the performance of some of our proofs by quite a bit. We have hints keyed on ifs and they always match everything. Obviously I would prefer if they only matched if terms but at least we only get a relatively small multiplicative factor (number of hints keyed on if times a"
14788,ppedrot,2021-08-19 12:52:47,ppedrot,"Would it be reasonable to return Everything only if the condition returns Everything? That would make sense to me.\n\nThis is possible, but I'll do that in the next round of changes. As I mentioned above, I believe that the correct criterion is to look at neutral forms. In particular, a case over a rigid term should be considered rigid, but any other case should be considered flexible."
14788,ppedrot,2021-08-19 12:55:14,ppedrot,that would bring down the performance of some of our proofs by quite a bit\n\nI'd be interested if you had some self-contained benchmarking files btw.
14788,ppedrot,2021-08-19 13:11:47,Janno,I'd be interested if you had some self-contained benchmarking files btw.\n\nI'll see if I can figure something out.
14788,ppedrot,2021-08-19 17:03:29,ppedrot,┌─────────────────────────────┬─────────────────────────┬───────────────────────────────────────┬───────────────────────────────────────┬─────────────────────────┬─────────────────┐\n│                             │      user time [s]      │              CPU cycles               │           CPU instructions            │  max resident mem [KB]  │   mem faults    │\n│                             │                         │                                       │                                       
14788,ppedrot,2021-08-19 17:03:53,ppedrot,Pretty good bench. Here is a leaderboard of the absolute speedups:\nhtml/coq-unimath/UniMath/Bicategories/DisplayedBicats/Examples/DisplayedInserter.v.html:857 -2.49 101.89 99.40 (-2%)\nhtml/coq-geocoq/Highschool/exercises.v.html:48 -1.43 2.92 1.49 (-49%)\nhtml/coq-geocoq/Highschool/exercises.v.html:56 -1.40 2.85 1.46 (-49%)\nhtml/coq-color/Coccinelle/term_orderings/rpo.v.html:5197 -1.25 3.28 2.03 (-38%)\nhtml/coq-rewriter-perf-SuperFast/src/Rewriter/Rewriter/Wf.v.html:510 -1.25 49.96 48.72 (-2%)\nhtm
14788,ppedrot,2021-08-19 17:40:48,ppedrot,"I deem this ready, even if this might introduce slowdowns in some of @Janno 's examples. There is always room for improvement by βι-normalizing on the fly. The current PR emphasizes soundness over efficiency."
14788,ppedrot,2021-08-26 14:21:48,ppedrot,"This needs an assignee, ping."
14788,ppedrot,2021-08-30 13:54:09,Janno,While documenting the fixed failure in #13209 I realized that the other test case doesn't fail on 8.13.2. Does it only fail on master?
14788,ppedrot,2021-08-30 14:00:41,ppedrot,"@Janno yes, it was discovered while writing this patch. I've added it to expand the test coverage of btermdn behaviour from the wild."
14788,ppedrot,2021-09-06 12:46:39,SkySkimmer,@coqbot merge now
14722,ppedrot,2021-07-30 10:32:14,ppedrot,Bench: https://gitlab.com/coq/coq/-/jobs/1465095402
14722,ppedrot,2021-07-30 15:00:18,ppedrot,"Small example extracted from fiat-parsers:\nClass Reflexive0 {A : Type} (R : A -> Prop) : Prop := {}.\n\nAxiom t : Type -> Type.\n\nAxiom map2 : forall [elt : Type], (option elt -> option Prop) -> t elt -> Prop.\n\nDefinition lift_relation_hetero {A}\n           (R : A -> Prop) (defaultA : A)\n  : t A -> Prop\n  := fun m1\n     => \n          (map2\n             (fun x1\n              => match x1 with\n                 | Some x1 => Some (R x1)\n                 | None => None\n                 end)\n             "
14722,ppedrot,2021-07-30 16:14:16,ppedrot,"Even simpler:\nClass Reflexive0 {A : Type} (R : A -> Prop) : Prop := {}.\n\nDefinition foo {A R} {HR : @Reflexive0 A R} : @Reflexive0 A (fun x => R x) := _.\n\nThe problem is that making the variable opaque prevents syntactic matching up to η-expansion, even though unification would succeed on this. I don't know if this semantics is intended, but it departs from the one for constants where a similar example fails on master.\nClass Reflexive0 {A : Type} (R : A -> Prop) : Prop := {}.\n\nAxiom A : Type.\nAx"
14722,ppedrot,2021-07-30 22:19:02,coqbot-app,"Hey, I have detected that there were CI failures at commit 0e84f00 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 80fb906 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color, ci-fiat_crypto, ci-fiat_parsers, ci-math_classes, ci-perennial."
14722,ppedrot,2021-07-31 10:47:23,ppedrot,@coqbot ci minimize
14722,ppedrot,2021-07-31 10:47:38,coqbot-app,"I have initiated minimization at commit 0e84f00 for the suggested targets ci-bedrock2, ci-color, ci-fiat_crypto, ci-fiat_parsers, ci-math_classes, ci-perennial as requested."
14722,ppedrot,2021-07-31 11:08:23,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/math_classes/implementations/option.v (from ci-math_classes) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/math_classes"" ""MathClasses"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/us"
14722,ppedrot,2021-07-31 12:06:01,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Common/FMapExtensions/LiftRelationInstances.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/"
14722,ppedrot,2021-07-31 12:30:36,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/src/goose_lang/lib/persistent_readonly.v (from ci-perennial) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-ssr-search-moved"" ""-w"" ""-deprecated-hint-without-locality"" ""-w"" ""-deprecated-instance-without-locality"" ""-w"" ""-deprecated-hint-rewrite-without-locality"" ""-w"" ""+deprecated-tactic-notation"" ""-w"" ""-notation-overridden,-red"
14722,ppedrot,2021-07-31 14:01:20,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/color/Term/Lambda/LComp.v (from ci-color) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/color"" ""CoLoR"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Bignums"" ""Bignums"" ""-"
14722,ppedrot,2021-07-31 15:52:57,ppedrot,"As mentioned on Zulip, in 8.12 constants were handled the same way as variables w.r.t. η-expansion. This is not the case in 8.13, and the commit that introduced the change was:\ncommit 4ebccb9d2722a7323cb7fce5c9e00bf2eea5b69f\nAuthor: Pierre-Marie Pédrot <pierre-marie.pedrot@inria.fr>\nDate:   Mon Jun 22 12:59:06 2020 +0200\n\n    Dnets now consider axioms as being opaque for pattern recognition.\n\nI am a bit befuzzled that there is no test that caught it, nor any dev in the CI. The fact that we get s"
14722,ppedrot,2021-07-31 16:04:00,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto/src/Curves/Weierstrass/Projective.v (from ci-fiat_crypto) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 35KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pa"
14722,ppedrot,2021-07-31 16:04:22,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor/KamiRiscv.v (from ci-bedrock2) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 44KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedroc"
14722,ppedrot,2021-07-31 16:13:40,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto/src/Curves/Weierstrass/Projective.v (from ci-fiat_crypto) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 35KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+variable-collision,+omega-is-deprecated,+deprecat"
14722,ppedrot,2021-07-31 18:57:55,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor/KamiRiscv.v (from ci-bedrock2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor"" ""processor"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_"
14722,ppedrot,2021-08-01 23:33:48,coqbot-app,"Hey, I have detected that there were CI failures at commit 6bb57d8 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 53fb47d succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-fiat_crypto, ci-fiat_parsers."
14722,ppedrot,2021-08-02 07:33:16,ppedrot,@coqbot ci minimize
14722,ppedrot,2021-08-02 07:33:24,coqbot-app,"I have initiated minimization at commit 6bb57d8 for the suggested targets ci-bedrock2, ci-fiat_crypto, ci-fiat_parsers as requested."
14722,ppedrot,2021-08-02 08:57:34,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Common/FMapExtensions/LiftRelationInstances.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/"
14722,ppedrot,2021-08-02 12:50:06,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor/KamiRiscv.v (from ci-bedrock2) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 42KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedroc"
14722,ppedrot,2021-08-02 12:50:18,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto/src/Curves/Weierstrass/Projective.v (from ci-fiat_crypto) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+variable-collision,+omega"
14722,ppedrot,2021-08-02 12:59:46,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto/src/Curves/Weierstrass/Projective.v (from ci-fiat_crypto) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+variable-collision,+omega-is-deprecated,+deprecated-instantiate-syntax,+non-recur"
14722,ppedrot,2021-08-02 15:40:31,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor/KamiRiscv.v (from ci-bedrock2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor"" ""processor"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_"
14722,ppedrot,2021-08-02 18:49:30,JasonGross,"@ppedrot Do you still have access to 0e84f00?  If so, could you force-push that commit to JasonGross/coq:test-coqbot-minimize (#14579).  I'm not sure how to access orphan commits, and I'd like to debug the failure to fully minimize from ci-color and ci-perennial (in addition to the issues with ci-fiat_crypto)"
14722,ppedrot,2021-08-03 11:08:26,ppedrot,@JasonGross done
14722,ppedrot,2021-08-03 14:00:10,coqbot-app,"Hey, I have detected that there were CI failures at commit 2827467 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 7c3f597 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-coq_tools, ci-fiat_crypto, ci-perennial."
14722,ppedrot,2021-08-03 20:37:59,ppedrot,@coqbot ci minimize\nci-fiat_crypto
14722,ppedrot,2021-08-03 20:38:05,coqbot-app,"I have initiated minimization at commit 2827467 for the suggested targets ci-bedrock2, ci-coq_tools, ci-fiat_crypto, ci-perennial as requested."
14722,ppedrot,2021-08-03 21:13:33,JasonGross,"@ppedrot the request needs to have the CI's listed on the same line as the coqbot tag, unquoted"
14722,ppedrot,2021-08-04 00:51:04,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto/src/Curves/Weierstrass/Projective.v (from ci-fiat_crypto) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+variable-collision,+omega-is-deprecated,+deprecated-instantiate-syntax,+non-recur"
14722,ppedrot,2021-08-04 01:54:43,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor/KamiRiscv.v (from ci-bedrock2) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor"" ""pro"
14722,ppedrot,2021-08-04 01:54:57,coqbot-app,Error: Could not minimize file  (from ci-coq_tools) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 2.8MiB file on GitHub Actions Artifacts under build.log)\nools/examples/example_45_result.log  \n  inflating: _build_ci/coq_tools/examples/init-settings.sh  \n  inflating: _build_ci/coq_tools/examples/memoize.py  \n  inflating: _build_ci/coq_tools/examples/prefix-grep.py  \n  inflating: _build_ci/coq_tools/examples/run-example-00.sh  \n  inflating: _build_ci/coq_tools/examples/run-
14722,ppedrot,2021-08-04 04:44:49,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor/KamiRiscv.v (from ci-bedrock2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor"" ""processor"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_"
14722,ppedrot,2021-08-05 11:27:17,ppedrot,"Minimal example from fiat-crypto:\nModule map.\n  Class map {value} := mk {\n    rep : Type;\n    get: rep -> option value;\n    empty : rep;\n    put : rep -> value -> rep;\n  }.\n  Arguments map : clear implicits.\n  Class ok {value : Type} {map : map value}: Prop := {\n    get_put_diff : forall m v, get (put m v) = None;\n  }.\n  Arguments ok {_} _.\n\nEnd map.\n\nAxiom wordX : Set.\nAxiom e : wordX.\n\nSection Equiv.\n\nContext {Registers: map.map wordX}\n        {mem: map.map Coq.Init.Byte.byte}.\n\nContext (Regis"
14722,ppedrot,2021-08-05 13:39:21,ppedrot,Bench: https://gitlab.com/coq/coq/-/jobs/1479760591
14722,ppedrot,2021-08-06 09:06:58,ppedrot,┌─────────────────────────────┬─────────────────────────┬───────────────────────────────────────┬────────────────────────────────────────┬─────────────────────────┬─────────────────┐\n│                             │      user time [s]      │              CPU cycles               │            CPU instructions            │  max resident mem [KB]  │   mem faults    │\n│                             │                         │                                       │                                     
14722,ppedrot,2021-08-06 09:10:47,ppedrot,@JasonGross this divides by about two the compilation time of all the instances of typeclass_reification from performance-tests. I am a bit surprised that is has no other observable effects in actual developments but maybe we don't stress typeclasses so much there.
14722,ppedrot,2021-08-06 12:37:12,Janno,This could be very interesting for the development I am working on but I don't think I'll ever be able to test that against coq/master. We often have local variables (without bodies) appearing in patterns. I suppose this change should be expected to speed things up by avoiding the transparent state lookup?
14722,ppedrot,2021-08-06 15:19:31,JasonGross,"Wow, that's amazing @ppedrot !  Does it have something to do with how many binders the instances are under?  I wonder if there are any other low-hanging fruit for typeclasses"
14722,ppedrot,2021-08-06 18:27:20,ppedrot,"I suppose this change should be expected to speed things up by avoiding the transparent state lookup?\nDoes it have something to do with how many binders the instances are under?\n\nNah, it simply prunes some typeclass instances early, preventing them to be checked for unification with the goal (which might be very expensive). The main difference now is that variables without a body are considered rigid for pattern recognition (i.e. they only match themselves, where they would match anything before"
14722,ppedrot,2021-08-06 20:07:45,JasonGross,"preventing them to be checked for unification with the goal (which might be very expensive).\n\nMy hypothesis was that this unification is expensive because it's expensive to allocate evars under many binders, and IIUC evars must be allocated for all of the dependent premises of the instance in order to perform unification.  Are you saying that the cost lies in some other part of unification?"
14722,ppedrot,2021-08-06 20:37:39,ppedrot,"Are you saying that the cost lies in some other part of unification?\n\nNo, I am not saying anything about unification beyond the fact it can be expensive (e.g. we have quadratic behaviours to compute term groundness, but there are many other ones, and evars are part of the big picture). My point is just that this PR simply short-circuits unification which is now not called at all in some easy-to-recognize cases."
14722,ppedrot,2021-08-13 11:27:20,ppedrot,This is ready and needs an assignee.
14722,ppedrot,2021-08-16 17:19:49,SkySkimmer,@coqbot merge now
9711,mattam82,2020-06-22 12:15:24,SkySkimmer,@mattam82 is this PR dead?
9711,mattam82,2021-01-07 13:18:10,mattam82,"It's been forgotten, I'll try to bring it back to life"
9711,mattam82,2021-05-07 11:08:04,ppedrot,@mattam82 ping. I believe this is quite high priority actually.
9711,mattam82,2021-05-08 06:16:04,mattam82,"@ppedrot I’m on holidays next week, so if you want to pick it up you’re welcome. Otherwise thanks for the reminder !"
9711,mattam82,2021-05-26 09:36:51,mattam82,"Rebased now, let's see."
9711,mattam82,2021-05-26 13:25:03,mattam82,@ppedrot this is ready now.
9711,mattam82,2021-05-28 08:39:53,ppedrot,@mattam82 can you squash the last commit? It's useless to keep it.
9711,mattam82,2021-05-28 08:53:30,mattam82,Sure. I rebased on #14392 to see where CI gets now.
9711,mattam82,2021-05-28 08:58:37,ppedrot,"Erm, I would gladly have merged this PR without the additional comments as soon as the original CI would have finished... This needs to be merged before the branch, so you'll have to rebase again to remove the commits once your experiment is finished."
9711,mattam82,2021-05-28 09:00:15,mattam82,That's fine. I'm not sure this is the end just yet.
9711,mattam82,2021-05-28 11:48:12,coqbot-app,"Hey, I have detected that there were CI failures at commit 2a691de without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 92f3b90 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
9711,mattam82,2021-05-28 11:51:43,coqbot-app,"Hey, I have detected that there were CI failures at commit 2a691de without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 92f3b90 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
9711,mattam82,2021-05-28 11:59:33,ppedrot,Why is coqbot repeating the very same thing twice?
9711,mattam82,2021-05-28 12:54:17,JasonGross,"It'll report again every time the overall pipeline status check is finished.  If a job fails and then someone restarts the job, when it finishes the second time, this will trigger a second comment.  Perhaps that's what happened?  (The coq-tools issue is on my side, I'll fix it shortly, sorry.)"
9711,mattam82,2021-05-28 13:12:03,mattam82,What is coq-tools ?
9711,mattam82,2021-05-28 13:12:31,mattam82,"Yes, I did retrigger it."
9711,mattam82,2021-05-28 13:13:00,mattam82,Do you mean that the failure of the ci-coq_tools job is your fault?
9711,mattam82,2021-05-28 13:34:58,JasonGross,"Do you mean that the failure of the ci-coq_tools job is your fault?\n\nYes, I pushed what I thought was an innocuous commit working around an intermittent issue with the native compiler, not realizing that it would change the output log, and I didn't enforce the discipline of running the test-suite before pushing.  This broke about half of the output tests, which I'm now fixing; it should be fixed within 10 minutes, and sorry about this."
9711,mattam82,2021-05-28 13:36:02,mattam82,"That's good news, both PRs should go green by tonight then!"
9711,mattam82,2021-05-28 14:04:37,JasonGross,"coq-tools should be fixed now, I've restarted it"
9711,mattam82,2021-05-28 14:12:35,coqbot-app,"Hey, I have detected that there were CI failures at commit 2a691de without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 92f3b90 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
9711,mattam82,2021-05-28 14:13:10,ppedrot,... still failing it seems.
9711,mattam82,2021-05-28 14:27:51,JasonGross,"Yeah, I forgot that -native-compiler ondemand is required to work around native compiler issues on old versions of coq but produces warnings on new versions of Coq.  Hopefully now fixed"
9711,mattam82,2021-05-30 11:27:57,ppedrot,"@mattam82 in order not to lose time I have rebased and slightly tweaked the commit message, I'll merge when the CI finishes."
9711,mattam82,2021-06-01 09:17:37,mattam82,@ppedrot thanks a whole bunch!
14480,SkySkimmer,2021-06-10 14:15:13,SkySkimmer,BTW without this PR StuckClass would print anomalies (without failing) with TC debug verbosity 2.
14480,SkySkimmer,2021-06-10 17:20:46,coqbot-app,"Hey, I have detected that there were CI failures at commit fc48877 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit df6a160 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-iris, ci-perennial."
14480,SkySkimmer,2021-06-10 17:23:25,SkySkimmer,@coqbot ci minimize ci-iris
14480,SkySkimmer,2021-06-10 17:23:29,coqbot-app,I am now running minimization at commit fc48877 on requested target ci-iris. I'll come back to you with the results once it's done.
14480,SkySkimmer,2021-06-10 18:48:21,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/stdpp/theories/list.v (from ci-iris) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/stdpp/theories"" ""stdpp"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-"
14480,SkySkimmer,2021-06-11 10:07:30,SkySkimmer,"Further minimized:\nRequire Import Coq.Setoids.Setoid Coq.Classes.Morphisms.\n\nClass PartialOrder {A} (R : relation A) : Prop := {\n  partial_order_pre :> PreOrder R;\n}.\nGlobal Hint Mode PartialOrder ! ! : typeclass_instances.\n(* - ! also bugs *)\n\nAxiom Permutation : forall {A:Type}, list A -> list A -> Prop.\n\nInfix ""≡ₚ"" := Permutation (at level 70, no associativity).\n\nGlobal Declare Instance Permutation_cons A :\n Proper (Logic.eq ==> @Permutation A ==> @Permutation A) (@cons A) | 7.\n(* priority < "
14480,SkySkimmer,2021-06-11 10:21:44,SkySkimmer,I can't figure this out further.\ncc @mattam82
14480,SkySkimmer,2021-07-05 13:13:07,mattam82,"It looks like a failure to backtrack after a stuck class is found, likely solved by PR #13952\nLong-story short: currently typeclasses are solved in ""independent"" fixpoints that can produce sets of postponed constraints for stuck classes. The PR allows ""global"" backtracking so that if the stuck class has no solution, we try other branches than the one that led to this stuck constraint."
14480,SkySkimmer,2021-07-05 14:02:52,SkySkimmer,"It looks like a failure to backtrack after a stuck class is found, likely solved by PR #13952\n\nConfirm solved by #13952"
14480,SkySkimmer,2021-07-05 14:16:23,RalfJung,"I am confused... #14441 is still open, is it not?"
14480,SkySkimmer,2021-07-05 14:17:50,RalfJung,"Oh I see, #13952 has not landed yet."
14612,mrhaandi,2021-07-07 18:25:20,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14612,mrhaandi,2021-07-07 18:55:23,fajb,I would propose red;intros. To deal with negations in the conclusion.\nBut not introducing regressions looks hard...
14612,mrhaandi,2021-07-07 19:32:30,coqbot-app,"Hey, I have detected that there were CI failures at commit 737b012 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 444aa95 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-aac_tactics, ci-argosy, ci-bbv, ci-bedrock2, ci-color, ci-compcert, ci-cross_crypto, ci-fiat_crypto_legacy, ci-fiat_parsers, ci"
14612,mrhaandi,2021-07-07 22:07:07,JasonGross,"Not sure how useful it'll be here, but we can get a sense of what sort of goals people expect congruence to solve if we @coqbot CI minimize"
14612,mrhaandi,2021-07-07 22:08:10,coqbot-app,"I have initiated minimization at commit 737b012 for the suggested targets ci-aac_tactics, ci-argosy, ci-bbv, ci-bedrock2, ci-color, ci-compcert, ci-cross_crypto, ci-fiat_crypto_legacy, ci-fiat_parsers, ci-geocoq, ci-iris, ci-math_classes, ci-metacoq, ci-perennial, ci-quickchick, ci-relation_algebra, ci-rewriter, ci-sf, ci-tlc, ci-verdi_raft, ci-vst as requested."
14612,mrhaandi,2021-07-07 22:12:02,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/aac_tactics/theories/Utils.v (from ci-aac_tactics) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+default"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/aac_tactics/theories"" ""AAC_tactics"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_c"
14612,mrhaandi,2021-07-07 22:12:06,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bbv/src/bbv/ZLib.v (from ci-bbv) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bbv/src/bbv"" ""bbv"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-top"" ""ZLi"
14612,mrhaandi,2021-07-07 22:12:08,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/relation_algebra/comparisons.v (from ci-relation_algebra) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-projection-no-head-constant"" ""-w"" ""-notation-overridden"" ""-w"" ""-redundant-canonical-projection"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/relation_algebra"" ""RelationAlgeb"
14612,mrhaandi,2021-07-07 22:12:26,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/argosy/vendor/array/src/Array.v (from ci-argosy) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/argosy/src"" ""RecoveryRefinement"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/argosy/vendor/classes/src"" ""Classes"" ""-R"" ""/github/workspac"
14612,mrhaandi,2021-07-07 22:13:32,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto_legacy/bbv/src/bbv/Nomega.v (from ci-fiat_crypto_legacy) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-notation-overridden"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto_legacy/src"" ""Crypto"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_c"
14612,mrhaandi,2021-07-07 22:14:19,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/rewriter/src/Rewriter/Util/Decidable.v (from ci-rewriter) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+deprecated-hint-constr,+fragile-hint-constr,+variable-collision,+unexpected-implicit-declarat"
14612,mrhaandi,2021-07-07 22:14:20,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/metacoq/template-coq/theories/utils/MCList.v (from ci-metacoq) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/metacoq/template-coq/theories"" ""MetaCoq.Template"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failin"
14612,mrhaandi,2021-07-07 22:14:38,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/ext_lib/theories/Data/String.v (from ci-quickchick) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/ext_lib/theories"" ""ExtLib"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib"
14612,mrhaandi,2021-07-07 22:14:41,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil/Z/ZLib.v (from ci-bedrock2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil"" ""coqutil"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_ins"
14612,mrhaandi,2021-07-07 22:14:44,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Common.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parser"
14612,mrhaandi,2021-07-07 22:14:50,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/color/Util/List/ListUtil.v (from ci-color) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/color"" ""CoLoR"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Bignums"" ""Bignums"" """
14612,mrhaandi,2021-07-07 22:16:15,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/struct_tact/theories/ListUtil.v (from ci-verdi_raft) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/struct_tact/theories"" ""StructTact"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/use"
14612,mrhaandi,2021-07-07 22:16:16,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/math_classes/misc/util.v (from ci-math_classes) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/math_classes"" ""MathClasses"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Bi"
14612,mrhaandi,2021-07-07 22:20:26,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/sf/plf-current/Hoare.v (from ci-sf) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/sf/plf-current"" ""PLF"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-top"
14612,mrhaandi,2021-07-07 22:23:47,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/vst/compcert/lib/Coqlib.v (from ci-vst) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/compcert/lib"" ""compcert.lib"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/compcert/common"" ""compcert.common"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/vst/compcert/x"
14612,mrhaandi,2021-07-07 22:24:48,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/compcert/lib/Coqlib.v (from ci-compcert) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-undeclared-scope"" ""-w"" ""-omega-is-deprecated"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/lib"" ""compcert.lib"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/common"" ""compcert.common"" ""-R"" ""/github/worksp"
14612,mrhaandi,2021-07-07 22:28:18,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/external/stdpp/theories/option.v (from ci-perennial) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-ssr-search-moved"" ""-w"" ""-deprecated-hint-without-locality"" ""-w"" ""-deprecated-instance-without-locality"" ""-w"" ""-deprecated-hint-rewrite-without-locality"" ""-w"" ""+deprecated-tactic-notation"" ""-w"" ""-notation-overridden,-redundant-c"
14612,mrhaandi,2021-07-07 22:32:56,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/stdpp/theories/option.v (from ci-iris) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-hint-rewrite-without-locality"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/stdpp/theories"" ""stdpp"" ""-Q"" ""/github/workspace/builds/coq/coq-failing"
14612,mrhaandi,2021-07-07 23:17:38,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/geocoq/Elements/OriginalProofs/lemma_sameside2.v (from ci-geocoq) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/geocoq"" ""GeoCoq"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-con"
14612,mrhaandi,2021-07-07 23:21:19,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/tlc/src/LibMap.v (from ci-tlc) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-implicit-core-hint-db,-omega-is-deprecated"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/tlc/src"" ""TLC"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq"
14612,mrhaandi,2021-07-07 23:47:23,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/cross_crypto/fcf/src/FCF/RndInList.v (from ci-cross_crypto) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/cross_crypto/fcf/src/FCF"" ""FCF"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/cross_crypto/fcf/src/HMAC"" ""HMAC"" ""-Q"" ""/git"
14612,mrhaandi,2021-07-08 10:32:12,mrhaandi,Thanks @JasonGross for the minimization comment.\nI now inspected a lot of regressions and have found the following illustrating examples:\n(* eager congruence : success\n   lazy congruence : failure *)\nGoal not (true = false).\nProof. congruence. Qed. \n\nAxiom P : Prop.\n\n(* eager congruence : success\n   lazy congruence : failure *)\nGoal (not P) -> not P.\nProof. congruence. Qed.\n\nDefinition Q := True -> P.\n\n(* eager congruence : failure\n   lazy congruence : success *)\nGoal Q -> Q.\nProof. congruence. 
14612,mrhaandi,2021-07-09 10:03:21,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14612,mrhaandi,2021-07-09 11:08:23,coqbot-app,"Hey, I have detected that there were CI failures at commit 9b65eaf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit b0e85d7 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bbv, ci-color, ci-compcert, ci-cross_crypto, ci-fiat_crypto, ci-fiat_crypto_legacy, ci-fiat_parsers, ci-iris, ci-metacoq, ci-pe"
14612,mrhaandi,2021-07-09 12:08:38,mrhaandi,"I implemented the proposed change from #14612 (comment)\nThis fixes a good chunk of regressions.\nThe minimization has shown that congruence is often used for goals such as\nDefinition Symmetric {X : Type} (r : X -> X -> Prop) :=\n  forall x y, r x y -> r y x.\nGoal Symmetric (fun n m : nat => n = m).\nProof. congruence. Qed.\nThis requires eager introduction. Since this is a crucial use-case, I added the condition that introduction/unfolding can be performed eagerly, if the goal is convertible to fora"
14612,mrhaandi,2021-07-09 12:31:50,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14612,mrhaandi,2021-07-09 12:34:43,Zimmi48,It would be worth adding test cases to the test-suite for the behavior you want to preserve.
14612,mrhaandi,2021-07-09 12:46:15,mrhaandi,"It would be worth adding test cases to the test-suite for the behavior you want to preserve.\n\nYes. Strangely, for me currently testing via make test-suite is broken reporting Package coq-core.toplevel not found.\nAlternatively, make -f Makefile.dune test-suite exits with Done: 25829/25832 /bin/sh: 1: cannot create success/section_poly.v.log: Permission denied."
14612,mrhaandi,2021-07-09 12:51:06,Zimmi48,"OK, the first one is #14624 I guess. The second one I don't know. Have you tried make -C test-suite?"
14612,mrhaandi,2021-07-09 13:09:59,SkySkimmer,"Have you tried make -C test-suite?\n\nThat will just get #14624 again\nBut the unit test error doesn't matter, just ignore it."
14612,mrhaandi,2021-07-09 13:34:31,JasonGross,"Should we ask the bot to minimize some of the failures again, or are these exactly the ones that you expect?"
14612,mrhaandi,2021-07-09 13:37:57,coqbot-app,"Hey, I have detected that there were CI failures at commit 6200dcb without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit b0e85d7 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bbv, ci-color, ci-compcert, ci-fiat_crypto, ci-fiat_crypto_legacy, ci-metacoq, ci-verdi_raft, ci-vst."
14612,mrhaandi,2021-07-09 13:38:42,mrhaandi,"Should we ask the bot to minimize some of the failures again, or are these exactly the ones that you expect?\n\nNo need right now. There are still issues that I fully understand (the not P trick is not strong enough, if a custom definition of not is used). A stronger auxiliary lemma is required to make ci happier."
14612,mrhaandi,2021-07-12 15:54:03,coqbot-app,"Hey, I have detected that there were CI failures at commit a7b8a6c without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 225339d succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-color."
14612,mrhaandi,2021-07-12 15:55:54,mrhaandi,"Alright, the current bug fix only has one ci issue with ci-color. Now I would like to @coqbot ci minimize"
14612,mrhaandi,2021-07-12 15:56:00,coqbot-app,I have initiated minimization at commit a7b8a6c for the suggested target ci-color as requested.
14612,mrhaandi,2021-07-12 21:12:41,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/color/HORPO/Horpo.v (from ci-color) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/color"" ""CoLoR"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_ins"
14612,mrhaandi,2021-07-13 02:29:40,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/color/HORPO/Horpo.v (from ci-color) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/color"" ""CoLoR"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_ins"
14612,mrhaandi,2021-07-13 04:09:20,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/color/HORPO/Horpo.v (from ci-color) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/color"" ""CoLoR"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Bignums"" ""Bignums"" ""-Q"" ""/g"
14612,mrhaandi,2021-07-13 06:30:55,mrhaandi,"Unfortunately, minimization shows that there are two somewhat mutually exclusive goals which congruence should be solving:\n\nEagerly unfold and introduce (current congruence, used in ci-color)\n\nRequire Import Morphisms Program.\n\nGoal forall (r : nat -> nat -> Prop), Proper (eq ==> eq ==> impl) r.\nProof. congruence. Qed.\n\nIntroduce, do not unfold (#13778)\n\nAxiom p : nat -> Prop.\nDefinition q n := True -> p n.\nGoal forall n m, n = m -> q n -> q m.\nProof. Fail congruence. Admitted.\nMy current bug fi"
14612,mrhaandi,2021-07-13 07:58:57,ppedrot,"I think that you should go for a compatibility flag that switches between both behaviours, and deprecate it in the next version."
14612,mrhaandi,2021-07-13 08:56:36,Zimmi48,"If the only backward-compatibility issues can be solved by adding repeat intro; before congruence, I wonder if a compatibility flag is even necessary..."
14612,mrhaandi,2021-07-14 14:16:14,mrhaandi,"I think that you should go for a compatibility flag that switches between both behaviours, and deprecate it in the next version.\n\nI now consider to redesign the bug fix to be behind an option e.g. ""Congruence Symbolic"" that does no unfolding whatsoever (also not in hypotheses) such that turning on the option also fixes #13189.\nNow turning on the option would make congruence fail in a lot of common use-cases for congruence, but enable very fast symbolic congruence arguments."
14612,mrhaandi,2021-07-15 09:28:34,mrhaandi,"Now turning on the option would make congruence fail in a lot of common use-cases for congruence, but enable very fast symbolic congruence arguments.\n\nSee PR #14657"
14612,mrhaandi,2021-07-21 11:21:24,ppedrot,"IIUC this PR was superseded by #14657, and the (optional) introduction of a flag is deferred to another PR. So we can close this one in the meantime."
14671,herbelin,2021-07-17 19:26:41,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14671,herbelin,2021-07-17 21:27:18,coqbot-app,"Hey, I have detected that there were CI failures at commit adf6e49 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 5fd802a succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-fiat_crypto_legacy."
14671,herbelin,2021-07-18 01:15:23,JasonGross,@coqbot CI minimize
14671,herbelin,2021-07-18 01:15:30,coqbot-app,"I have initiated minimization at commit adf6e49 for the suggested targets ci-bedrock2, ci-fiat_crypto_legacy as requested."
14671,herbelin,2021-07-18 01:22:03,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto_legacy/src/Specific/X25519/C32/freeze.v (from ci-fiat_crypto_legacy) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.ZArith.BinIntDef.\nRe"
14671,herbelin,2021-07-18 06:32:22,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/bedrock2/src/bedrock2Examples/lightbulb.v (from ci-bedrock2) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 45KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/"
14671,herbelin,2021-07-18 06:42:11,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/bedrock2/src/bedrock2Examples/lightbulb.v (from ci-bedrock2) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 47KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/bedrock2/src/bedrock2"" ""bedrock2"" ""-Q"" ""/github"
14671,herbelin,2021-07-19 10:32:43,ppedrot,Bench: https://gitlab.com/coq/coq/-/jobs/1432883247.
14252,jfehrle,2021-05-05 14:21:00,MSoegtropIMC,"@jfehrle : I will compile your PR branch and do some VST analysis with it. I could also send you a simple VST test case, so that you can step through VST's Ltac code - which is huge and complex. It should be a good play ground to test an Ltac debugger."
14252,jfehrle,2021-05-05 15:41:18,jfehrle,"Thanks, @MSoegtropIMC .  Probably better if you wait a few days so I can write up user documentation.  There are a few limitations you should know about.\nAmong other things, I'll be interested to understand how well the debugger works with very large goals--does it perform well and is the user able to follow what's happening?  It may be helpful to have ways to limit what is shown.  Or to show proof diffs (the main question being figuring out what old state to compare with the current state).\nI t"
14252,jfehrle,2021-05-06 12:23:21,Alizter,"Whenever I run this version of coqide, it says ""coq is computing"" and hangs. The console is spitting out this error:\n[pid 20411] Unexpected XML message\n[pid 20411] Expected XML node: int\n[pid 20411] XML tree received: <pair>\n  <state_id val=""1""/>\n  <bool val=""true""/>\n</pair>\n\nSomething has gone wrong it seems.\nEven something like:\nSearch ""hello"".\nhangs.\nHere is the debug output for reference:\n[DEBUG] Begin command processing\n[DEBUG] Start eval_call Add ((""Search \""hello\""."",-1),(1,true))\n[DEBUG]"
14252,jfehrle,2021-05-06 21:00:00,jfehrle,"@Alizter Let's make that a separate discussion.  Please submit a new issue and put ""@jfehrle"" in the description so I see it.    In the issue, tell me what platform you're on and exact steps to reproduce.  Please run coqIDE with the -debug option and post the output in the issue.  I may not respond immediately, though."
14252,jfehrle,2021-05-10 01:45:10,jfehrle,"Rebased to include #14220 from master.  I made one change for alpha testing.  @MSoegtropIMC, please give this a try.  FWIW, I expect to push updates over the next several days."
14252,jfehrle,2021-05-10 08:10:44,MSoegtropIMC,"@jfehrle : I working on something else the first half of this week, but will have plenty of opportunity to test this later this and next week."
14252,jfehrle,2021-05-14 20:36:55,JasonGross,I should not be able to set breakpoints in the middle of Proof.
14252,jfehrle,2021-05-14 20:40:39,JasonGross,"If I ""step in"" to a tactic whose definition is in another file, the buffer switches to that file.  After that, ""step in"" does nothing.  This is an unusably painful mode of interaction, because it means I have to switch back to the main file for every single step.  Instead, I should be able to hold down F10 and watch the debugger take steps."
14252,jfehrle,2021-05-14 21:24:58,JasonGross,"Step in sometimes brings me to the top of a different file, not highlighting any tactic code.  This seems wrong?  Maybe it corresponds to a location with a filename but no position information?"
14252,jfehrle,2021-05-14 21:28:28,JasonGross,Am I supposed to get enormous Evaluated term messages in the debugger?
14252,jfehrle,2021-05-14 21:29:39,JasonGross,"Also, interaction is extremely sluggish while the debugger is running..."
14252,jfehrle,2021-05-14 21:30:33,JasonGross,And CoqIDE is using 2 GB of RAM...
14252,jfehrle,2021-05-14 21:47:16,jfehrle,@JasonGross would you put your usage comments in new issue(s)?
14252,jfehrle,2021-05-14 22:09:21,JasonGross,"Reported as #14325, #14326, #14327.  #14327 is high priority; the debugger is basically unusable until this is fixed.  #14325 is next-highest priority; ""step into"" is basically unusable until this is fixed, but the ""set a breakpoint, continue"" mode is usable.  #14326 is low priority.  The behavior is incorrect and might confuse newcomers, and I find it ever-so-slightly inconvenient, but it doesn't really impact my ability to use the debugger."
14252,jfehrle,2021-05-15 21:45:48,coqbot-app,"Hey, I have detected that there were CI failures at commit 78d6e5e without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit fd50269 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me and say ci minimize, I will minimize the following targets: ci-hott."
14252,jfehrle,2021-05-15 23:03:17,coqbot-app,"Hey, I have detected that there were CI failures at commit 445b385 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit fd50269 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me and say ci minimize, I will minimize the following targets: ci-hott."
14252,jfehrle,2021-05-15 23:18:53,jfehrle,@coqbot: ci minimize
14252,jfehrle,2021-05-16 18:34:34,coqbot-app,"Hey @jfehrle, you cannot run CI minimization on issues that are not pull requests."
14252,jfehrle,2021-05-16 18:43:43,Zimmi48,Sorry about these bugs 😖
14252,jfehrle,2021-05-16 22:27:25,jfehrle,@ejgallego Would you complete your initial review of this sometime soon if you haven't already done so?  I'd like to make a preliminary version available in 8.14--I think it will be useful even if it is a bit incomplete or buggy.  It's a timesaver to get the full list of initial comments early so they can be addressed in parallel and in priority order rather than serially.  (Points requiring nontrivial discussions probably should still be done serially to avoid confusion.)  I suggest focusing on
14252,jfehrle,2021-05-17 06:52:35,ppedrot,Will do.
14252,jfehrle,2021-05-17 07:02:27,jfehrle,Repeating since I misspelled @ejgallego the first time.\n@ejgallego Would you complete your initial review of this sometime soon if you haven't already done so?  I'd like to make a preliminary version available in 8.14--I think it will be useful even if it is a bit incomplete or buggy.  It's a timesaver to get the full list of initial comments early so they can be addressed in parallel and in priority order rather than serially.  (Points requiring nontrivial discussions probably should still be d
14252,jfehrle,2021-05-17 14:19:52,ejgallego,@ejgallego Would you complete your initial review of this sometime soon if you haven't already done so?\n\nI'll wait for this PR not to include the location rewriting change.
14252,jfehrle,2021-05-18 15:41:28,cpitclaudel,"Does this extend the existing Ltac debugger, or is it completely separate?  (Do we need a new UI in Emacs, or can we use the existing one?)"
14252,jfehrle,2021-05-18 15:46:35,ejgallego,"Does this extend the existing Ltac debugger, or is it completely separate? (Do we need a new UI in Emacs, or can we use the existing one?)\n\nChanges relevant to the topleve are already in master so you can try them, I understand this PR shouldn't change much for that case.\nInternally, we made communication with the debugger into a (kinda rough for the moment) protocol (see debugHook.mli) , but the interface coqtop exposes should not have been changed; however it is a bit more easy for other backe"
14252,jfehrle,2021-05-18 16:36:27,jfehrle,There is a single debugger on the Coq side.  This PR adds new features to it such as the ability to set and stop at breakpoints and step in/step over/step out/continue operations.  I've not added new commands to the coqtop debugger to support these because a human user of coqtop won't want to set breakpoints by giving the character offset and the filename.  Technically it would not be difficult to add such commands to support PG.  The changes to xml-protocol.md describe the new messages that you
14252,jfehrle,2021-05-18 16:39:17,jfehrle,PS you may also want to skim the user documentation.  See #14281.
14252,jfehrle,2021-05-21 04:47:05,jfehrle,@JasonGross This version works for let := and functors.  I made many but not all of the messages appear only if the debugger stops at the next step.
14252,jfehrle,2021-05-29 03:18:27,jfehrle,@JasonGross I just pushed an updated version.  There were still some debugging messages that were being displayed unconditionally.  Now all of them are displayed only if you stop at the next step.  I also made the handling of large messages more efficient.  Let me know your further thoughts and wishes.
14252,jfehrle,2021-05-29 16:24:13,jfehrle,"@MSoegtropIMC I working on something else the first half of this week, but will have plenty of opportunity to test this later this and next week.\n\nDid you get to try it?  @JasonGross found a number of issues, almost all of which are fixed.  I'll be interested to hear from you whether it works for Ltac2 (and Mtac?) as well as your general comments and questions."
14252,jfehrle,2021-06-02 19:06:59,ejgallego,"I had a quick look at the Coq parts [except tactic_debug which I leave to experts on ltac] and I think overall this looks fine, tho there are some hacks that we may need to remove, but should be easy.\nAll this modulo the dependency on #14354 which needs some more work."
14252,jfehrle,2021-07-07 16:19:10,jfehrle,"@ejgallego Can we get this reviewed and merged sometime very soon?  There have been no comments for more than a month.  FWIW, the third debugger installment is almost ready and I'm starting to plan the fourth installment."
14252,jfehrle,2021-08-25 00:00:28,jfehrle,"@ppedrot I hope you can review the next chunk of the debugger  sometime in the near future.  #14644 (+2,702 −502 lines) incorporates this PR (+1,612 −324 lines) and has much additional functionality,  including a good number of fixes relative to this PR.  Do you want to review these 2 PRs separately or review everything at once in #14644?  I'd prefer the latter if you're willing.\n#14644 still needs a bug fix in order to pass a few tests and my own review to fix any remaining nits I find."
14252,jfehrle,2021-09-10 01:24:49,jfehrle,Changes incorporated into #14644.
14725,herbelin,2021-07-30 18:21:20,coqbot-app,"Hey, I have detected that there were CI failures at commit 8828e95 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 80fb906 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-relation_algebra."
14725,herbelin,2021-08-04 13:58:38,SkySkimmer,"This PR/commit title is not very grammatical, I cannot parse it."
14725,herbelin,2021-08-05 10:43:17,herbelin,"This PR/commit title is not very grammatical, I cannot parse it.\n\nI intended something like: ""Faire en sorte que la définition locale do_subrelation n'échappe pas la portée du lieur qui l'introduit"".\nIt would probably be more intuitive to simply not add this local definition in the first place but I don't understand well its purpose and what could be an alternative implementation."
14725,herbelin,2021-08-05 10:44:30,SkySkimmer,"""Ensure that the internal do_subrelation local definition does not escape its scope"" should work then"
14725,herbelin,2021-08-05 10:55:19,herbelin,"""Ensure that the internal do_subrelation local definition does not escape its scope"" should work then\n\nTo be honest, ""ensure"" is maybe a bit too strong. I don't have a general overview of this code enough to claim that all occurrences are eventually substituted. For instance, some remain maybe in conversion problems or in other data used by the the tactic. Getting rid of the do_subrelation ""hack"" in the first place would probably be more satisfactory."
14725,herbelin,2021-08-09 10:06:14,ppedrot,Bench just in case: https://gitlab.com/coq/coq/-/jobs/1476050474\n┌─────────────────────────────┬─────────────────────────┬───────────────────────────────────────┬───────────────────────────────────────┬─────────────────────────┬─────────────────┐\n│                             │      user time [s]      │              CPU cycles               │           CPU instructions            │  max resident mem [KB]  │   mem faults    │\n│                             │                         │              
14725,herbelin,2021-08-13 09:59:10,ppedrot,"I don't know whether the verdi slowdown is real, we should probably relaunch a bench on this dev only..."
14725,herbelin,2021-08-15 13:03:46,ppedrot,Rerunning: https://gitlab.com/coq/coq/-/jobs/1504759418
14725,herbelin,2021-08-16 09:54:55,ppedrot,┌─────────────────────────────┬─────────────────────────┬───────────────────────────────────────┬───────────────────────────────────────┬─────────────────────────┬─────────────────┐\n│                             │      user time [s]      │              CPU cycles               │           CPU instructions            │  max resident mem [KB]  │   mem faults    │\n│                             │                         │                                       │                                       
14725,herbelin,2021-08-16 16:52:43,herbelin,"So it does look like verdi is slowed down by this PR.\n\nI don't see what else than the replace_vars can be in cause. But this replace_vars is necessary to prevent the scope escaping.\nAnyway, #14673 does not need it anymore. So, maybe can we wait for @mattam82's feedback. Maybe would there be after all a more principled way to deal with the Morphisms.do_subrelation/CMorphisms.do_subrelation distinction."
14725,herbelin,2021-08-27 16:21:38,ppedrot,@mattam82 ping. If you're fine with the current state of the PR I can merge it immediately.
14725,herbelin,2021-08-31 11:18:52,ppedrot,"I had another look at this PR and I'm now wondering why it's done this way.\nEven without considering the fix, do_subrelation could be the same for Prop / Type rewriting. It's just a marker that tracks the resolution phase of the rewriting algorithm. There are a few more like that, e.g. normalization_done.\nSecond, the only place where the variable is reachable is the morph evar found in this snippet.\n    let env' =\n      let dosub, appsub =\n        if b then PropGlobal.do_subrelation, PropGlobal."
14725,herbelin,2021-08-31 11:25:55,ppedrot,@herbelin do you have a test-case for the bug this PR is fixing?
14725,herbelin,2021-08-31 18:03:26,herbelin,"@herbelin do you have a test-case for the bug this PR is fixing?\n\nNo, I observed the scope escaping while experimenting with #14673 but I finally made that #14673 does not depend on this PR."
14725,herbelin,2021-09-06 09:16:34,ppedrot,"Here is a hackish test.\nFrom Coq Require Import Setoid Morphisms.\n\nAxiom T : Type.\nAxiom Teq : relation T.\n#[local] Declare Instance Teq_Equivalence : Equivalence Teq.\n\nAxiom P : T -> Prop.\nAxiom P_Proper : Proper (Teq ==> Basics.flip Basics.impl) P.\n\nLtac manual_P_proper :=\nmatch goal with\n| [ H : apply_subrelation |- Proper (Teq ==> Basics.flip Basics.impl) P ] =>\n  case H; apply P_Proper\nend.\n\n#[local] Hint Extern 1 => manual_P_proper : typeclass_instances.\n\nLemma foo : forall x y : T, Teq x "
14725,herbelin,2021-09-07 10:11:12,ppedrot,"@herbelin see #14850 for a more local fix, which is likely to be more efficient as well."
991,mattam82,2017-08-22 17:01:44,silene,"apply was allowing itself to produce dependent subgoals sometimes\n\nLooking at the changes to the standard library, it seems that the old apply allowed evars to be refined, while the new apply does not. I am not sure which of the two behaviors I prefer. The new one is simpler to explain (apply errors out if a new evar is created) but it could also be argued that the new evar is not really new (no universal quantifier was actually substituted with a fresh evar) and thus the old behavior was more u"
991,mattam82,2017-08-22 20:58:31,silene,"no universal quantifier was actually substituted with a fresh evar\n\nForget what I said. These are not refined evars; these are fresh evars used in universal quantifications. So, whichever way I look at it, there is no sane reason for the old behavior and the behavior you propose is akin to a bugfix."
991,mattam82,2017-08-23 09:54:40,mattam82,"Indeed, that's the new spec (barring bugs I might have introduced). The only new evars that are allowed are descendants of previous evars due to clearing/prunning of some of the evar's variables due to dependencies. This follows the same principle as for goals: if a tactic applied to goal1 forces goal2 to not depend on some variables, goal2 stays a goal and is not shelved."
991,mattam82,2018-10-19 15:59:19,mattam82,"Just rebased on master, waiting for #8741 and functional flags to continue."
991,mattam82,2019-01-02 15:55:37,SkySkimmer,Dependency merged some time ago.
991,mattam82,2019-01-02 23:45:53,mattam82,It still needs #7819 which has been lingering for a while
991,mattam82,2019-03-12 11:31:39,ejgallego,The dependency has been merged so this can be rebased now.
991,mattam82,2019-05-23 13:20:17,maximedenes,I'll try to rebase this now.
991,mattam82,2019-05-23 21:29:48,maximedenes,@mattam82 did you disallow edits from maintainers? It seems I can't push my rebase.
991,mattam82,2019-05-23 21:38:53,SkySkimmer,I can push fine
991,mattam82,2019-05-23 21:39:44,SkySkimmer,"What git interface are you using, what are you telling it to do and what is it telling you in response?"
991,mattam82,2019-05-23 21:53:17,maximedenes,"I can push fine\n\nAh yes, the address of my remote was incorrect. Thanks for testing."
991,mattam82,2020-09-02 10:53:03,maximedenes,"Alright, since #7825 is slowly converging, let's go for a rebase!"
991,mattam82,2020-09-04 08:10:26,maximedenes,"@mattam82 rebased, unfortunately it breaks on a file that was added to stdlib after the creation of this PR."
991,mattam82,2020-09-04 08:16:46,mattam82,The HoTT failure looks surprising. Is it a failure of typeclass resolution?
991,mattam82,2020-09-04 12:09:28,SkySkimmer,"Current compatibility break in HexadecimalFacts looks like\nDefinition left := list .\nDefinition right := list.\n\nDefinition bla T : left T := nil.\n\nLemma foo : right nat.\nProof.\n  simple apply bla.\nQed.\nmaster: success\nPR: Unable to unify ""left ?T"" with ""right nat""."
991,mattam82,2020-09-14 08:36:54,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
991,mattam82,2020-09-17 08:02:35,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
991,mattam82,2020-09-17 17:10:36,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
991,mattam82,2020-09-18 00:33:31,JasonGross,"Here's a minimized example of the bbv failure which can be added to the standard library:\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/home/runner/work/run-coq-bug-minimizer/run-coq-bug-minimizer/cwd"" ""Top"" ""-Q"" ""/home/runner/work/run-coq-bug-minimizer/run-coq-bug-minimizer/builds/coq/coq-failing/_build_ci/bbv/src/bbv"" ""bbv"" ""-top"" ""Word"") -*- *)\n(* File reduced by coq-bug-finder from original input, then from 7624 lines to 91 lines, then from 688 lines to 115 lines, then from 129 lines to "
991,mattam82,2020-09-18 06:19:07,maximedenes,"@JasonGross Thanks, that's useful! However, it seems that lia succeeds here, and since omega is deprecated... I guess the ""right"" fix would be to port bbv to lia."
991,mattam82,2020-09-21 16:12:59,maximedenes,"@mattam82 here's a reduced failure extracted from a regression in Flocq:\nDefinition F (n : nat) := match n with 0 => 1 | _ => 2 end.\nAxiom foo : forall n m : nat, ((F n) <= m) -> n <= m.\n\nGoal forall v, 1 <= v -> 0 <= v.\nintros v H.\napply foo with (1 := H).\nworks in master, but in this branch it says\nError:\nIn environment\nv : nat\nH : 1 <= v\nThe term ""H"" has type ""1 <= v"" while it is expected to have type\n ""F ?n <= ?m""."
991,mattam82,2020-09-21 16:14:08,maximedenes,"I guess this is again because we don't unify with the conclusion early enough, but I'm not sure what exactly should be done."
991,mattam82,2020-09-21 18:00:28,herbelin,"I guess this is again because we don't unify with the conclusion early enough, but I'm not sure what exactly should be done.\n\nAnticipating on @mattam82's answer, the point is that with bindings are able (for Meta) to postpone the unification of the actual and expected type of the argument (so as e.g. introduce coercions).\nBut even if insertion of coercions is abandoned in the unifall move (it would require dedicated ""coercion"" evars I believe), the problem falls in one of the limitation of the c"
991,mattam82,2020-09-21 18:07:31,maximedenes,"But even if insertion of coercions is abandoned in the unifall move\n\nWe added (some of) it back by postponing the instantiation of holes of not-yet-known type.\n\nwith bindings are able (for Meta) to postpone the unification of the actual and expected type of the argument (so as e.g. introduce coercions).\n\nOn master, when is this unification postponed? Maybe we could use the same criterion."
991,mattam82,2020-09-21 20:36:53,herbelin,"On master, when is this unification postponed? Maybe we could use the same criterion.\n\nIn Clenv.clenv_unify_binding_type, there is a Meta flag TypeNotProcessed to postpone this unification."
991,mattam82,2020-09-22 07:58:53,gares,"I guess this is again because we don't unify with the conclusion early enough, but I'm not sure what exactly should be done.\n\nI'm a bit puzzled by the example. To me apply A with B is a way to help giving a type to A so that it unifies with the goal. It is not a shortcut for apply A; apply B (which here would have worked just fine).\nIs the minimization right?"
991,mattam82,2020-09-22 09:19:40,maximedenes,To me apply A with B is a way to help giving a type to A so that it unifies with the goal.\n\nI'm not sure exactly what you mean by this. apply foo with (n := bar) instantiates the n-th non-dependent premise in the type of foo by bar. Isn't it the way it is used in the example?
991,mattam82,2020-09-22 12:54:33,gares,"It is the intent of that line which is weird to me.\nInstantiating the first hyp with H is what triggers an hard problem. Instantiating the first hyp with H is not helping apply. To me you add a with n := t in order to ease the job of apply, it is a sort of extra hint. Sure, nobody prevents you from using with in other occasions, like this one. It just does not seem a common use case for apply with. I mean, one can always ask Coq to solve a unification problem that is hard. Here it seems a bit gr"
991,mattam82,2020-09-22 13:26:05,silene,"Since I am the author of the line, I feel compelled to reply. This kind of script is certainly a common use case, as far as I am concerned. Whenever apply foo. n: exact bar would succeed, I instead use apply foo with (n := bar)."
991,mattam82,2020-09-22 13:40:49,gares,"Even if Check (foo (n := bar)) fails? (or works by ""miracle"")?\nMy understanding of the problem minimized here is that, in order to make (foo (n := bar) : goal) typecheck one has to divine that (foo ?n : goal) (n := bar) is actually the right order in which things have to be done.\nOf course a unification problem which is that hard can happen deep and be almost invisible to the user. But in this minimized example it is immediate to see that by passing with (n := bar) you are looking for troubles. "
991,mattam82,2020-09-22 14:02:21,silene,"Even if Check (foo (n := bar)) fails? (or works by ""miracle"")?\n\nThat is not a good comparison. The correct one would be Check (foo (n := bar) : goal). Also, I would not call it a miracle, since Coq has all the information needed. Sure, I understand that Coq will fail to typecheck this term depending on the order of unification. So, I am perfectly fine with modifying my script. But there is nothing artificial about it."
991,mattam82,2020-09-22 17:29:03,herbelin,"Coming back to my proposal to add a way to solve equations of the form match ?n with ... end == rigid-term, if someone is interested in contributing, please tell."
991,mattam82,2020-09-22 18:58:40,maximedenes,"Coming back to my proposal to add a way to solve equations of the form match ?n with ... end == rigid-term, if someone is interested in contributing, please tell.\n\nI personally think it is totally unreasonable to add complexity to unification until the current implementation is documented."
991,mattam82,2020-09-22 19:04:41,herbelin,"On the other side, working on unification is an incent to document it..."
991,mattam82,2020-09-22 19:11:08,herbelin,"To continue on the question of documenting unification, I had started a branch with some documention but it requires some long term investment which I have difficulties to find. Working as part of an interaction between several people would be easier for me."
991,mattam82,2020-09-22 19:15:11,maximedenes,"I had started a branch with some documention but it requires some long term investment\n\nOh, I wasn't aware of that. Do you have a pointer? Given the critical need for documentation of the code, I think we should be very flexible on documentation PRs, i.e. accepting partial documentation, etc.\nSo in a sense, don't hesitate to publish the documentation work even if not finished. An incomplete documentation is always better than no documentation. Also, I'll be happy to give some feedback in some pa"
991,mattam82,2020-09-22 19:59:23,gares,"In its full generality, inverting a match is very hard, and in not possible since a match does not necessarily describe an injective function (just think at fibonacci 0 and fibonacci 1, the first example that comes to mind).\nIMO, this is where unification hints like mechanisms shine, they let the user add rules to unification which helps her development. If you stay at the purely abstract level of ""inverting a match"" then it has to be an heuristic, it works for you but may not work for me. But i"
991,mattam82,2020-09-22 20:15:12,herbelin,"Oh, I wasn't aware of that. Do you have a pointer? Given the critical need for documentation of the code, I think we should be very flexible on documentation PRs, i.e. accepting partial documentation, etc.\n\n\nSo in a sense, don't hesitate to publish the documentation work even if not finished. An incomplete documentation is always better than no documentation. Also, I'll be happy to give some feedback in some parts seem unclear to me.\n\nYou can e.g. look at f249320 (in branch trunk+structuration-u"
991,mattam82,2020-09-22 20:21:40,herbelin,"@gares: yes, ""unification hints"" are very interesting rules to guide unification. Here, however, I was not talking about a heuristic but about reversible progress, collecting the solutions as ""candidates"".\nI don't know what you call ""stock"" unification, but if you mean the reversible part of unification (i.e. the part which does not lose solutions), this is exactly what I'm talking about."
991,mattam82,2020-09-30 13:53:14,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
991,mattam82,2020-09-30 19:29:07,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
991,mattam82,2020-10-01 09:03:24,maximedenes,"@mattam82 quick question: the behavior of eapply seems to have significantly changed w.r.t. typeclasses:\nClass C := {}.\nInstance foo : C := {}.\n\nAxiom bar : forall x : C, x = x -> True.\n\nGoal True.\neapply bar.\nOn master:\n============================\n  foo = foo\nOn this branch:\n============================\n  ?x = ?x\nAre we missing a call to TC resolution somewhere?"
991,mattam82,2020-10-01 09:05:30,maximedenes,"The behavior on master is strange, though, because apply bar complains that it cannot find an instance for x, but eapply bar finds foo..."
991,mattam82,2020-10-06 20:22:50,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
991,mattam82,2020-10-07 11:44:08,maximedenes,"Notes from latest session:\n\ntlc has a strange use of typeclasses on non-implicit lemma arguments, to discuss with Arthur\nbignums now goes through properly\nargosy shows an exact step which has become more powerful in eauto, to investigate more with Matthieu\nbbv should be fixed by mit-plv/bbv#32\nbedrock2 shows an anomaly in flex_kind_of_term (reduced to a call to rewrite_strat)\ncompcert: lots of apply -> eapply, strange error in backend/Unusedglobproof.v"
991,mattam82,2020-10-07 12:05:15,mattam82,And equations should be fixable except for a remaining bug in auto
991,mattam82,2020-10-13 10:30:11,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
991,mattam82,2020-10-16 15:01:04,maximedenes,"Notes, todo:\n\n try to call unify directly from e_give_exact, instead of going through heuristics\n add a flag to disable Miller pattern unification, and use the flag in simple apply (and eauto)\n put with_ho condition outside of second_order_matching\n fix first_order stack construction"
991,mattam82,2020-10-16 21:23:48,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14384,ana-borges,2021-05-28 16:30:07,coqbot-app,"Hey, I have detected that there were CI failures at commit b1022f6 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 4cd4a0b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14384,ana-borges,2021-06-02 06:54:23,herbelin,@proux01: would you like to have a look at this PR which seems otherwise rather straightforward to the outsider I'am? (cc @maximedenes too)
14384,ana-borges,2021-06-03 02:12:58,ana-borges,"The changes to Int63.v seem wrong now that Uint63.v exists, don't they?\n\nYeah. I wasn't sure which PR would end up being merged first. I'll update this one as soon as #13895 is merged."
14384,ana-borges,2021-06-03 15:00:57,ana-borges,"Could you rebase over #13895 so that once it is merged, we can proceed easily with this one?\n\nYep.\n\nI have no strong opinion about the _ <? _ <? _ notations. I would rather not add them since I view primitive integers as a type used for programs rather than proofs and programming languages usually don't provide such notations.\n\nIn principle I agree, but this was specifically requested by a friend who is trying Sint63 out. He wanted it for a tool that solves a goal by computing it for all x bound"
14384,ana-borges,2021-06-04 09:58:05,silene,"In principle I agree, but this was specifically requested by a friend who is trying Sint63 out. He wanted it for a tool that solves a goal by computing it for all x bounded by some constants. Thus the a <? x <? b notation.\n\nBut is that notation useful in the general case? For example, if I were to write 0 <=? f x <? 10, I would expect the value of f x to be computed only once. I would be annoyed if I had to remember that I need to write let y := f x in 0 <=? y <? 10."
14384,ana-borges,2021-06-04 15:37:08,ana-borges,"But is that notation useful in the general case? For example, if I were to write 0 <=? f x <? 10, I would expect the value of f x to be computed only once. I would be annoyed if I had to remember that I need to write let y := f x in 0 <=? y <? 10.\n\nFair. So your point is that adding the notation is misleading because it looks like it is doing more work than it is actually doing?"
14384,ana-borges,2021-06-04 15:56:15,silene,"So your point is that adding the notation is misleading because it looks like it is doing more work than it is actually doing?\n\nRight, as defined, it is misleading. But I have no opinion either way on the notation itself. So, if you feel the notation is worth having, you should back it up with an actual definition to avoid the issue, e.g.,\nDefinition ltltb (m n p : int63) := m <? n && n <? p.\nNotation ""m <? n <? p"" := (ltltb m n p)."
14384,ana-borges,2021-06-04 18:16:39,ana-borges,"So, if you feel the notation is worth having, you should back it up with an actual definition to avoid the issue\n\nThis is good at solving the problem you identified, but I don't fully like it as a solution either. It would mean that using lemmas about _ && _ could only happen once the definition was unfolded (unless I'm missing something?), which is annoying. Short of reproving all the && lemmas for these notations (which sounds like a bad idea), is there a way to have both features?"
14384,ana-borges,2021-06-04 18:42:40,silene,"is there a way to have both features?\n\nNone that I know of, unfortunately. Or rather, I know some, but they are so heavy that they are not worth it. For example, you can define a let_in function and prove that it is compatible with pointwise equality (and declare the corresponding Proper instance), so that you can use setoid_rewrite to rewrite && under the binder:\nDefinition let_in {T U} (v:T) (w:T -> U) := w v.\nNotation ""m <? n <? p"" := (let_in n (fun v => m <? v && v <? n))."
14384,ana-borges,2021-06-04 18:53:30,proux01,Maybe an alternative could be to use ssreflect's rewrite which tends to unfold automatically (haven't tested though).
14384,ana-borges,2021-06-05 11:44:49,ana-borges,"Maybe an alternative could be to use ssreflect's rewrite which tends to unfold automatically (haven't tested though).\n\nYes, this does work.\nAs someone who mostly uses ssr, I would be fine with this solution. But I just realized that the bool version of this notation is a mathcomp thing, and it doesn't otherwise appear in the stdlib. So I guess it doesn't make sense to add it, as it would be lonely."
14384,ana-borges,2021-06-06 17:02:50,silene,"Please rebase and squash, so that we have a clearer view of whether this is ready to merge."
14384,ana-borges,2021-06-07 08:42:42,silene,@coqbot merge now
13895,ana-borges,2021-03-03 17:32:32,ana-borges,"I tried compiling the stdlib before updating every mention of Int63 to check that the deprecation warnings were working as expected (*), and there's one problem I couldn't solve. It is illustrated by the following error in line 139 of .../Int63/Cyclic63.v:\nLocal Open Scope int63_scope.\n...\nLocal Open Scope Z_scope.\n...\nreplace (φ (i << 1 + 1)) with (φ i * 2 + 1).\n(* The term ""i << 1"" has type ""int"" while it is expected to have type ""Z"". *)\nAnd indeed Locate ""+"" shows that Z.add is the default in"
13895,ana-borges,2021-03-05 19:41:51,ana-borges,I conclude I definitely don't understand scopes.\n\nI managed to fix this in 895b65f with the help of @pi8027 (see zulip).
13895,ana-borges,2021-03-08 12:40:10,silene,"I wonder if it is really worth marking everything in Int63 as deprecated. For example, it feels strange to tell users to use Uint63.wB instead of Int63.wB, since the size of 63-bit integers is independent from their signedness. (That does not mean it should not be an only parsing notation, just that it should not be deprecated.)\nAlso, there are a bunch of lemmas that are completely to_Z-free, so it seems a bit counterproductive to move them to Uint63.v. I guess that would be where I draw the lin"
13895,ana-borges,2021-03-08 20:03:04,ana-borges,"Otherwise, users that need both logical and signed operations will have to import both Uint63 and Sint63\n\nRight now Sint63 exports Uint63, so the user would only need to import Sint63. I was imagining that, after enough time, the Int63.v file would be completely removed, and after even more time Sint63 would be renamed to Int63.\nWhat you have in mind seems to be to split the current Int63.v file in two (along the logical / arithmetical divide), deprecate only the arithmetical part and keep the t"
13895,ana-borges,2021-03-09 06:24:43,silene,"What you have in mind seems to be to split the current Int63.v file in two (along the logical / arithmetical divide), deprecate only the arithmetical part and keep the three files in perpetuity. Did I understand correctly?\n\nYes. It seems better to have all the sign-agnostic lemmas into their own file.\n\nRight now Sint63 exports Uint63, so the user would only need to import Sint63.\n\nI had missed that part of the patch. This does not feel quite right for the formalization of signed integers to expo"
13895,ana-borges,2021-04-22 20:05:39,ana-borges,"Hi @silene, sorry for the delay, I didn't have time to work on this for a while.\n\nIt seems better to have all the sign-agnostic lemmas into their own file.\n\nThis idea has grown on me. What do you suggest we do with max_int? It has different values in Uint63 and Sint63 but it is used in some logical operations:\nDefinition set_digit x p (b:bool) :=\n  if if 0 <=? p then p <? digits else false then\n    if b then x lor (1 << p)\n    else x land (max_int lxor (1 << p))\n  else x.\nMaybe define it in Int6"
13895,ana-borges,2021-04-22 20:07:29,ana-borges,"Some observations / questions:\n\nI can't deprecate modules. For example\n\nModule Int63ring := CyclicRing Int63Cyclic.\nis now\nModule Uint63ring := CyclicRing Uint63Cyclic.\nand anyone referring to the Int63 version will just be received with an ""unable to locate"" error.\n\nI got into this assuming I wouldn't touch the kernel, but there are plenty of things named *int63* there.\nI deprecated everything in ZifyInt63.v, but I understand it's an internal file, so perhaps this isn't necessary?\nIs there a st"
13895,ana-borges,2021-04-23 13:31:39,ana-borges,"This fails in flocq with\n\nFile ""./src/IEEE754/PrimFloat.v"", line 257, characters 2-12:\nError: The reference Int63.to_Z was not found in the current environment.\n\nIt happens because IEEE754/PrimFloat.v doesn't import Int63, which means that it doesn't get access to the deprecated warning. It imports Float instead, which used to import Int63 and now imports Uint63. So it makes sense that it fails, since there's no reference to Int63 in the chain anymore.\nThe only way I see of avoiding this kind of"
13895,ana-borges,2021-04-23 13:47:34,ana-borges,"Apparently deprecating everything in ZifyInt63.v is not really helpful. When importing it (instead of the new ZifyUint63), lia just stack overflows. Exporting ZifyUint63 in ZifyInt63 doesn't fix this, so I'm not sure I understand what the problem is. I know nothing about how zify and lia work, so I'm probably missing something obvious."
13895,ana-borges,2021-05-26 12:52:03,silene,"What do you suggest we do with max_int?\nMaybe define it in Int63 and overload it in Sint63\n\nThat makes sense.\n\nI deprecated everything in ZifyInt63.v, but I understand it's an internal file, so perhaps this isn't necessary?\n\nYes. In fact, I would not even have bothered renaming it.\n@fajb Any opinion?\n\nModule Uint63ring := CyclicRing Uint63Cyclic.\n\nI don't think this is worth renaming.\n\nThe only way I see of avoiding this kind of error is to continue importing Int63 alongside Uint63 in every rele"
13895,ana-borges,2021-05-26 13:10:23,fajb,"I deprecated everything in ZifyInt63.v, but I understand it's an internal file, so perhaps this isn't necessary?\n\nYes. In fact, I would not even have bothered renaming it.\n@fajb Any opinion?\n\nNo strong opinion. But this is not quite an internal file, users need to Import it to get zify working on int63.\nSo, renaming is probably better.\nEventually, having a ZifySint63.v  for signed int63 would be nice too."
13895,ana-borges,2021-05-26 18:47:58,coqbot-app,"Hey, I have detected that there were CI failures at commit 4760ede without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ac9a310 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-flocq."
13895,ana-borges,2021-05-26 22:22:49,coqbot-app,"Hey, I have detected that there were CI failures at commit 98b0dc3 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ac9a310 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-flocq.\nHowever, you may want to wait until the pipeline for the base commit (ac9a310) finishes."
13895,ana-borges,2021-05-27 00:41:40,ana-borges,"I was trying to write a PR to flocq to fix the error, as explained here, but it appears that I can't fork the flocq project without an account. Is there a kind Inria member who could give me access, or write the PR themselves? It is a simple matter of changing Int63.to_Z to Uint63.to_Z in IEEE754/PrimFloat.v."
13895,ana-borges,2021-05-27 06:16:47,silene,"It is a simple matter of changing Int63.to_Z to Uint63.to_Z in IEEE754/PrimFloat.v.\n\nNo, it is not, because that would make Flocq unable to compile with any of Coq released versions. That is why I was wondering whether doing Import Int63 and replacing Int63.to_Z with to_Z would fix the issue.\n\nBut this is not quite an internal file, users need to Import it to get zify working on int63.\n\nBut users do not need to access any of its content, do they? So, a middle ground could be to rename the file t"
13895,ana-borges,2021-05-27 07:56:07,fajb,"But this is not quite an internal file, users need to Import it to get zify working on int63.\n\nBut users do not need to access any of its content, do they? So, a middle ground could be to rename the file to ZifyUint63.v and to just have a dummy file ZifyInt63.v containing a single line Require Export ZifyUint63.v.\n\nSure. That would do the trick. I am not familiar with deprecation but it seems that would not deprecate ZifyInt63.v.\n@ana-borges I am fine with whatever option."
13895,ana-borges,2021-05-27 08:08:02,silene,"I am not familiar with deprecation but it seems that would not deprecate ZifyInt63.v.\n\nUnfortunately, there is no way to deprecate a file, only definitions. So, if users do not access the content of ZifyInt63.v but just import it, they will not be made aware of the deprecation anyway."
13895,ana-borges,2021-05-27 10:46:45,ana-borges,"No, it is not, because that would make Flocq unable to compile with any of Coq released versions. That is why I was wondering whether doing Import Int63 and replacing Int63.to_Z with to_Z would fix the issue.\n\nYou are right, I just didn't think to value this. Require Int63 is enough to fix the issue, no need to replace Int63.to_Z with to_Z, if the former is preferred for some reason.\n\nSo, a middle ground could be to rename the file to ZifyUint63.v and to just have a dummy file ZifyInt63.v contai"
13895,ana-borges,2021-05-27 15:06:30,coqbot-app,"Hey, I have detected that there were CI failures at commit 0361a61 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ac9a310 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-interval."
13895,ana-borges,2021-05-27 15:31:10,ana-borges,@coqbot ci minimize
13895,ana-borges,2021-05-27 15:31:16,coqbot-app,I have initiated minimization at commit 0361a61 for the suggested target ci-interval as requested.
13895,ana-borges,2021-05-27 15:37:09,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/interval/src/Float/Primitive_ops.v (from ci-interval) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 120KiB file on GitHub Actions Artifacts under bug.v)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.ZArith.ZArith."
13895,ana-borges,2021-05-27 16:12:05,JasonGross,Still trying to figure out what's up with the minimize truncating some files in the middle of statements.  I suspect some issue with unicode handling
13895,ana-borges,2021-05-27 17:08:31,ana-borges,"I don't exactly understand why there is a problem with interval, but the following change at line 2592 of Float/Primitive_ops.v fixes it:\n-  with (Z.eqb (Int63.to_Z (normfr_mantissa f' >> of_Z (FloatOps.prec - e'') land 1)) 0).\n+  with (Z.eqb (Int63.to_Z (normfr_mantissa f' >> of_Z (FloatOps.prec - e'') land 1)) 0)%int63.\n\n@silene would you mind making the change? Thank you for dealing with flocq by the way."
13895,ana-borges,2021-05-27 17:33:33,coqbot-app,"Hey, I have detected that there were CI failures at commit 0361a61 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ac9a310 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-interval."
13895,ana-borges,2021-05-27 17:38:08,silene,"would you mind making the change?\n\nUnfortunately, the version of Interval that is tested is not the official one, so my changes have no effect."
13895,ana-borges,2021-05-27 17:41:33,ana-borges,"Unfortunately, the version of Interval that is tested is not the official one, so my changes have no effect.\n\nAh, I see. Thanks anyway. I guess I should ask someone else, perhaps @ejgallego?"
13895,ana-borges,2021-05-27 21:56:50,JasonGross,"Oops, there was a typo, trying this again.\n\nStill trying to figure out what's up with the minimize truncating some files in the middle of statements. I suspect some issue with unicode handling\n\nTruncation was about github limits, issue was about how I was processing the error log. Hopefully fixed now, let's try again\n@coqbot ci minimize"
13895,ana-borges,2021-05-27 22:11:10,JasonGross,"Sorry for the spam, let me try this once more to work around an issue with the native compiler.  @coqbot ci minimize"
13895,ana-borges,2021-05-27 22:11:13,coqbot-app,I have initiated minimization at commit 0361a61 for the suggested target ci-interval as requested.
13895,ana-borges,2021-05-27 22:45:37,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/interval/src/Float/Primitive_ops.v (from ci-interval) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/interval/src"" ""Interval"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Bignums"" ""Bignums"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-c"
13895,ana-borges,2021-05-28 10:37:15,ana-borges,"@silene, going back to the what to place in Int63 vs Uint63:\n\nthere are a bunch of lemmas that are completely to_Z-free, so it seems a bit counterproductive to move them to Uint63.v.\n\nYou are right, but many of these still depend on unsigned operations, most notably comparisons (but arithmetic as well). It's still possible to define <? in Int63, use the same one in Uint63, and then a different one in Sint63... but what's the point? And would we then keep three scopes (int63_scope, uint63_scope a"
13895,ana-borges,2021-05-28 12:08:30,silene,"You are right, but many of these still depend on unsigned operations, most notably comparisons (but arithmetic as well). It's still possible to define <? in Int63, use the same one in Uint63, and then a different one in Sint63... but what's the point?\n\nWhat I am trying to avoid is the case where a user wants signed integers but is forced to include Uint63 because lots of useful theorems are there. Obviously, theorems about unsigned comparisons have no reason to be in Int63. But the following one"
13895,ana-borges,2021-05-28 13:01:28,ana-borges,"What I am trying to avoid is the case where a user wants signed integers but is forced to include Uint63 because lots of useful theorems are there.\n\nAgreed that this would be bad. Right now Sint63.v exports Uint63. This is suboptimal but IMO it's orthogonal to this PR. I can try to open another PR where that is changed, although as far as I can tell it would mean a lot of lines of the form Definition of_Z := Uint63.of_Z in the Sint63.v file.\n\n\nadd_assoc\nbit_lsl\n\n\nThese and related ones don't nee"
13895,ana-borges,2021-05-28 13:54:46,silene,"Right now Sint63.v exports Uint63. This is suboptimal but IMO it's orthogonal to this PR.\n\nNo. Currently Sint63 exports Int63. Your pull request changes it to exporting Uint63, which we want for compatibility reasons right now, but which we do not want in the long run. After one or two releases, we want to remove this dependency of Sint63 over Uint63. At that point, Sint63 would lose theorems such as add_assoc. The only way I can think of not losing such theorems is to put them them into a third"
13895,ana-borges,2021-05-28 14:19:17,ana-borges,"For now, this is just fine since Int63 depends on Uint63\n\nOk, I had not understood that you wished to maintain this dependency for now.\n\nthe issue will only materialize in a later release of Coq when we remove this dependency.\n\nI don't understand how this will be accomplished. I only mention it because if the conclusion a year from now is that it's impossible, then this discussion is moot.\n\nthe notations in Int63 should not be marked as deprecated, as eventually that is where they will land.\n\nAr"
13895,ana-borges,2021-05-28 14:58:08,silene,"Are you referring to notations like Notation wB := wB (only parsing), or notations like Infix ""+"" := ..., or both? I assume the former, but if not please let me know.\n\nYes, the former. The latter would only matter for a third scope (see below).\n\nI don't understand how this will be accomplished.\n\nYour pull request makes Int63 depends on Uint63. After a few releases, we will reverse this dependency, that is, Uint63 will depend on Int63 (as will Sint63). At that point, Notation wB will become Defin"
13895,ana-borges,2021-05-28 15:12:41,silene,"To be clear, I am not asking for a large change with respect to the current pull request. I am just asking that the deprecation warning be removed from notations such as size, add, land, lsl, eqb, get_digit, add_comm, etc. If some things can be moved back from Uint63 to Int63 because they are not needed in Uint63, all the better, but that is on a best effort basis."
13895,ana-borges,2021-05-28 17:38:30,ana-borges,"To be clear, I am not asking for a large change with respect to the current pull request.\n\nThanks for clarifying, indeed I was missing this before today.\nSince I'm now picking what will and won't be deprecated, I noticed there are some Z lemmas that at first glance should perhaps be relocated to another file. Seems like a good opportunity to do it, but is there some reason for them being here that I might be missing? I'm talking about things like\nLemma Z_lt_div2 x y : x < 2 * y -> x / 2 < y.\nwhi"
13895,ana-borges,2021-05-28 19:27:37,silene,"I'm talking about things like Z_lt_div2 which I would perhaps place in ZArith/Zdiv.v.\n\nYes and no. I agree that its place is not in Uint63.v. But it is just a trivial corollary of Z.div_lt_upper_bound. So, it should never have existed in the first place.\nPerhaps some other theorems are more interesting and are worth moving under ZArith, though."
13895,ana-borges,2021-05-28 21:10:09,ana-borges,"So, it should never have existed in the first place.\n\nSo now it will live in Uint63.v in perpetuity?"
13895,ana-borges,2021-05-28 21:17:52,coqbot-app,"Hey, I have detected that there were CI failures at commit 994ada1 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 467fec9 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-interval."
13895,ana-borges,2021-05-28 21:25:53,silene,"So now it will live in Uint63.v in perpetuity?\n\nWe have some ways around it. For example, you could create a Deprecated module inside Uint63.v and put lemmas such as Z_lt_div2 inside it. Then, you make the notation in Int63.v points to it, but you change the deprecation notice so that it points to Z.div_lt_upper_bound. And the day we remove the compatibility notation from Int63.v, we kill Deprecated.Z_lt_div2 along the way."
13895,ana-borges,2021-05-29 05:05:12,coqbot-app,"Hey, I have detected that there were CI failures at commit fc14251 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 367831f succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-interval."
13895,ana-borges,2021-05-29 11:33:26,coqbot-app,"Hey, I have detected that there were CI failures at commit fc14251 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 367831f succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-interval."
13895,ana-borges,2021-05-29 11:41:43,ana-borges,"Please add a changelog entry.\n\nDone.\n\nAlso set the milestone and a label or two.\n\nI would, but I don't think I can. EDIT: I can now, thanks @SkySkimmer!\n\nPerhaps you would squash just before merge?\n\nYes."
13895,ana-borges,2021-05-29 14:49:57,coqbot-app,"Hey, I have detected that there were CI failures at commit b76dbb9 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 367831f succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-interval."
13895,ana-borges,2021-05-29 18:32:11,coqbot-app,"Hey, I have detected that there were CI failures at commit 7543193 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 367831f succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-interval."
13895,ana-borges,2021-05-29 19:38:45,coqbot-app,"Hey, I have detected that there were CI failures at commit 7543193 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 367831f succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-interval."
13895,ana-borges,2021-05-30 03:44:14,coqbot-app,"Hey, I have detected that there were CI failures at commit 1036bf2 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 367831f succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-interval."
14392,mattam82,2021-05-26 15:38:04,RalfJung,"I think this question came up before, about what the ""head"" of a primitive projection is. IMO it would make most sense that this be treated consistently (for mode !, for simpl annotations, and anywhere else the ""head"" of an expression is relevant).\n\nThis reverts a change that made Proj (p, ?X) and match ?X with not be considered as not headed by evars for matching a hint mode.\n\nThis sentence has too many negations for me to be able to parse it.^^"
14392,mattam82,2021-05-26 18:00:34,coqbot-app,"Hey, I have detected that there were CI failures at commit f4d758f without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ac9a310 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-perennial."
14392,mattam82,2021-05-26 20:54:58,JasonGross,@coqbot ci minimize
14392,mattam82,2021-05-26 20:55:06,coqbot-app,I have initiated minimization at commit f4d758f for the suggested target ci-perennial as requested.
14392,mattam82,2021-05-26 20:58:29,coqbot-app,Error: Could not minimize file  (from ci-perennial) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 2.1MiB file on GitHub Actions Artifacts under build.log)\nlogic/crash_adequacy.vos  \n  inflating: _build_ci/perennial/src/program_logic/crash_lang.v  \n  inflating: _build_ci/perennial/src/program_logic/crash_lang.vo  \n  inflating: _build_ci/perennial/src/program_logic/crash_lang.vok  \n  inflating: _build_ci/perennial/src/program_logic/crash_lang.vos  \n  inflating: _build_ci/pe
14392,mattam82,2021-05-26 22:35:45,JasonGross,Let's try again now that the base check has finished\n@coqbot ci minimize
14392,mattam82,2021-05-26 22:35:48,coqbot-app,"I have initiated minimization at commit f4d758f for the suggested target ci-perennial as requested.\nHowever, you may want to try again once the pipeline for the base commit (ac9a310) finishes."
14392,mattam82,2021-05-26 22:44:20,mattam82,"Said otherwise, in mode !, an index term of a constraint matches except if it is of the shape ?X t1 ... tn. Before this PR, ?X.(p) and match ?X with ... would not match ""!"". For simpl, the head would rather be the name of the constant/projection rather than the discriminee, so this PR is more consistent with this view."
14392,mattam82,2021-05-26 23:04:20,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/src/program_proof/examples/inode_proof.v (from ci-perennial) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 45KiB file on GitHub Actions Artifacts under bug.v)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Re"
14392,mattam82,2021-05-27 08:34:06,mattam82,"@robbertkrebbers the perenial error seems to be related to iris succeding more with this patch. On goal:\nΣ: gFunctors\nheapG0: heapG Σ\nstagedG0: stagedG Σ\nallocG0: allocG Σ\ninodeN, allocN: namespace\nk: nat\nl: loc\nk': nat\nP: inode.t → iProp Σ\naddr, off: u64\nQ: option Block → iPropI Σ\nH: (S k < k')%nat\nΦ: val → iPropI Σ\nΦc: iPropI Σ\nσ: inode.t\nmb: option Block\nHσ: mb = σ.(inode.blocks) !! int.nat off\ns: Slice.t\n1/1\n""HQ"" : Q mb\n""Hblock"" : match mb with\n           | Some b => is_block s 1 b\n         "
14392,mattam82,2021-05-27 08:36:53,robbertkrebbers,"I think it makes sense that the iFrame works now, so I'm in favor of the new behavior because it's more consistent.\nIf @tchajed and @RalfJung agree, I think they can provide a fix for perenial that's forward compatible with this PR."
14392,mattam82,2021-05-27 10:07:32,mattam82,"Yep, it's easy to fix perennial in a compatible way."
14392,mattam82,2021-05-27 10:13:12,RalfJung,"I don't have a strong opinion on whether this works or not, and I find it hard to judge the larger consequences of this change. Seems fine for me otherwise."
14392,mattam82,2021-05-27 10:30:49,mattam82,"This generally allows to perform dependent resolution with instances of the shape forall a : SomeClass, SomeOtherClass (proj a), while having mode ! for SomeOtherClass. I think that's a net improvement for these situations."
14392,mattam82,2021-05-27 10:32:47,mattam82,I've started the bench to check this doesn't negatively impact performance.
14392,mattam82,2021-05-27 13:19:06,coqbot-app,"Hey, I have detected that there were CI failures at commit 3c8378b without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ac9a310 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-perennial."
14392,mattam82,2021-05-27 15:00:42,tchajed,"Perennial should now work, the fixes are now on the coq/tested branch."
14392,mattam82,2021-05-27 15:01:38,mattam82,"Yep, this one should be all green, I removed the overlay"
14392,mattam82,2021-05-27 15:03:37,tchajed,"I only pushed the fixes from master to coq/tested a couple minutes ago, so the current ci-perennial job will fail, but if you restart it now it should succeed."
14392,mattam82,2021-05-27 18:44:35,mattam82,"Good @coq/tactics-maintainers , please review now."
14392,mattam82,2021-05-28 08:42:06,mattam82,@ppedrot this is a prerequisite for #9711
14392,mattam82,2021-05-28 08:45:29,mattam82,"I rebased, but did not change anything"
14392,mattam82,2021-05-28 09:13:12,robbertkrebbers,"To be honest: I think this MR makes the behavior more uniform, hence less of a headless duck."
14392,mattam82,2021-05-28 11:59:52,coqbot-app,"Hey, I have detected that there were CI failures at commit a30289e without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 92f3b90 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14392,mattam82,2021-05-28 12:17:41,ppedrot,"@mattam82 did you run a bench? I can't find it in the (notoriously cumbersome) gitlab UI. Also, if you want this to go into 8.14 it needs to be merged asap."
14392,mattam82,2021-05-28 12:47:39,coqbot-app,"Hey, I have detected that there were CI failures at commit a30289e without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 92f3b90 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14392,mattam82,2021-05-28 13:14:52,mattam82,"I triggered a bench, it's easy: just go to the bench job on the gitlab ci pipeline details link and ""trigger manual action"""
14392,mattam82,2021-05-28 13:16:12,mattam82,"Also, historical note: @ppedrot you were the one who added the Proj (p, c) -> head_evar c case about 4 years ago out of zeal I think :)"
14392,mattam82,2021-05-29 12:25:55,SkySkimmer,https://gitlab.com/coq/coq/-/jobs/1301186577\n┌─────────────────────────────┬─────────────────────────┬───────────────────────────────────────┬───────────────────────────────────────┬─────────────────────────┬─────────────────┐\n│                             │      user time [s]      │              CPU cycles               │           CPU instructions            │  max resident mem [KB]  │   mem faults    │\n│                             │                         │                                  
14392,mattam82,2021-05-29 12:36:43,ppedrot,If nobody complains I will merge this tonight so as to fit into the release schedule.
14293,MSoegtropIMC,2021-05-10 11:34:51,MSoegtropIMC,"Btw.: wouldn't it be time to do the same name change as done for Z in Q, that is use a Q. prefix? Also one could better align similar lemmas between Z and Q."
14293,MSoegtropIMC,2021-05-11 10:57:26,koraa,"Thank you for linking the PR in the other issue! I don't really know enough about development in Coq (yet) to be a good judge of how useful/good the code is, but I do think they seem useful, especially the simple ones like Qabs_le/Qabs_gt…\nQabs strikes me as particularly useful as it allows one to reason about positive rationals; putting Zabs into relation to Z.of_N n / p and beyond that similar modules for Zpos z # p, Zneg z # p. Z.of_N n # p, (z % d) # d might be very helpful modeling a variet"
14293,MSoegtropIMC,2021-05-12 09:41:59,MSoegtropIMC,@koraa : I guess you mean the relation of Qabs with the various forms of rationals you mentioned. I am not sure if a lemma just relating the sign of the numerator with the result of Qabs and chaining such lemmas with e.g. Z.of_N>=0 wouldn't be more useful - it depends on how frequently specific forms are used and also what people search for. A more generic lemma might be harder to find than Search (Qabs (Zpos _ # _)). Probably one should have both - generic and specific forms.\nWhat I am missing 
14293,MSoegtropIMC,2021-05-17 15:32:18,MSoegtropIMC,"@herbelin, @silene, @thery : can someone please review this?"
14293,MSoegtropIMC,2021-05-17 23:21:11,herbelin,"Btw.: wouldn't it be time to do the same name change as done for Z in Q, that is use a Q. prefix? Also one could better align similar lemmas between Z and Q.\n\nAbsolutely. I believe a compatibility layer would work."
14293,MSoegtropIMC,2021-05-18 06:47:39,MSoegtropIMC,@herbelin : thanks for the review! I will do the changes you suggest except:\n\na notation for Qpower_positive: I see this more as an implementation vehicle and don't expect users to see this a lot - and if they see it it is probably more confusing than helpful if it uses the same notation as Qpower.\nI will clean up variable naming for existing lemmas but not parameter order - this should be done in a separate step together with renaming. For the new lemmas I will review parameter order.
14293,MSoegtropIMC,2021-05-19 07:31:36,MSoegtropIMC,"@herbelin : thinking about this I wonder if I shouldn't go the whole way right away. Doing partial cleanup like parameter naming doesn't seem that sensible. Do you think I should make a complete overhaul of the Q library as part of this PR, including adjusting lemmas names and structure to Z and R and using a Q. prefix? It might get a bit hard to review the changes of the PR as is then, but you already did this. Or would it make more sense to first merge this as is (except for the naming of the "
14293,MSoegtropIMC,2021-05-25 17:27:27,MSoegtropIMC,"@herbelin : as a preparation for cleanup I wrote a shell script to search for Q lemmas with the same name, and if this does not exists with the same signature in R (modulo some obvious replacements). Not terribly scientific but works reasonably well. In the attached archive you find the results. The .v file produces the list of Q lemmas I search for. The .special file is a hand made selection of Q lemmas which don't make a lot of sense in R (at first glance). The .miss2 file contains those which"
14293,MSoegtropIMC,2021-05-26 08:06:10,MSoegtropIMC,"@herbelin : I implemented your review comments as follows:\n\nQpower_pos renamed to Qpower_0_le and added a (in 8.14 not yet deprecated) notation\nrenamed the new lemmas to Qpower_0_lt, Qpower_1_lt_pos, Qpower_1_lt, Qpower_1_le_pos, Qpower_1_le. I also changed all lemmas such that the constant in the comparison is consistently on the left side and that the comparison mentioned in the lemmas name matches the resulting direction. Note that for Q gt and ge are just notations for lt and lw with swapped"
14293,MSoegtropIMC,2021-05-26 21:14:25,herbelin,I think it doesn't make a lot of sense to do further work in a hurry just before the branch of 8.14.\n\nI agree.\nAnd thanks for the detailed analysis Q vs R. That's very interesting. I will comment later.
14293,MSoegtropIMC,2021-05-27 15:54:46,MSoegtropIMC,"@silene, @herbelin : this should be ready to merge. I just wonder if I should mention in the change log entry, that lemmas have been moved from QExtra and partly renamed. I didn't do so because QExtra is not documented (explicitly excluded from the library documentation) and I guess few people included the constructive real files and found them via Search."
14293,MSoegtropIMC,2021-05-27 16:08:39,silene,"I guess few people included the constructive real files and found them via Search.\n\nUnfortunately, you do not need to explicitly mention constructive real numbers:\nRequire Import Reals QArith.\nSearch (_ + _ < _ + _)%Q.\n(* QExtra.Qplus_lt_compat: forall x y z t : Q, x < y -> z < t -> x + z < y + t *)"
14293,MSoegtropIMC,2021-05-27 16:23:27,MSoegtropIMC,"That is true. Still I don't think anybody used this - this was only available in Coq 8.13. None of the developments in Coq CI used any of the renamed lemmas. But if you prefer, I can add compatibility notations for the lemmas for which I changed the name."
14293,MSoegtropIMC,2021-05-27 16:27:56,silene,"I don't think that the deprecation lemmas are needed. But the changelog entry is worth it, just in case someone did use the lemmas."
14293,MSoegtropIMC,2021-05-27 16:40:23,MSoegtropIMC,Agreed - I will write a better changelog entry.
14293,MSoegtropIMC,2021-05-28 06:19:22,MSoegtropIMC,@silene : I added a detailed description of the changes in the change log entry. I didn't do any other changes.
14293,MSoegtropIMC,2021-05-28 09:29:48,coqbot-app,"Hey, I have detected that there were CI failures at commit 05b6c1f without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit b7d10ab succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14293,MSoegtropIMC,2021-05-28 13:11:09,MSoegtropIMC,@silene @herbelin : as far as I can tell the CI error is unrelated since:\n\nthe same error happened on master commits 2x today\nCI passed before and I just changed the change log entry and as far as I can tell the failing job does not depend on changelog entries (like a doc task would).\n\nSo I would say this is ready to merge.
14293,MSoegtropIMC,2021-05-28 14:13:50,coqbot-app,"Hey, I have detected that there were CI failures at commit 05b6c1f without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit b7d10ab succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14293,MSoegtropIMC,2021-05-30 06:42:01,MSoegtropIMC,"@silene : I did the _r/_l renaming but not the Qmult_power and Qmult_power_positive one, because these are pre-existing lemmas (I just moved the second one around in Qpower.v)."
14293,MSoegtropIMC,2021-06-02 15:29:29,silene,@coqbot merge now
14253,ppedrot,2021-05-05 11:03:53,ppedrot,Bench https://gitlab.com/coq/coq/-/jobs/1237769695\n┌─────────────────────────────┬─────────────────────────┬───────────────────────────────────────┬───────────────────────────────────────┬─────────────────────────┬─────────────────┐\n│                             │      user time [s]      │              CPU cycles               │           CPU instructions            │  max resident mem [KB]  │   mem faults    │\n│                             │                         │                            
14253,ppedrot,2021-05-06 20:37:47,ppedrot,"Funny experiment but not really conclusive. Some single lines show important differences but it doesn't stand out it the whole bench, and they are rather small in absolute values."
14253,ppedrot,2021-06-16 07:28:33,ppedrot,Reopening because it actually fixes a reported bug.
14253,ppedrot,2021-06-16 10:25:28,coqbot-app,"Hey, I have detected that there were CI failures at commit ec55829 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a1fac38 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_parsers."
14253,ppedrot,2021-06-16 10:29:48,coqbot-app,"Hey, I have detected that there were CI failures at commit ec55829 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a1fac38 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_parsers."
14253,ppedrot,2021-06-16 10:46:38,coqbot-app,"Hey, I have detected that there were CI failures at commit ec55829 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a1fac38 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_parsers."
14253,ppedrot,2021-06-16 11:02:50,JasonGross,@coqbot ci minimize
14253,ppedrot,2021-06-16 11:02:56,coqbot-app,I have initiated minimization at commit ec55829 for the suggested target ci-fiat_parsers as requested.
14253,ppedrot,2021-06-16 11:19:58,coqbot-app,"Hey, I have detected that there were CI failures at commit ec55829 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a1fac38 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_parsers."
14253,ppedrot,2021-06-16 16:20:30,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 60KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fi"
14253,ppedrot,2021-06-16 18:04:33,ppedrot,"@JasonGross minimization is incomplete, is there an easy way to relaunch it?"
14253,ppedrot,2021-06-16 18:41:00,JasonGross,"Not yet.  I'm hopeful @Zimmi48 will manage to implement the coqbot side of relaunching as per coq/bot#143 (comment) within the next couple of days, and then minimization will automatically be relaunched when interrupted by timeout.  @Zimmi48, if you don't have time, I can try to implement it.  Alternatively, @ppedrot , if you want to do it manually, there's a printout of a curl request in the log that contains the relevant information for making a new branch on the minimizer as per the instructi"
14253,ppedrot,2021-06-17 07:05:44,Zimmi48,"@JasonGross Unfortunately, I've underestimated the time that some other tasks would take and now I need to delay work on the bot to after the Coq workshop 😖 So if you do have time to implement this feature in the next couple of days, feel free to go ahead."
14253,ppedrot,2021-06-17 19:06:11,JasonGross,"Resumption should now work, I'm testing it at #14328 (comment)"
14253,ppedrot,2021-06-21 01:32:33,JasonGross,"Now that resumption works and I've adjusted fiat to be a bit more minimizable and with some help from manual minimization to work around #14529, minimization has finished!  I'll post the full bug file in the next comment.\nMinimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 45KiB file on GitHub Actions Artifacts under bug.v)\n(* "
14253,ppedrot,2021-06-21 01:34:11,JasonGross,"Minimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/Bedrock"" ""Bedrock"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-I"" ""/github/workspace/builds/coq/coq-"
14253,ppedrot,2021-06-21 01:34:25,JasonGross,"@ppedrot, I hope this is helpful!"
14253,ppedrot,2021-06-21 07:31:53,ppedrot,"@JasonGross yes, thanks a lot. I'll try to understand what's going on now."
14253,ppedrot,2021-06-21 14:44:41,ppedrot,"Here is a much smaller test:\nFrom Coq Require Import Setoid Morphisms.\n\nAxiom lattice_for : Type -> Type.\nAxiom constant : forall {T : Type}, T -> lattice_for T.\n\nAxiom lattice_for_rect :\nforall [T : Type] (P : Type), (forall t : T, P) -> forall l : lattice_for T, P.\n\n#[local]\nDeclare Instance lattice_for_rect_Proper_85 : forall {A},\n  Proper (forall_relation (fun _ => eq) ==> eq ==> Basics.flip Basics.impl)\n           (@lattice_for_rect A Prop) | 3.\n\nAxiom lattice_rewrite :\n  forall (A T T' : T"
14253,ppedrot,2021-06-21 15:25:54,ppedrot,"OK, this should be working now. I stupidly forgot to accumulate the highest free variable in the branches of a case. I added the minimized test for good measure."
14253,ppedrot,2021-06-21 18:41:32,coqbot-app,"Hey, I have detected that there were CI failures at commit 74b37f2 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 6025946 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14253,ppedrot,2021-06-21 19:07:54,JasonGross,@coqbot CI minimize
14253,ppedrot,2021-06-21 19:07:57,coqbot-app,I have initiated minimization at commit 74b37f2 for the suggested target ci-metacoq as requested.
14253,ppedrot,2021-06-21 19:10:47,coqbot-app,Error: Could not minimize file  (from ci-metacoq) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.8MiB file on GitHub Actions Artifacts under build.log)\nlating: _build_ci/metacoq/template-coq/theories/.Reflect.aux  \n  inflating: _build_ci/metacoq/template-coq/theories/.TemplateMonad.aux  \n  inflating: _build_ci/metacoq/template-coq/theories/.TermEquality.aux  \n  inflating: _build_ci/metacoq/template-coq/theories/.Typing.aux  \n  inflating: _build_ci/metacoq/template-coq/th
14253,ppedrot,2021-06-21 19:13:26,JasonGross,"Hmmm, seems like the version of master this is based on is too old.  (Maybe we should make artifacts persist for longer @Zimmi48 ?). @ppedrot , mind rebasing this on latest master (perhaps on top of the recent fix for the build:base job)?"
14253,ppedrot,2021-06-21 20:25:09,ppedrot,@JasonGross done. This is what I call bleeding edge...
14253,ppedrot,2021-06-21 20:29:42,ppedrot,"@JasonGross looks like metacoq is broken on master, this is unrelated to this PR."
14253,ppedrot,2021-06-21 23:35:17,coqbot-app,"Hey, I have detected that there were CI failures at commit cafc76b without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 76e20b5 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14253,ppedrot,2021-06-22 12:53:08,Zimmi48,"Hmmm, seems like the version of master this is based on is too old.\n\nThe reason for the failure was that the base:build job was cancelled (and thus ci-metacoq was skipped). We should probably find a way of improving the reports for cancelled and skipped jobs."
14253,ppedrot,2021-06-22 12:55:20,Zimmi48,"I checked that the corresponding jobs for the base commit 76e20b5 succeeded.\n\nHum, that's weird because the corresponding job for the base commit failed in this case: https://gitlab.com/coq/coq/-/jobs/1364637965"
14253,ppedrot,2021-06-23 18:34:06,ppedrot,This is ready and needs an assignee. @SkySkimmer ?
14253,ppedrot,2021-06-24 08:54:56,SkySkimmer,@coqbot: merge now
14558,Columbus240,2021-06-26 17:19:56,jfehrle,"PS We generally don't create changelog entries for documentation-only changes.\nAlso, thanks for submitting the PR."
14558,Columbus240,2021-06-28 09:52:33,Columbus240,"Thanks a lot for the comments.\nI wrote the doc more to enable developers to discuss how coq_makefile could be improved and less with the intention of writing to users. It was also for me to wrap my head around the technical details.\nThanks for the reminder, that I shouldn’t forget the main audience and the style that requires."
14558,Columbus240,2021-06-28 12:57:08,Columbus240,"I’m a bit torn between ""this is the way coq_makefile behaves"" and ""write this into _CoqProject, to get this result"".\nSome more notes:\nCurrently, we can’t encode the following kinds of strings in _CoqProject:\n\nStrings starting with double quotes\nStrings starting with # and containing a double quote\nStrings containing both whitespace and a double quote\n\nbecause it lacks escape sequences or something similar. So options to coqc and filenames of this kind are currently a no-go.\nThe options -custom, "
14558,Columbus240,2021-06-28 13:26:06,Columbus240,"Note: the options -no-opt, -byte, -full and -opt can be used to set the internal value of use_ocamlopt to true or false (see coqProject_file.ml) but its value is ignored in coq_makefile.ml. These options are accepted without warning or error.\nThe option -install _ is described by the help-text of coq_makefile as defining the installation directory of the generated makefile, but it actually is ignored and irrelevant. But specifying it gives no warning or error."
14558,Columbus240,2021-06-28 14:25:15,Columbus240,"This is now written with the hypothetical behaviour of -arg ""Some 'Really Weird' Thing"" passing [""Some"", ""Really Weird"", ""Thing""] to coqc. Will write adapt the code to actually do this."
14558,Columbus240,2021-06-28 14:26:17,Columbus240,"I moved the branch of the equals-sign around, to make the behaviour a little simpler. Don’t know why it wasn’t like this already. But it might be a pretty useless change."
14558,Columbus240,2021-06-28 16:56:06,jfehrle,"You have a sphinx error.  Click on ""Details"" to see it.  Use ""make sphinx"" to run sphinx on your system.  (Sphinx builds the reference manual.)\nWarning, treated as error:\n/builds/coq/coq/doc/sphinx/practical-tools/utilities.rst:62:Unexpected indentation."
14558,Columbus240,2021-06-29 12:39:31,Columbus240,Test and document -docroot option. Answering the question: “In which cases is it necessary?”
14558,Columbus240,2021-06-30 10:57:26,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14558,Columbus240,2021-06-30 12:19:17,Columbus240,I’m sorry for causing unnecessary pings. Removing _ = _ notation in _CoqProject broke a lot of CI projects. (Didn’t expect it to be used that much.)
14558,Columbus240,2021-06-30 13:12:33,Columbus240,"I haven’t yet written tests, but I can document the behaviour of this branch here. First giving the content of _CoqProject, then giving the list of arguments of coqc.\n\n-arg ""-set 'Default Goal Selector=!'"" -> [""-set"", ""Default Goal Selector=!""]\n-arg ""-w default"" -> [""-w"", ""default""]\n-arg -w -arg default-> [""-w"", ""default""]\n\nLimitations:\n\nThe overall grammar of _CoqProject hasn’t been changed, there are still strings which can’t be encoded.\nIt is impossible to have ' occur in the list of argument"
14558,Columbus240,2021-06-30 13:43:25,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14558,Columbus240,2021-06-30 14:22:19,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14558,Columbus240,2021-06-30 14:52:07,coqbot-app,"Hey, I have detected that there were CI failures at commit 8a713b0 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit b69b918 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14558,Columbus240,2021-06-30 14:55:14,Zimmi48,"PS We generally don't create changelog entries for documentation-only changes.\n\nBut if this PR is not only about documentation anymore, then a changelog entry is required."
14558,Columbus240,2021-06-30 15:27:43,coqbot-app,"Hey, I have detected that there were CI failures at commit 8a713b0 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit b69b918 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-coq_tools."
14558,Columbus240,2021-07-05 23:14:36,jfehrle,"@Columbus240, you need to create an overlay file for ci-bignums in this PR.  See dev/ci/user-overlays/README.md for an explanation of how to do that.\nWhen you're ready for a code review, you may want to state that in a comment here.  Sometimes it takes a while to identify the appropriate reviewer and get the review done (though this is fairly simple PR).  @gares might be appropriate.  If no one responds within a couple days, @Zimmi48 usually knows who to ask."
14558,Columbus240,2021-07-08 14:36:28,Columbus240,"I have some questions & need some help:\n\nI added a changelog entry, where I put everything into a single changelog-item. Is this correct? I think it’d make sense to split it apart into multiple items, since some changes of this PR are additions, some are removals, breaking changes etc.\nI tried to add unit tests for coqProject_file.ml, trying to mirror the style of proof_diffs_test.ml and pp_big_vect.ml, but somehow the library won’t get found. I don’t know where the relevant difference lies and "
14558,Columbus240,2021-07-08 14:42:02,gares,I'm looking at the code right now. May I ask why 3 tests were removed? Is it intentional?
14558,Columbus240,2021-07-08 14:55:17,Columbus240,"You mean the ""compat-subdirs"" test? Removing it is intentional. It belongs to the ""subdirs"" feature, which I removed. So testing it didn’t make sense.\nThe feature goes like this: Write the path to a directory inside your _CoqProject, then the generated Makefile will try to execute makefiles in this directory. It has been deprecated since v8.7."
14558,Columbus240,2021-07-08 15:12:07,gares,"It looks good to me, modulo CI and doc review"
14558,Columbus240,2021-07-08 15:14:57,gares,"bignums' _CoqProject has\n-extra ""BigN/NMake_gen.v"" ""BigN/gen/NMake_gen.ml"" ""ocaml $< > $@ || (RV=$$?; rm -f $@; exit $${RV})""\n\nwhich needs to be moved to Makefile.coq.local.\nYou can use dev/tools/create_overlays.sh to prepare it."
14558,Columbus240,2021-07-08 15:19:37,gares,"You have to rename the unit test I believe, since you gave it the very same name of the module it should use. According to the makefile in test-suite, that module should be linked in."
14558,Columbus240,2021-07-08 15:24:46,Zimmi48,"bignums' _CoqProject has\n-extra ""BigN/NMake_gen.v"" ""BigN/gen/NMake_gen.ml"" ""ocaml $< > $@ || (RV=$$?; rm -f $@; exit $${RV})""\n\nwhich needs to be moved to Makefile.coq.local.\nYou can use dev/tools/create_overlays.sh to prepare it.\n\n@Columbus240 already opened a PR but didn't add the corresponding overlay: coq/bignums#60"
14558,Columbus240,2021-07-08 16:00:25,gares,"The overlay should be backward compatible, so it could be merged now, but for some reason bignum's CI did not run on the PR..."
14558,Columbus240,2021-07-08 17:28:55,Columbus240,"You have to rename the unit test I believe, since you gave it the very same name of the module it should use. According to the makefile in test-suite, that module should be linked in.\n\nThanks for the hint. It works now."
14558,Columbus240,2021-07-08 17:47:29,Zimmi48,"The overlay should be backward compatible, so it could be merged now, but for some reason bignum's CI did not run on the PR...\n\nYes, for some reason none of the recent PRs / commit triggered CI."
14558,Columbus240,2021-07-09 14:32:07,Columbus240,I think this PR is ready for final comments.
14558,Columbus240,2021-07-10 10:07:55,Columbus240,"@jfehrle, thanks for your comments."
14558,Columbus240,2021-07-10 19:20:19,jfehrle,I think you planned to make a few wording tweaks?  I'll await those.
14558,Columbus240,2021-07-12 06:19:37,gares,@jfehrle are you ok with the current status?
14558,Columbus240,2021-07-12 18:02:25,Columbus240,"To simplify squashing, I moved most changes to the refman into a single commit.\nEdit: Didn't see your written-out request. Will squash again. Though I think the functional changes should be in separate commits, for making them easier to understand.\nI'll remove the change about =."
14558,Columbus240,2021-07-12 18:32:40,Zimmi48,No need to squash down to a single commit. Feel free to select the level of granularity that you prefer. The only thing that we really try to avoid in finished PRs are commits that are amending previous commits in the same PR.
14558,Columbus240,2021-07-12 19:02:32,Columbus240,"I reworded the part about quoting in the string after -arg, though I'm not happy with it. It confuses how coqc is called on the command-line (coqc -set 'Foo Bar') and the resulting list of arguments argv ([""coqc"", ""-set"", ""Foo Bar""]).\nFor understanding properly what is going on, it is crucial to be able to tell these apart, since the all the programs calling coqc (coqIDE, coq_makefile via make, ProofGeneral, find-bugs.py, VScode, etc etc) only deal with the latter, but most users only interact w"
14558,Columbus240,2021-07-12 20:26:44,jfehrle,Something that might be addressed when this section is revised.\n@gares LGTM
14558,Columbus240,2021-07-13 06:45:09,gares,Shall we merge as is and eventually improve further in another pr?
14558,Columbus240,2021-07-13 07:01:16,Zimmi48,@gares I believe that's precisely what Jim is recommending
14558,Columbus240,2021-07-13 07:20:01,Columbus240,I agree with that as well.
14558,Columbus240,2021-07-13 11:27:03,gares,@coqbot merge now
14558,Columbus240,2021-07-13 11:27:04,coqbot-app,@gares: You can't merge the PR because there is still a needs: squashing label.
14558,Columbus240,2021-07-13 11:27:33,gares,@coqbot merge now
14558,Columbus240,2021-07-13 11:27:35,coqbot-app,@gares: Please take care of the following overlays:\n\n14558-Columbus240-coq_makefile_doc.sh
14558,Columbus240,2021-07-13 15:43:11,jfehrle,"@Columbus240 thanks for the PR.\nIf you don't mind my asking, I was curious about your affiliation and interests--always nice to know a little about others."
14558,Columbus240,2021-07-13 16:56:56,Columbus240,I'll answer later on Zulip.
13909,pi8027,2021-03-07 13:15:08,pi8027,"BTW, I still do not understand the following things in coercionops.ml:\n\nBijint and cl_index are really needed? Replacing them with ClTypMap and cl_typ would work and simplify the implementation. (I believe there is no performance issue here. Another potential issue would be that the printing order of Print Graph will change.)\nA circular inheritance path of C >-> C can be registered to inheritance_graph only if different_class_params holds for C. What are the use cases of this?"
13909,pi8027,2021-03-07 19:17:29,gares,"Bijint and cl_index are really needed? Replacing them with ClTypMap and cl_typ would work and simplify the implementation. (I believe there is no performance issue here. Another potential issue would be that the printing order of Print Graph will change.)\n\nI'm OK with that. BTW, if you are going to refactor the code, in spite of #13902 being merged, I still don't have an API that given a GlobRef.t tells me the number of parameters and the src/tgt classes. Would you mind making it possible? (addi"
13909,pi8027,2021-03-08 08:14:22,pi8027,"Bijint and cl_index are really needed? Replacing them with ClTypMap and cl_typ would work and simplify the implementation. (I believe there is no performance issue here. Another potential issue would be that the printing order of Print Graph will change.)\n\nI'm OK with that. BTW, if you are going to refactor the code, in spite of #13902 being merged, I still don't have an API that given a GlobRef.t tells me the number of parameters and the src/tgt classes. Would you mind making it possible? (addi"
13909,pi8027,2021-03-10 11:26:45,gares,I think you can nor rebase on top of the refactoring PR which was merged
13909,pi8027,2021-03-19 10:58:55,pi8027,I don't think I have to update the reference manual in accordance with this change. So this PR is ready for review.
13909,pi8027,2021-03-25 08:28:15,gares,@pi8027 can you take of the request by @SkySkimmer ? Otherwise this seems ready to me.
13909,pi8027,2021-03-25 08:54:42,pi8027,Yes. I will do that by the end of this week.
13909,pi8027,2021-03-25 18:39:15,gares,@coqbot merge now
13909,pi8027,2021-03-25 18:39:16,coqbot-app,@gares: You can't merge the PR because you're not among the assignees and no milestone is set.
13909,pi8027,2021-03-25 18:40:28,gares,@coqbot merge now
14174,JasonGross,2021-05-05 16:43:30,herbelin,"@jfehrle: I assume you're ok with the PR as it is,right?\n@JasonGross: For the test-suite, I suspect that it would be easy to add at least an example in test-suite/success/InversionSigma.v as a regression test?"
14174,JasonGross,2021-05-05 18:29:34,Zimmi48,"@jfehrle: I assume you're ok with the PR as it is,right?\n\nHis approval dates from after the interaction with Jason, so that's the right way to interpret it."
14174,JasonGross,2021-05-05 18:40:09,JasonGross,"For the test-suite, I suspect that it would be easy to add at least an example in test-suite/success/InversionSigma.v as a regression test?\n\nI've done one better.  inversion_sigma now supports intropatterns in addition to hypotheses (though it uses simple_intropattern rather than or_and_intropattern_loc, because the latter is not accessible to Tactic Notation; can someone explain to me what the significance is of this distinction, and whether inversion_sigma should be made to support or_and_intr"
14174,JasonGross,2021-05-06 03:03:02,JasonGross,"Very confused by the metacoq failure\nFile ""./theories/Extraction.v"", line 31, characters 0-41:\nError:\nThe informative inductive type sig2 has a Prop instance\nin eq_sig2_rec_uncurried (or in its mutual block).\nThis happens when a sort-polymorphic singleton inductive type\nhas logical parameters, such as (I,I) : (True * True) : Prop.\nThe Ocaml extraction cannot handle this situation yet.\nInstead, use a sort-monomorphic type such as (True /\ True)\nor extract to Haskell.\n\nAFAIK, this definition exist"
14174,JasonGross,2021-05-06 09:02:59,herbelin,"Extraction does not like in the uncurried versions that exist or exist2 are applied on equalities, since equalities are in Prop, lowering sig and sig2 to Prop."
14174,JasonGross,2021-05-06 15:13:35,JasonGross,"Ah, I see, thanks, I'll fix.\n@Zimmi48 is the new coqbot deployed so that I can ask @coqbot ci minimize\n?"
14174,JasonGross,2021-05-06 18:29:04,JasonGross,"Okay, I've fixed the extraction bug and added a test-case to the test-suite.  However, the performance is getting truly atrocious here, so I don't think this is ready for merge."
14174,JasonGross,2021-05-06 18:36:42,Zimmi48,"No sorry, not yet."
14174,JasonGross,2021-05-10 15:51:52,JasonGross,"I've added a large number of special-cases to reduce the load on unification/induction, massively speeding it up.  This also eliminates the need for the simplification tactics (should I remove them entirely?).  @herbelin I think this is ready for re-review and merging."
14174,JasonGross,2021-05-12 11:47:07,Zimmi48,"Some squashing is in order. At the very least, the DO NOT MERGE commit and its revert."
14174,JasonGross,2021-05-12 12:10:18,JasonGross,"I think the do not merge commits might be useful to keep in history?  (I can amend them to remove the do not merge if desired).  I'm happy to do a bit more squashing, though I think it might be useful to keep around the various versions so I can go find them later if, for example, I recall that I had a slow version of this tactic and want to see what version of it was slow.  (I could instead create a branch on my fork that I keep around forever and fully squash all the commits here, if that's pr"
14174,JasonGross,2021-05-12 12:21:59,Zimmi48,"Yeah, it's usually preferred that the version that is merged has a clean history (no commit amending previous ones in the same PR)."
14174,JasonGross,2021-05-12 14:49:28,JasonGross,Rebased and squashed
14174,JasonGross,2021-05-23 14:53:04,JasonGross,"bump @herbelin is there anything else to be done here?\n(@Zimmi48 , you said you'd rebase?)"
14174,JasonGross,2021-05-23 15:00:53,Zimmi48,"Indeed, I'll take care of it."
14174,JasonGross,2021-05-23 15:26:20,Zimmi48,Done.
14174,JasonGross,2021-05-25 19:44:35,herbelin,"The PR looks ok to me.\n\n(though it uses simple_intropattern rather than or_and_intropattern_loc, because the latter is not accessible to Tactic Notation; can someone explain to me what the significance is of this distinction\n\nThe syntax of or_and_intropattern is more specific. We could eventually make it available for tactic notations also. So, simple_intropattern is too general for inversion_sigma but not bad either afaicj.\nMerging tomorrow."
14174,JasonGross,2021-05-26 07:55:06,herbelin,@coqbot: merge now
14140,jhjourdan,2021-04-20 22:22:55,SkySkimmer,Bench https://gitlab.com/coq/coq/-/jobs/1197291464
14140,jhjourdan,2021-04-21 07:47:06,mattam82,"I was worried this would interact badly with constraint declarations Lemma foo@{i j | i < j} : bar but as hott passes unmodified, I am not worried anymore :)"
14140,jhjourdan,2021-04-21 08:30:08,jhjourdan,"There are two failures in the test suite. Interestingly, these failures were not present when I was testing on the 8.13 branch..."
14140,jhjourdan,2021-04-21 08:33:11,mattam82,"I expect this will change what minimization performs: in the previous situation, Coq could minimize x <= y <= z by assigning z := y, but now if we have also the constraint x <= z present it will not. We could ""canonicalize"" the contraints to ensure a (more) deterministic result of minimization."
14140,jhjourdan,2021-04-21 08:53:50,ppedrot,I am happy to see a revival of #10927 :)
14140,jhjourdan,2021-04-21 11:50:35,SkySkimmer,If we remove the short path at \n  \n    \n      coq/kernel/univ.ml\n    \n    \n        Lines 696 to 698\n      in\n      3645c06\n    \n    \n    \n    \n\n        \n          \n           let enforce_leq u v c = \n        \n\n        \n          \n             if check_univ_leq u v then c \n        \n\n        \n          \n             else enforce_leq u v c \n        \n    \n  \n\n both failing tests work again.
14140,jhjourdan,2021-04-21 12:11:31,jhjourdan,This does not make any sense for me. Do you have an explanation ?
14140,jhjourdan,2021-04-21 12:18:57,SkySkimmer,"enforce_leq drops trivial constraints like Prop <= u, but they're used by minimisation."
14140,jhjourdan,2021-04-21 12:55:47,ppedrot,May I suggest to try to sketch an (even partial) specification of minimization and then try to enforce some good properties about it like invariance by sufficiently equivalent graphs?
14140,jhjourdan,2021-04-21 12:57:16,ppedrot,"(Last time the same change was abandoned precisely because of unexplained differences in minimization, so it'd be good to rule out this source of fragility for good.)"
14140,jhjourdan,2021-04-21 13:33:53,jhjourdan,"Alright, I pushed a code which is closer to the previous implementation, but which still perform the optimization I proposed.\nNamely, this version inserts the constraint unconditionally if the LHS is a level, but use the short path otherwise. This seems to fix the test suite.\nThe new code seems really weird (we insert the edge or not depending on whether the LHS is a level), but this is what make this change compatible. But frankly, minimization needs serious fixing if it depends on whether or n"
14140,jhjourdan,2021-04-21 21:36:02,jhjourdan,"I have some trouble with the CI : the failures seems unrelated, but I am not used to Coq CI enough to be sure. Can someone confirm?"
14140,jhjourdan,2021-04-21 22:47:32,mattam82,"Oops, looks like I broke Coq's CI in equations master, my bad :)"
14140,jhjourdan,2021-04-22 09:38:24,mattam82,"equations and metacoq should now be fixed. We'll still have a problem with the test-suite in MetaCoq, no?"
14140,jhjourdan,2021-04-22 10:45:21,mattam82,With MetaCoq/metacoq#553 it will hopefully go through
14140,jhjourdan,2021-04-22 11:01:02,SkySkimmer,I don't think Require is affected by type-in-type
14140,jhjourdan,2021-04-22 11:31:24,mattam82,"I think Jacques-Henri told me that doing this change resulted in the code passing, so..."
14140,jhjourdan,2021-04-22 12:33:47,mattam82,The highest times for metacoq with this pr are:\n-------------------------------------------------------------\n42m05.07s | 3711816 ko | Total Time / Peak Mem               \n-------------------------------------------------------------\n 8m04.44s | 3711816 ko | bugkncst.vo                         \n 2m56.89s | 1113068 ko | PCUICSafeReduce.vo                  \n 2m56.04s | 1014152 ko | PCUICSafeConversion.vo              \n 2m15.62s |  798312 ko | PCUICInductiveInversion.vo          \n 1m18.65s |  80676
14140,jhjourdan,2021-04-22 12:36:58,mattam82,"bugkncst is a test that takes a while because it reifies a huge term, it should be unrelated to this (the reified syntax itself contains no universes)."
14140,jhjourdan,2021-04-22 12:41:29,mattam82,Let's see what the bench says now: https://gitlab.com/coq/coq/-/jobs/1199569240
14140,jhjourdan,2021-04-22 13:22:45,jhjourdan,"I think Jacques-Henri told me that doing this change resulted in the code passing, so...\n\nIndeed, Require enforces the universe constraint sets of the definitions of the required files, which may cause universe inconsistencies. If Type-in-type is activated, then this does not happen.\nNow, the fact that this causes a universe inconsistency in MetaCoq might be a bug in Coq, but I don't think this comes from the change I made"
14140,jhjourdan,2021-04-22 13:24:36,SkySkimmer,"Right, I forgot about 316592a before which Require didn't check type-in-type when adding the constraints."
14140,jhjourdan,2021-04-24 07:28:46,mattam82,┌─────────────────────────────┬─────────────────────────┬───────────────────────────────────────┬───────────────────────────────────────┬─────────────────────────┬─────────────────┐\n│                             │      user time [s]      │              CPU cycles               │           CPU instructions            │  max resident mem [KB]  │   mem faults    │\n│                             │                         │                                       │                                       
14140,jhjourdan,2021-04-26 17:25:49,ppedrot,"FTR, even if this alleviates the slowness of metacoq, this development is still taking ages computing universe constraints (now it's in the 25% range). I begin to suspect there is something wrong with this development because even universe-heavy developments do not reach this ratio."
14140,jhjourdan,2021-04-26 21:58:35,mattam82,"I don't think it's wrong. But metacoq is unusual in that it constantly manipulates inductives in Type (derivations and All/All2/Alli liftings of it) rather than Prop. It's also using Equations dependent pattern-matching simplification, which involves a lot of applications of constants taking Type as arguments, that might be a source of issues with universes. Could you make a bench-like output showing where metacoq precisely spends all this time in universes?"
14140,jhjourdan,2021-04-26 22:00:35,mattam82,"In any case, do you have anything against merging?"
14140,jhjourdan,2021-04-26 22:01:53,mattam82,"Oh and the safechecker stuff uses the obligation mechanism on top of all that, it might be an inefficient handling of universes to pass from one obligation to the next as well."
14140,jhjourdan,2021-04-27 08:49:40,ppedrot,"No, go ahead, I actually very much support this PR."
14140,jhjourdan,2021-04-27 09:55:00,mattam82,@coqbot merge now
14037,mrhaandi,2021-03-31 14:54:00,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14037,mrhaandi,2021-03-31 16:13:24,JasonGross,"Does anyone know how to fix the failing third Goal?\n\nnia is not complete, and this goal already fails in Z.  In general I've found that I have to cut with an equation about the quotient in order to handle goals involving the remainder:\nRequire Import Lia ZArith.\nLtac Zify.zify_post_hook ::= Z.to_euclidean_division_equations.\nLocal Open Scope Z_scope.\nGoal forall (m n:Z), 0 <= n -> 0 < m -> (n * m) mod m = 0.\nProof.\n  intros.\n  Fail nia.\n  cut ((n * m) / m = n); nia.\nQed."
14037,mrhaandi,2021-03-31 16:26:21,mrhaandi,"CI shows the following regression.\nPreviously the following works, whereas now it breaks:\nGoal forall n, n mod 2 < 2 -> n mod 2 = 0 \/ n mod 2 = 1.\nProof. lia. Qed.\n\nIt can be again made working adding Ltac Zify.zify_post_hook ::= Z.to_euclidean_division_equations..\nThen, the assumption n mod 2 < 2 is not even needed. However, the regression breaks existing code that does not (possibly on purpose) add the hook.\nmod is translated to Z and then lia gets stuck without the hook. Suggestions?"
14037,mrhaandi,2021-03-31 16:52:59,JasonGross,"Suggestions?\n\nI think this is an incompleteness in the part of zify written in OCaml.  In particular, the following instances should be enough, but they are not:\nRequire Import Lia ZArith Zify ZifyInst ZifyClasses.\nLemma Z_div_pos_full a b : (0 <= a -> 0 <= b -> 0 <= a / b)%Z.\nProof. destruct b; intros; now (rewrite Zdiv_0_r + apply Z.div_pos). Qed.\nInstance SatDiv : Saturate Z.div :=\n  {|\n  PArg1 := fun x => 0 <= x;\n  PArg2 := fun y => 0 <= y;\n  PRes  := fun r => 0 <= r;\n  SatOk := Z_div_pos_fu"
14037,mrhaandi,2021-03-31 16:54:04,JasonGross,"CI shows the following regression.\nPreviously the following works, whereas now it breaks:\n\n@mrhaandi Please add this test-case to the test-suite; I think ideally anytime a CI failure reveals something not caught by the test-suite, we should update the test-suite to cover that case, if it's not too hard."
14037,mrhaandi,2021-03-31 17:10:18,fajb,"@mrhaandi @JasonGross Thanks for the PR and the investigation.\nThe Saturate thingy   has indeed limitations: it performs a syntactic matching in the context.\nI'll look into it - it looks feasible to ""invent"" positivity proofs for positive constants.\nIn the meantime, this is unfortunately blocking this PR...\nA quick workaround would be to place the Nat.div and Nat.modulo in a separate file.\nNot quite satisfactory but at least this would not break existing code."
14037,mrhaandi,2021-03-31 19:25:04,mrhaandi,"I looked at all the CI problems.\nAll (except for iris) are exactly due to the regression out earlier.\nHowever, they are easy to fix locally by simply generalize (x mod y) the particular expressions that would be decomposed by lia.\nOf course, fixing the actual regression would be better.\n\nA quick workaround would be to place the Nat.div and Nat.modulo in a separate file.\n\nThis is also a quick (but less preferable) option.\niris breaks for a different reason and is easy to fix by better code (I'll "
14037,mrhaandi,2021-03-31 19:55:56,RalfJung,"Edit: @RalfJung Hmmm, I have hard on gitlab trying to fork iris_examples.\n\nYeah, see our docs for that.\nBut I also just submitted your change to the repo, so no need to go through that process. :)"
14037,mrhaandi,2021-03-31 20:21:18,JasonGross,"I think it would be better to find a way to maintain backwards compatibility than to make lia weaker.  My preference would indeed be to stick the Add Zify BinOp declarations in a separate file (maybe also put the ones about Saturate that I suggested there), and then we can have a future PR that merges them back into the main file, which is to be merged only after the saturation code is improved."
14037,mrhaandi,2021-03-31 20:35:54,fajb,"I have a quick fix (see https://github.com/fajb/coq/tree/N-Z-div-mod).\nBut it is not sufficient and uncovers another weakness of the saturation code:  it is not recursively closed.\nFor instance, the following fails:\nProof.\n  intros.\n  Fail lia.\n  zify; lia.\nQed.\n\nI am hopeful it is not too difficult to fix..."
14037,mrhaandi,2021-04-01 08:47:08,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14037,mrhaandi,2021-04-01 09:36:31,mrhaandi,"I think it would be better to find a way to maintain backwards compatibility than to make lia weaker. My preference would indeed be to stick the Add Zify BinOp declarations in a separate file (maybe also put the ones about Saturate that I suggested there), and then we can have a future PR that merges them back into the main file, which is to be merged only after the saturation code is improved.\n\nI now added suggested Saturate instances, and test cases to test-suite containing regressions (which "
14037,mrhaandi,2021-04-01 10:00:13,fajb,@mrhaandi PR #14045 may solve the regression.\nI made a quick test on top of your PR. I am hopeful that the regressions will be due to zify/lia being stronger.
14037,mrhaandi,2021-04-01 10:07:28,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14037,mrhaandi,2021-04-01 10:08:55,mrhaandi,"@mrhaandi PR #14045 may solve the regression.\nI made a quick test on top of your PR. I am hopeful that the regressions will be due to zify/lia being stronger.\n\n@fajb I noticed that you removed Saturate Z.mul. Are the newly added Saturate Z.div, Saturate Z.modulo still ok?"
14037,mrhaandi,2021-04-01 10:23:09,fajb,"@mrhaandi Saturate Z.div, Saturate Z.modulo should be ok."
14037,mrhaandi,2021-04-01 11:27:43,mrhaandi,"@mrhaandi PR #14045 may solve the regression.\nI made a quick test on top of your PR. I am hopeful that the regressions will be due to zify/lia being stronger.\n\nYes, it seems that any issues in ci due to the previous regression are gone in the PR combination.\nThere are several new errors, all of which because of zify/lia being stronger."
14037,mrhaandi,2021-04-01 12:19:42,mrhaandi,@fajb I conservatively updated Int63.v which previously broke upon rebase of #14045 upon this.\nNow the combination of both PRs builds and passes regressions tests.
14037,mrhaandi,2021-04-01 12:35:11,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14037,mrhaandi,2021-04-01 17:17:38,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14037,mrhaandi,2021-04-09 09:39:35,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14037,mrhaandi,2021-04-14 17:42:43,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14037,mrhaandi,2021-04-16 08:17:27,mrhaandi,"@fajb after #14045, what is the status of options such as\nLtac Zify.zify_post_hook ::= Z.to_euclidean_division_equations. needs to be replaced by\nLtac zify_convert_to_euclidean_division_equations_flag ::= constr:(true)."
14037,mrhaandi,2021-04-16 22:57:08,fajb,"If you wish to totally eliminate divisions, you need to set one or the other.\nThe Saturate rules are applied after the potential elimination of division."
14037,mrhaandi,2021-05-18 15:41:11,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14037,mrhaandi,2021-05-19 09:30:10,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14037,mrhaandi,2021-05-19 11:02:38,JasonGross,@coqbot CI minimize
14037,mrhaandi,2021-05-21 07:33:00,mrhaandi,"@fajb As #14086 is now merged, zify can be simplified.\nFor example, consider Goal forall (n:Z), (n mod n = 0)%Z.. zify creates the assumption n <> 0%Z -> n = (n * q + r)%Z, where n <> 0 is because of the old mod definition. Now, one can use the new Z_div_mod_eq_full to directly have n = (n * q + r)%Z, which could improve performance."
14037,mrhaandi,2021-05-21 09:17:04,fajb,"@fajb As #14086 is now merged, zify can be simplified.\nFor example, consider Goal forall (n:Z), (n mod n = 0)%Z.. zify creates the assumption n <> 0%Z -> n = (n * q + r)%Z, where n <> 0 is because of the old mod definition. Now, one can use the new Z_div_mod_eq_full to directly have n = (n * q + r)%Z, which could improve performance.\n\nSure. If @JasonGross agrees, go ahead! The culprit is div_mod_to_equations_generalize from PreOmega.v."
14037,mrhaandi,2021-05-21 09:29:48,mrhaandi,"Is there a reason for not including ZifyN.v and ZifyNat.v in ZifyInst.v?\n(without setting zify_convert_to_euclidean_division_equations_flag)\nIs it for backward compatibility?\n\nAs you can imagine, lia becomes very powerful. I did not notice major performance regressions, but ci breaks too heavily. There is a lot of code that uses lia in a non-monotone way (i.e. if lia gets stronger, it breaks). So yes, backwards compatibility with anti-patterns."
14037,mrhaandi,2021-05-21 09:39:27,mrhaandi,"Since the new code is opt-in, for the current ci only minimal adjustments are required.\n@silene could you take care of the required flocq adjustments (3 lines) for this (see https://github.com/mrhaandi/flocq/tree/N-Z-div-mod)?\n@spitters could you look at coq-community/math-classes#98 ?"
14037,mrhaandi,2021-05-21 10:18:16,mrhaandi,@fajb would you care to review the proposed additions? It would be great to have this until the deadline to be part of 8.14.\nI also updated zify documentation to mention the new modules.
14037,mrhaandi,2021-05-21 17:52:44,jfehrle,"As you can imagine, lia becomes very powerful. I did not notice major performance regressions, but ci breaks too heavily. There is a lot of code that uses lia in a non-monotone way (i.e. if lia gets stronger, it breaks). So yes, backwards compatibility with anti-patterns.\n\nHow hard would it be to fix the CI jobs that break (difficult or just tedious)?  The idea of keeping lia weaker than it could be seems unfortunate."
14037,mrhaandi,2021-05-21 18:10:25,mrhaandi,"As you can imagine, lia becomes very powerful. I did not notice major performance regressions, but ci breaks too heavily. There is a lot of code that uses lia in a non-monotone way (i.e. if lia gets stronger, it breaks). So yes, backwards compatibility with anti-patterns.\n\nHow hard would it be to fix the CI jobs that break (difficult or just tedious)? The idea of keeping lia weaker than it could be seems unfortunate.\n\nFrom what I have looked at so far, quite tedious. However, I'm not sure whethe"
14037,mrhaandi,2021-05-21 18:24:17,jfehrle,"Makes sense.  Perhaps you would tweak the documentation for lia to make the zify improvements easier to discover, perhaps something like\nPlease see the description of :tacn:`zify` for information on extending `lia` to handle certain more general goals."
14037,mrhaandi,2021-05-21 18:44:00,RalfJung,"It might also be a good idea to have another tactic that has the full preprocessing always enabled, so one doesn't have to wrangle with setting global hooks to get the more powerful behavior."
14037,mrhaandi,2021-05-21 18:47:44,mrhaandi,"It might also be a good idea to have another tactic that has the full preprocessing always enabled, so one doesn't have to wrangle with setting global hooks to get the more powerful behavior.\n\n@fajb wasn't nia supposed to be exactly this, i.e. goal massage + lia?"
14037,mrhaandi,2021-05-21 19:08:02,fajb,"@fajb wasn't nia supposed to be exactly this, i.e. goal massage + lia?\n\nNope. nia is more powerful for non-linear multiplications. It is using the same zify.\nI support @RalfJung proposal of making easily available the best tactic.\nMaybe, a LiaExt.v (or whatever name) doing all the required import?\nPS: I do not think this is a blocking issue for the PR."
14037,mrhaandi,2021-05-21 19:27:30,RalfJung,"Maybe, a LiaExt.v (or whatever name) doing all the required import?\n\nI was imagining literally a separate tactic so that I could use better_lia and lia in the same proof. Or is there no reason to do that?"
14037,mrhaandi,2021-05-21 19:46:17,fajb,"Maybe, a LiaExt.v (or whatever name) doing all the required import?\n\nI was imagining literally a separate tactic so that I could use better_lia and lia in the same proof. Or is there no reason to do that?\n\nCurrently, I would not know how to do it. zify is using all the instances in the context. There is no notion of scope."
14037,mrhaandi,2021-05-22 06:21:15,mrhaandi,"Currently, I would not know how to do it. zify is using all the instances in the context. There is no notion of scope.\n\nMaybe it is unwise to put all instances into typeclass_instances. What about instead having individual hint databases for optional instances? This would allow for a natural notation lia with hint_db where hint_db is a (collection of) corresponding instance databases. Such an approach, as @RalfJung suggests, would allow for multiple lia variations to be uses side by side. Curren"
14037,mrhaandi,2021-05-25 08:40:52,mrhaandi,"For your convenience (and for the deadline) I squashed the commits and rebased the PR on the current master.\nUnfortunately the CI is stalled (and I have not enough rights to restart).\nAlso, there is still one minor overlay for flocq, could anyone besides @silene review and potentially merge it (3 line diff in the PR description) into flocq?\nOtherwise, I'd consider this as good to go (further considerations should be considered in future PRs)."
14037,mrhaandi,2021-05-26 12:34:21,silene,there is still one minor overlay for flocq\n\nIt has been merged.
14037,mrhaandi,2021-05-26 13:54:19,mrhaandi,"there is still one minor overlay for flocq\n\nIt has been merged.\n\nVery nice. Now there are no more overlays. If ci agrees, this can go upstream cleanly."
14037,mrhaandi,2021-05-27 09:55:10,mrhaandi,"@fajb as everything seems in order, would you suggest a merge date?"
14037,mrhaandi,2021-05-27 16:59:58,fajb,Well done @mrhaandi !
12449,SkySkimmer,2020-06-05 10:24:13,Janno,The two failures in Mtac2 are actually just commands that no longer fail because this patch apparently solves other long-standing universe-related issues which we never managed to narrow down sufficiently for a bug report.
12449,SkySkimmer,2020-06-05 11:15:39,Janno,I deleted a previous comment that turned out to not make any sense.\nI am looking at the stdpp failure (in ci-lambda_rust) and it seems like this patch somehow ignores the annotation in (unit : Type) when checking\nRecord mapset (M : Type -> Type) : Type :=\n  Mapset { mapset_car: M (unit : Type) }.\nThis will definitely be very problematic since this kind of annotation is the only way to make certain definitions work when using them on Sets.\nEDIT: my coq/master accepts the record without the Type a
12449,SkySkimmer,2020-06-12 08:44:58,SkySkimmer,"This is because of lbound somehow, inductives are checked with lbound=Set unless template universe polymorphic, in which case lbound=Prop. mapset is template poly, but if you set universe polymorphism you can see that it's accepted again."
12449,SkySkimmer,2020-06-12 08:48:40,SkySkimmer,Let's see with this change
12449,SkySkimmer,2020-06-12 09:15:06,SkySkimmer,"build:quick failure is probably #12503, ie this PR is revealing the bug."
12449,SkySkimmer,2020-06-12 09:20:34,SkySkimmer,"Not sure what's going on with equations\n File ""./tabareau_vec.v"", line 28, characters 0-212:\nWarning: Solve Obligations tactic returned error: Abstracting over the terms\n""S n"", ""cons a v"" and ""X"" leads to a term\nfun (n0 : ℕ E) (v0 : Vec E A n0) (X0 : vector_param E A n0 v0) =>\nlet H := CoreTactics.block in\nlet H0 := CoreTactics.block in\nparam_vector_vcons_graph E A a n v X0 (param_vector_vcons E A a n v X0)\nwhich is ill-typed.\nReason is: Illegal application: \nThe term ""param_vector_vcons"" of typ"
12449,SkySkimmer,2020-06-15 12:45:58,SkySkimmer,@Janno can you get to the Coq call this week to talk about this stuff?
12449,SkySkimmer,2020-06-15 12:48:27,Janno,"Yes, I'll make time!"
12449,SkySkimmer,2020-06-15 17:29:08,mattam82,I will try and give a look to the equations problem before the call.
12449,SkySkimmer,2020-06-19 13:57:54,Janno,"It seems to me that this branch actually minimizes fewer things to Set than master. I know this came up in Wednesday's weekly call but I didn't realize how little it minimizes. In particular, the example I used in #12414 is no longer minimized even when map is instantiated with actual Sets:\nSet Universe Polymorphism.\nSet Printing Universes.\nInductive list {T} : Type := | cons (t : T) : list -> list. (* who needs nil anyway? *)\nArguments list : clear implicits.\n\nFixpoint map {A B} (f: A -> B) (l "
12449,SkySkimmer,2020-06-19 15:53:14,Janno,"Your latest changes are certainly much better than the state I tested when I wrote the comment above: 2000 versus 700 universe constraints from three tiny Mtac2 tactics dealing with Prop.\nI don't yet have the numbers for master (I need to create yet another new opam switch) but I already see Set in quite a few places where I know it didn't show up before.\nEDIT: I should mention that it does break (as in actually breaking, not fixing Fails) Mtac2 in some places but I don't have any idea yet what'"
12449,SkySkimmer,2020-06-19 16:17:32,Janno,"tests/dummylang.v can be ""fixed"" by making stepNdo, stepNdo, and stepIfTrue universe polymorphic. This problem also came up in a previous attempt at improving minimzation.\nThere is an additional failure in tests/bugs.v which is also something that came up before, namely failing typeclass search for an instance of Seq. This time though I can't solve it with Hint Extern 0 (Seq _ _) => apply _ : typeclass_instances which did work last time.\nI would consider both of them real bugs for now. I'll have"
12449,SkySkimmer,2020-06-19 16:20:57,Janno,"Actually, I was wrong about bugs.v. I simply misremembered the workaround. Adding\nHint Extern 0 (Seq _ _ _) => apply seq_one : typeclass_instances.\nbefore the failing line in bugs.v does ""solve"" the problem.."
12449,SkySkimmer,2020-06-19 20:35:02,SkySkimmer,"Metacoq error looks like a classic ""we minimised too much""\n File ""./demo.v"", line 234, characters 0-8:\nError: Universe inconsistency. Cannot enforce MetaCoq.Examples.demo.138 =\nSet because Set < MetaCoq.Examples.demo.138."
12449,SkySkimmer,2020-06-19 22:01:25,Janno,"Metacoq error looks like a classic ""we minimised too much""\n\nMaybe. But it's suspicious that the failure goes away when you hoist out the preceding  argument to MetaCoq Run into a definition.\nDefinition bla :=\nt <- tmLemma ""foo4"" nat;;\n                     tmDefinition ""foo5"" (t + t + 2).\n\nMetaCoq Run (bla).\nNext Obligation.\n  exact 3.\nDefined.\nBoth Mtac2 failures happen in our MProof environment and Mtac2 also has a Mtac Do command which is very similar in spirit to Metacoq Run. I've observed ma"
12449,SkySkimmer,2020-06-22 12:54:06,SkySkimmer,Bench results (had to split up due to bignum issues):\nhttps://ci.inria.fr/coq/view/benchmarking/job/benchmark-part-of-the-branch/958/console\nhttps://ci.inria.fr/coq/view/benchmarking/job/benchmark-part-of-the-branch/959/console\nhttps://ci.inria.fr/coq/view/benchmarking/job/benchmark-part-of-the-branch/961/console\n|-----------------------------+-------------------------+------------------------------------------+------------------------------------------+-----------------------------+------------
12449,SkySkimmer,2020-06-22 13:47:07,Janno,"Is there nothing that won't slow down coq-engine-bench? Also, how does its time go up that much when its instruction count goes down by a statically significant percentage (0.19% outside of the usual noise range for CPU instructions, in my experience). If that trend continues then eventually it will execute 0 instructions but require infinite time for that.. I am really beginning to dislike that particular benchmark. :D\nMost other projects seem to benefit from this change. It does make me think "
12449,SkySkimmer,2020-06-22 13:54:43,ppedrot,"@Janno coq-engine-bench has quite a high variance compared to other devs in the bench, it might just be noise."
12449,SkySkimmer,2020-06-22 14:14:49,JasonGross,"I suspect that either this change results in more universes, or else it's just noise (I don't believe there's any code in coq-engine-bench that stresses universes).  Could we get a breakdown by file in coq-engine-bench?"
12449,SkySkimmer,2020-06-22 14:18:58,ppedrot,The bench has already garbage-collected the metadata
12449,SkySkimmer,2020-06-22 14:19:42,ejgallego,"The bench has already garbage-collected the metadata\n\nSeems too aggressive to me, can we tweak this on coq-bench?"
12449,SkySkimmer,2020-06-22 14:23:32,ppedrot,"@ejgallego I cannot agree more, but unfortunately I have no idea of the process responsible for the cleanup. It doesn't seem to appear in the crontab..."
12449,SkySkimmer,2020-06-22 14:31:43,ejgallego,"@ejgallego I cannot agree more, but unfortunately I have no idea of the process responsible for the cleanup. It doesn't seem to appear in the crontab...\n\nLet's open an issue in coq-bench and hope we can figure out."
12449,SkySkimmer,2020-06-22 16:24:02,gares,"IIRC it is a Jenkins job, not a Cron one"
12449,SkySkimmer,2020-07-01 09:21:53,Janno,"@SkySkimmer I can't stop wondering about the failures in Mtac2 and MetaCoq. Assuming the PR actually minimizes too much, how likely is it that the only failures in all of Coq's CI and in the benchmark suite are plugins that a) define their own vernacular commands/proof environments, b) do their own typechecking for these commands/proof environments, and c) (at least in the case of Mtac2) only fail in those custom commands/proof environments? My gut feeling is that we'd see other failures in othe"
12449,SkySkimmer,2020-07-01 14:03:20,SkySkimmer,"You're right, there's something wrong. I can't figure it out though."
12449,SkySkimmer,2020-07-01 15:05:51,Janno,"My comment was not entirely correct: the failure in bugs.v in Mtac2 does not disappear outside of the MProof environment. However, since it can be worked around with\nHint Extern 0 (Seq _ _ _) => apply seq_one : typeclass_instances.\nI am inclined to think that it's a problem with typeclass search maybe?"
12449,SkySkimmer,2020-07-01 16:55:26,Janno,"EDIT: ignore content of this comment. It's not the same root cause.\nI think I have a minimal example of the typeclass search failure in bugs.v:\nSet Universe Polymorphism.\nAxiom M : Type -> Prop.\nAxiom raise : forall {T}, M T.\n\nClass Seq (B C : Type) :=\n  seq : M B.\nArguments seq B C _ : clear implicits.\n\nInstance seq_one {B} : Seq B (M B) := raise.\n\n(* explicit instance *)\nPolymorphic Definition aux@{u u0 +} : M unit := seq@{u u0} _ unit seq_one.\n\n(* implicit instance *)\nFail Polymorphic Definit"
12449,SkySkimmer,2020-07-02 09:08:48,Janno,"Okay, I finally managed to actually, really, definitely isolate the specific failure in bugs.v: #12623. I hope.."
12449,SkySkimmer,2020-07-02 13:37:06,Janno,"The remaining Mtac2 failure in dummylang.v is because monomorphic universes are always larger than Set (at least I remember that being true). Mtac2's T.apply tactic has no special case for applying lemmas whose conclusion is a proposition. The case for Type was general enough, even in monomorphic settings, because Props never had their universes minimized to Set.\nIt's possible that this needs to be fixed by adding a new pattern (make some sort of sense) or by manually unifying some universes tha"
12449,SkySkimmer,2020-07-21 08:14:24,mattam82,I'm trying to figure out where the MetaCoq failure comes from
12449,SkySkimmer,2020-07-21 09:30:33,mattam82,"I think my fix will be entirely backwards compatible, let's wait for MetaCoq's CI."
12449,SkySkimmer,2020-07-21 10:08:21,mattam82,"Indeed, this fixes the problem in MetaCoq. @SkySkimmer you might want to rebase and relaunch the CI now :)"
12449,SkySkimmer,2020-07-21 10:09:35,SkySkimmer,rebased\nI still feel it's strange that it failed at Qed and not earlier.
12449,SkySkimmer,2020-07-21 11:31:22,SkySkimmer,"New error:\nFile ""./theories/PCUICSafeChecker.v"", line 642, characters 9-21:\nError: Cannot infer the implicit parameter T of check_eq_nat whose type is\n""Set -> Type""\n\n(the monomorphic case in https://github.com/MetaCoq/metacoq/blob/1b602b229d116a8e93b8de66a3477cc4e551ee82/safechecker/theories/PCUICSafeChecker.v#L638-L658)"
12449,SkySkimmer,2020-07-21 12:03:01,mattam82,Fixed now!
12449,SkySkimmer,2020-07-21 12:14:04,Janno,I know I am the one pushing for this but these annotations worry me. Is there anything general that could be documented to make sure other people running into this in the future know what to do?\nI am preparing the fix for Mtac2's dummylang.v. What shall we do with the other failure that's blocked on #12623?
12449,SkySkimmer,2020-07-21 13:16:50,mattam82,"rebased\nI still feel it's strange that it failed at Qed and not earlier.\n\nThat's because it's only when we minimize the tmDefinition that we find that @Bind had a constraint that was too strict, I think."
12449,SkySkimmer,2020-07-21 13:24:51,mattam82,"It is clearly a more agressive ""Mininization ToSet"", which loses solutions. The rule of thumb is: if you start instantiating some type arguments of a universe polymorphic definition with Prop's, it will instantiate the related universe binders with Set (same as instantiating @id@{?i} nat turn ?i := Set), so you should be explicit if you want to maintain polymorphism, and then there will remain Prop, Set <= i constraints."
12449,SkySkimmer,2020-07-21 13:29:33,gares,"This looks more and more like having a real binder for poly unis, which is good I believe."
12449,SkySkimmer,2020-07-21 13:43:12,SkySkimmer,This looks more and more like having a real binder for poly unis\n\nWhat does that mean?
12449,SkySkimmer,2020-07-21 17:36:32,gares,"My reading of the proposed patches (to repair CI) is to use an explicit binder, and it seems to play two roles:\n\nbe sure about the arity\nforce the explicitly quantified universes to stay quantified (not ""optimized"" away)\n\nThis is what any other binder does, btw, hence my comment.\nMy impression is that the more the minimization heuristic gets aggressive, the more it looks like ""if you bind by hand it is quantified, otherwise it is not"". I believe this is good, since it can actually be explained. "
12449,SkySkimmer,2020-09-21 11:37:12,SkySkimmer,"We talked and had a new idea for solving #12623, let's see how it goes on the real deal."
12449,SkySkimmer,2020-09-22 08:24:02,SkySkimmer,Looks like we depend on presplit defining applied evars to be lambdas due to some heuristic caring about the difference between arguments vs evar instance. ie the difference in\nCheck fun n m => eq_refl : (m + n) = (fun a b => _) n m.\nFail Check fun n m => eq_refl : (m + n) = _ n m.\n(real failure eg https://gitlab.com/coq/coq/-/jobs/748414809)
12449,SkySkimmer,2020-09-22 08:24:54,SkySkimmer,@Janno do you have the dummylang fix?
12449,SkySkimmer,2020-09-22 08:47:05,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
12449,SkySkimmer,2020-09-22 08:48:07,SkySkimmer,In the test suite only failure/subterm2 is a real failure. Something to do with not propagating enough information in the known impredicative case with the new patch.
12449,SkySkimmer,2020-09-22 09:47:13,Janno,"@Janno do you have the dummylang fix?\n\nI pushed it to https://github.com/Mtac2/Mtac2/tree/janno/coq-12449\nI don't have the right opam toolchain for coq/master on my machine right now so I can't say for sure that this branch compiles. It should be the right fix, though."
12449,SkySkimmer,2020-09-22 11:37:31,SkySkimmer,dummylang still failing (https://gitlab.com/coq/coq/-/jobs/750548907)
12449,SkySkimmer,2020-09-22 11:41:25,SkySkimmer,And we also get a new metacoq failure https://gitlab.com/coq/coq/-/jobs/750548923 https://github.com/MetaCoq/metacoq/blob/86bbd900711a5e752a60950b1001ddd5a910b912/translations/param_original.v#L444
14179,jfehrle,2021-05-23 17:16:07,Zimmi48,Rebased.
14179,jfehrle,2021-05-23 17:30:34,jfehrle,"I fetched it, thanks!"
14179,jfehrle,2021-05-26 08:22:18,Zimmi48,Heads-up: a new rebase is needed now that the inversion_sigma PR is merged. This one should be relatively easy but let me know if you encounter any difficulty.
14179,jfehrle,2021-05-26 15:02:06,jfehrle,It was very simple.  Only the 2 lines with the .. tacn:: for inversion_sigma were in conflict.
14179,jfehrle,2021-05-29 17:40:29,jfehrle,"Repeating #13892 (comment):\n\nWe need a different name for writing_proofs/inductive.rst because there is already a core/inductive.rst, giving potential for confusion.  I can rename the file when I submit it. (I've already spent an hour or two pulling in changes from tactics.rst in another branch, I don't want to repeat that.)\n\nCan I rename it now?  Suggestions welcome."
14179,jfehrle,2021-05-29 18:09:36,jfehrle,"From #13892 (comment)\n\n@Zimmi48 The ""detailed example of tactics"" chapter contains a section on dependent destruction and dependent induction that would make sense to move to this new page. I didn't do it, leaving it to you to decide whether to do it now or later. (The rest of this chapter is an example of autorewrite that could also be moved close to the documentation of this tactic, and then we would get rid of this strange chapter.)\n\nThat example section is almost 9 screenfuls of text.  Dropp"
14179,jfehrle,2021-05-30 03:23:33,Zimmi48,"Can I rename it now? Suggestions welcome.\n\nYes, as long as this is done in a separate PR (which also fixes doc/sphinx/user-extensions/proof-schemes.rst) and the PR is included into 8.14.0.\nThat being said, I didn't do this renaming myself because:\n\nI didn't get any good suggestion.\nI'm a bit reluctant to introduce a change that will be visible to the users (in the chapter's URL) because of the shortcomings of a development tool. In particular, I would avoid making the URL too long because of thi"
14179,jfehrle,2021-05-30 03:57:10,Zimmi48,"That example section is almost 9 screenfuls of text. Dropping that in the middle of the inductives chapter will break the flow for anyone who's reading/skimming the chapter. I think this should go into an appendix, perhaps with some other long examples, with appropriate hyperlinks. That also (helps) get rid of ""Detailed examples"" in the TOC, which seems out of place. The autorewrite example is much shorter at only about 2 pages. We could drop that in with the tactic description.\n\nSounds good. To"
14179,jfehrle,2021-05-30 04:23:36,Zimmi48,"By needs to be merged today, I meant Sunday (I realize it's still Saturday for you)."
14179,jfehrle,2021-06-05 23:25:58,jfehrle,"@JasonGross I only got up to casetype and did not read below there, except where there were already discussions\n\nI'm in the midst of a good bit of rewording (mainly driven by consolidating the tactic variant information into the main tactic description) before this is really ready for a close review, so you may want to wait a bit before continuing.  I will review all your comments and apply/respond to them shortly."
14179,jfehrle,2021-06-13 21:03:20,jfehrle,"Updated.  I suggest doing a close review only on of the first ~250 lines of reasoning-inductives.rst (up to ""Induction"") in this PR to keep the length of the PR conversation manageable.  Then, for merging, I'll create a separate PR that masks out the changes after line 250 for merging and we can take on the next chunk in yet another PR.  And so forth.\nI suggest reviewing the changes in other files with the initial tranche."
14179,jfehrle,2021-06-14 11:45:01,Zimmi48,Sounds like a good plan.
14179,jfehrle,2021-06-16 04:32:32,jfehrle,Updated.
14179,jfehrle,2021-06-16 22:39:05,jfehrle,"Updated (only changed a few lines).  @Zimmi48, not sure what you want for split/exists."
14179,jfehrle,2021-06-17 22:34:45,jfehrle,Updated.
14179,jfehrle,2021-06-18 17:38:48,Zimmi48,"I will review the ""Induction"" section soon (sorry for misunderstanding where to stop)."
14179,jfehrle,2021-06-19 03:26:00,jfehrle,"I will review the ""Induction"" section soon (sorry for misunderstanding where to stop).\n\nNo, you understood correctly.  If I update things after line 250 you're not obligated to review them now.  We're already up to ~250 comments, that's a lot.  But I think we're converging pretty quickly and will be able to merge the first 250 lines soon."
14179,jfehrle,2021-06-19 19:28:46,jfehrle,Updated.  I included an extra commit with a couple spelling corrections.
14179,jfehrle,2021-06-21 21:01:49,jfehrle,"Updated.  Perhaps just injection_intropattern to figure out.\nFor some words like ""nontrivial"", there is generally no dash after ""non"" according to the dictionary.  I suppose it's just that over time, writers drop the hyphen from the most common ""non-*"" words.  I fixed these.\nAlso, FWIW I earlier created two ""Review #4"" commits.  Not sure if that confused your review process."
14179,jfehrle,2021-06-22 00:04:28,coqbot-app,"Hey, I have detected that there were CI failures at commit 9bf3aa0 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 147f4da succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14179,jfehrle,2021-06-22 13:19:17,Zimmi48,Not sure if that confused your review process.\n\nIt didn't.
14179,jfehrle,2021-06-22 17:00:54,jfehrle,"Updated.  If the first part is ready to merge, I'll create a separate PR that masks out changes after line 250."
14179,jfehrle,2021-06-23 17:45:56,jfehrle,Updated.
14179,jfehrle,2021-06-23 18:22:51,Zimmi48,Cool! Can you prepare the PR restricted to the first 250 lines?
14179,jfehrle,2021-06-23 20:54:10,jfehrle,"Updated.  If you have no objections to the last commit, I will squash once more.  I'll open a new PR for the next chunk shortly."
14179,jfehrle,2021-06-23 20:59:37,jfehrle,"Actually, just look at the overall changes to reasoning-inductives.rst after line 250 and the change to doc_grammar.ml in the last commit.  If anyone runs make doc_gram_rsts it will update the syntax for some tactics after line 250.  So let's hope no one does that..."
14179,jfehrle,2021-06-24 13:28:48,Zimmi48,"You probably didn't intend to leave two sections with almost the same name: ""Equality of inductive types"" and ""Equality and inductive sets""."
14179,jfehrle,2021-06-24 17:28:47,jfehrle,"You probably didn't intend to leave two sections with almost the same name: ""Equality of inductive types"" and ""Equality and inductive sets"".\n\nIntend?  No--didn't even think about it.  Since more-distinct titles don't come to mind immediately, I just removed the added title.  We can address that in the next PR."
14179,jfehrle,2021-06-24 17:30:55,jfehrle,Updated.
14179,jfehrle,2021-06-25 16:39:21,jfehrle,Updated and squashed.
14179,jfehrle,2021-06-26 14:59:06,Zimmi48,@coqbot merge now
14179,jfehrle,2021-06-26 15:57:08,jfehrle,Hurray!
12867,ppedrot,2020-08-20 15:52:13,coqbot,"For your complete information, the job test-suite:4.11+trunk+dune in allow failure mode has failed for commit a69c41c: Migrate bench to gitlab CI"
12867,ppedrot,2020-08-21 14:46:10,ppedrot,Bench:\n┌─────────────────────────────┬─────────────────────────┬─────────────────────────────────────────────┬─────────────────────────────────────────────┬────────────────────────────────┬───────────────────┐\n│                             │      user time [s]      │                 CPU cycles                  │              CPU instructions               │     max resident mem [KB]      │    mem faults     │\n│                             │                         │                              
12867,ppedrot,2020-08-21 14:59:03,coqbot,"For your complete information, the job test-suite:4.11+trunk+dune in allow failure mode has failed for commit 72500ec: Use a map function instead of a fold when freezing summaries."
12867,ppedrot,2020-08-21 15:26:50,ppedrot,This is even more ironic given that most calls come from Vernacinterp.interp_gen and that literally all callers of that function immediately drop the frozen summary that it returns...
12867,ppedrot,2020-08-21 15:36:08,coqbot,"For your complete information, the job test-suite:base+async in allow failure mode has failed for commit 72500ec: Use a map function instead of a fold when freezing summaries."
12867,ppedrot,2020-08-21 15:36:36,coqbot,"For your complete information, the job build:base+async in allow failure mode has failed for commit 72500ec: Use a map function instead of a fold when freezing summaries."
12867,ppedrot,2020-08-24 08:06:22,ejgallego,This is even more ironic given that most calls come from Vernacinterp.interp_gen and that literally all callers of that function immediately drop the frozen summary that it returns...\n\nThe API is used by a couple of document servers but they are not in-tree yet. Do you know which summary is the heavy one? We could actually handle it functionally thus avoiding the freeze overhead entirely.
12867,ppedrot,2020-08-25 10:07:49,SkySkimmer,The API is used by a couple of document servers but they are not in-tree yet.\n\nCan't they call freeze on their side?
12867,ppedrot,2020-08-25 10:41:11,ejgallego,"Can't they call freeze on their side?\n\nThat would require exposing quite a bit of internals; you cannot make the API lazy either due to the imperative nature. Also, the STM has to call freeze anyways later, there is a reason both the newer doc managers do use the provided state.\nIMHO we should minimize the amount of stuff stored in the summary."
12867,ppedrot,2020-08-25 13:17:05,gares,IMHO we should minimize the amount of stuff stored in the summary.\n\nHow? What can be removed in your opinion?
12867,ppedrot,2020-08-25 13:44:30,ppedrot,"The problem here is not so much the raw volume of stuff stored, because entry-wise most freezes are a literal pointer dereferenciation. Rather, the number of summary entries is the cause of the problem. But once again, this is the tip of the iceberg, as observed in related bugs the STM introduces a non-trivial overhead in batch mode that should be removed."
12867,ppedrot,2020-08-25 16:11:19,ejgallego,"Indeed I agree with @ppedrot , the way things are handled in the stm seem suspicious.\nRegarding reducing the number of summary entries, for example:\n\nthe nametab could be passed functionally\nditto for options, or at least the could be made into a single map\nsome misc stuff really don't need to be stored globally\n\njust consolidating the options would reduce the number of summary objects quite a lot."
12867,ppedrot,2020-08-26 13:39:57,ppedrot,In any case this very PR is quite trivial and needs an assignee.
12867,ppedrot,2020-08-27 11:28:14,SkySkimmer,@coqbot: merge now
12984,herbelin,2020-10-26 11:22:57,RalfJung,"Importation of notations is made more inline with the expected behavior of Import\n\nFWIW, given the consequences for Iris, I disagree that this is expected behavior. This change makes specializing notation essentially impossible: for example, for a project using Utf8 notation, there is no good way to have any notation with a top-level forall:\n\nAs that Iris change shows, for that notation to work, the specialized notation needs to be imported last. This means every client, transitively throughout "
12984,herbelin,2020-10-26 11:31:50,RalfJung,"To take a step back: currently, notation printing feels very fragile. Some Iris notation sometimes fails to print, and I have spent some hours and then given up figuring out where that comes from and instead just randomly reordered imports until it works. (I also entirely failed to minimize this problem or even reproduce it properly without a crazy dependency chain, which is why I never got around to make a bugreport.) The current conclusion is that we give very specific import order advice to o"
12984,herbelin,2020-10-26 11:59:39,herbelin,"Am I right that with this PR, that will print # True instead? That seems to be what happens on the Iris side.\n\nI did not double-checked by testing but this is what should happen yes.\nI'm otherwise mostly agreeing with your analysis.\nActually, after having fallen on this problem, I made #12986 which orders notation by precision. I'll try to experiment it on Iris to see what it gives. One the problem is that to experiment, it is not only about compiling but also about interactively using the featu"
12984,herbelin,2020-10-26 13:04:22,RalfJung,"Actually, after having fallen on this problem, I made #12986 which orders notation by precision. I'll try to experiment it on Iris to see what it gives.\n\nThat sounds great!\n\nActually, after having fallen on this problem, I made #12986 which orders notation by precision. I'll try to experiment it on Iris to see what it gives. One the problem is that to experiment, it is not only about compiling but also about interactively using the feature. So would you eventually be ok to work with a version of"
12984,herbelin,2020-10-27 17:54:02,herbelin,"Actually, after having fallen on this problem, I made #12986 which orders notation by precision. I'll try to experiment it on Iris to see what it gives. One the problem is that to experiment, it is not only about compiling but also about interactively using the feature. So would you eventually be ok to work with a version of Coq providing #12986 and give feedback on whether this is a good strategy or not?\n\nI can offer to look through some of our files with that patch -- but I think our printing "
12984,herbelin,2020-10-27 17:59:50,herbelin,"For canonical structures at least, import order does not matter, so Export of just those is never a problem. The same might be true with notation once we have something like #12986 (and maybe a way to give notation a ""printing priority"" to break ties?). But for names the ""last import wins"". I think I'd be fine having to directly Import every library that provides a name that I use in the current .v file (i.e., work as if there was no Export anywhere), but doing that for notation and canonical st"
12984,herbelin,2020-10-27 18:26:49,RalfJung,"So, would you be courageous and try to beta-test the #12986 branch on a daily basis?\n\nChanging over all my switches would take a bit, but I can go through some of our developments and see if printing seems to still work. Cc @robbertkrebbers  -- we talked about this just earlier today.\n\nSo, you suggesting a variant of @SkySkimmer's #11820 but exporting instead only side effects?\n\nEssentially. Or rather, exporting only exporting things that (with some reasonable discipline) can be made independent"
12984,herbelin,2020-10-29 11:40:18,RalfJung,(wrong thread)
12984,herbelin,2020-10-29 14:42:08,herbelin,"@herbelin could you add the testcase I proposed on the other PR?\n\nDone\n\nI have used this (specifically, commit f995f87) yesterday for work on a large Iris-based project and so far I have not noticed anything strange.\n\nOK, then I rebased #12984 on top of this one. The guess is that Iris does not need a change then.\nIf someone from MathComp could give a feedback on whether they think that giving priority to finer notations (rather than order of declaration) may break some use cases, that would be "
12984,herbelin,2020-11-14 14:39:31,Zimmi48,"It's hard reviewing the doc for this PR independently of the one of #12986. If, as I understood, this PR needs #12986 to work, what about actually rebasing this PR on top of the other like you said you did?"
12984,herbelin,2020-11-14 14:46:38,herbelin,"If, as I understood, this PR needs #12986 to work\n\nStrictly speaking they are independent, but the success of Iris CI with this PR is permitted by #12986.\n\nwhat about actually rebasing this PR on top of the other like you said you did?\n\nOK, done."
12984,herbelin,2020-11-16 11:20:34,gares,@herbelin I agree with @Zimmi48 and this should be merged together with #12986 so I'm assigning to both.\nPlease try to address the last concern by @RalfJung
12984,herbelin,2020-11-16 14:19:14,gares,Can we do a last round of chagelog cleanup? Then we merge these two PRs!
12984,herbelin,2020-11-16 16:21:32,gares,"I'd like to merge this one and to pull the other one in as a side effect, please put here the most up to date commits of both"
12984,herbelin,2020-11-16 16:29:38,herbelin,"I'd like to merge this one and to pull the other one in as a side effect, please put here the most up to date commits of both\n\nOnly one change log for both?"
12984,herbelin,2020-11-16 16:31:03,gares,"As you prefer, the two PR work in tandem (and the changelog messages as well).\nI was just warning that I won't merge the other one, so if it contains a better message, it will be lost."
12984,herbelin,2020-11-16 16:43:57,herbelin,"As you prefer, the two PR work in tandem (and the changelog messages as well).\n\nI kept two change logs (and removed ""experimental"")."
12984,herbelin,2020-11-16 16:45:26,gares,"Great, I'll wait for CI to check the rst syntax and merge"
12984,herbelin,2020-11-16 17:36:07,gares,"Iris has an error which apparently was not there before:\ntests/heap_lang2.vo (real: 4.41, user: 1.87, sys: 0.29, mem: 608336 ko)\n--- tests/heap_lang2.ref	2020-11-13 08:41:12.000000000 +0000\n+++ /tmp/tmp.bmeNJgaBVi	2020-11-16 17:31:19.000000000 +0000\n@@ -23,8 +23,11 @@\n   heapG0 : heapG Σ\n   fun1, fun2, fun3 : expr\n   ============================\n-  {{{ True }}}\n-    let: ""val1"" := fun1 #() in\n-    let: ""val2"" := fun2 ""val1"" in\n-    let: ""val3"" := fun3 ""val2"" in if: ""val1"" = ""val2"" then ""val"" els"
12984,herbelin,2020-11-16 17:41:52,herbelin,That's strange. I'm investigating.
12984,herbelin,2020-11-17 07:09:38,herbelin,"I thought I had checked the Iris printing test suite with both #12984 and #12986 together and that it worked. I mixed up the tests apparently.\nI improved the inclusion test in case of two notations with binders, one binder being bound in the notation but not the other.\nI also fixed a sordid bug in the function computing the ordering (the variable name used in the iterator of recursive notations is a name local to the recursive binder subterm; it must be registered dynamically as a notation varia"
12984,herbelin,2020-11-17 07:23:36,gares,"Iris is now passing but if you want that we take more time we can also postpone to 8.14 (giving time for more documentation and so on).\n\nFine with me, but this would mean to also postpone #12986 . Are you OK with that?"
12984,herbelin,2020-11-17 08:29:13,herbelin,"Fine with me, but this would mean to also postpone #12986 . Are you OK with that?\n\nThis would also mean postponing #12324 (which anyway did not attract enough feedback on the syntax yet).\nI'm personally ok with it. It is more to users to tell."
12984,herbelin,2020-11-17 19:53:27,herbelin,... giving time for more documentation and so on ...\n\nI made a new pass on the notation comparison function which I'm reasonably satisfied of.\nCurrent failures are apparently related to overlays waiting to be merged for #12653.
12984,herbelin,2020-11-19 13:53:17,gares,@coqbot merge now
12984,herbelin,2020-11-19 14:05:09,gares,"FTR these 2 PRs were discussed in a Coq Call, CI failure on elpi is spurious (a rebase would fix it)"
12449,SkySkimmer,2020-09-22 11:46:24,Janno,dummylang still failing (https://gitlab.com/coq/coq/-/jobs/750548907)\n\nI'll try to set up the right opam switches later today.
12449,SkySkimmer,2020-09-22 21:04:42,Janno,"I forgot to make the tactics in dummylang universe polymorphic. That failure was expected and is fixed now.\nThere is a new failure, though, which I do not have time to fully understand. The fix is simple (pose in proof script needs to be moved into a top-level definition) but I have no idea what is wrong there. Still, Mtac2/janno/coq-12449 now builds against this your branch."
12449,SkySkimmer,2020-09-25 12:16:43,SkySkimmer,"The current metacoq error (https://gitlab.com/coq/coq/-/jobs/755393312#L5480 https://github.com/MetaCoq/metacoq/blob/d26e1c2048f3c62d60ceaa5025eeb14d9f23b0fa/translations/param_generous_packed.v#L167) is a universe inconsistency after unsetting univ checking, so seems due to incomplete type_in_type."
12449,SkySkimmer,2020-09-25 12:22:02,SkySkimmer,See eg #13086
12449,SkySkimmer,2020-09-25 13:34:56,SkySkimmer,Needs some cleanup but the usual suspects are passing.
12449,SkySkimmer,2020-09-28 13:03:11,SkySkimmer,I'm putting the type-in-type stuff in a separate PR #13087
12449,SkySkimmer,2020-10-09 09:50:03,SkySkimmer,Benching https://gitlab.com/coq/coq/-/jobs/782155231
12449,SkySkimmer,2020-10-10 09:00:50,SkySkimmer,┌─────────────────────────────┬─────────────────────────┬─────────────────────────────────────────────┬─────────────────────────────────────────────┬────────────────────────────────┬───────────────────┐\n│                             │      user time [s]      │                 CPU cycles                  │              CPU instructions               │     max resident mem [KB]      │    mem faults     │\n│                             │                         │                                     
12449,SkySkimmer,2020-10-12 13:11:53,mattam82,@coqbot merge now
12449,SkySkimmer,2020-10-12 13:11:54,coqbot-app,@mattam82: You can't merge the PR because there is no kind: label.
12449,SkySkimmer,2020-10-12 13:13:14,mattam82,"@coqbot merge now\nThis fixes a bug, test-suite and changelog are updated."
12449,SkySkimmer,2020-10-12 13:13:17,coqbot-app,@mattam82: Please take care of the following overlays:\n\n12449-SkySkimmer-minim-prop-toset.sh
12449,SkySkimmer,2020-10-12 13:18:24,mattam82,@Janno can you please merge your 12449 branch? I don't see an attached PR
12449,SkySkimmer,2020-10-12 14:36:41,SkySkimmer,I made Mtac2/Mtac2#309
13895,ana-borges,2021-06-01 13:36:30,coqbot-app,"Hey, I have detected that there were CI failures at commit c5053d5 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 05b67c9 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-interval."
13895,ana-borges,2021-06-02 07:09:34,Zimmi48,@silene We have changed the location of gappa-coq and interval to allow merging the Dune PR when you were not available. But feel free to make the switch back to the official version as soon as they are compatible.
13895,ana-borges,2021-06-02 08:02:37,silene,"Yes, I know, but I have yet to write the fix (and test it, which is the time consuming part). Anyway, I am currently considering removing Interval from the bench, since its master branch will soon require features from Flocq 4."
13895,ana-borges,2021-06-02 14:55:50,Zimmi48,"Anyway, I am currently considering removing Interval from the bench, since its master branch will soon require features from Flocq 4.\n\nIt's also fine to build Flocq twice in CI, one for VST & CompCert and one for Interval.\nHowever, what will be more problematic is for the platform if it suddenly cannot ship anymore CompCert and Interval because they are not compatible with each other. I hope that Xavier will be OK to produce a release compatible with Flocq 4 soon then."
13895,ana-borges,2021-06-02 15:02:55,silene,what will be more problematic is for the platform if it suddenly cannot ship anymore CompCert and Interval because they are not compatible with each other\n\nThis is not really an issue. The platform is not supposed to ship snapshots of master branches. It is supposed to ship properly released versions of the libraries. And those are perfectly compatible. It is just the various master branches which are incompatible.
13895,ana-borges,2021-06-02 15:25:53,silene,"As soon as #14437 is merged, we can rebase and merge this one."
13895,ana-borges,2021-06-02 17:58:52,coqbot-app,"Hey, I have detected that there were CI failures at commit 407371b without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 3ace672 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-interval."
13895,ana-borges,2021-06-06 17:00:40,silene,@coqbot merge now
991,mattam82,2021-07-06 14:38:29,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
991,mattam82,2021-08-06 09:31:48,coqbot-app,"This PR was not rebased after 30 days despite the warning, it is now closed."
12493,ppedrot,2021-06-19 22:55:09,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-19 23:14:50,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-19 23:34:16,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-19 23:54:02,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-20 00:13:45,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-20 00:32:35,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-20 00:52:14,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-20 01:12:33,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-06-20 01:14:43,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor/KamiRiscv.v (from ci-bedrock2) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor"" ""pro"
12493,ppedrot,2021-06-20 06:21:04,coqbot-app,"Hey, I have detected that there were CI failures at commit 01ae7bf without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 533596b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-07-20 13:14:52,coqbot-app,"Hey, I have detected that there were CI failures at commit 8b0be54 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 5b63cf5 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color."
12493,ppedrot,2021-07-20 23:39:01,JasonGross,Hopefully things work better this time @coqbot ci minimize
12493,ppedrot,2021-07-20 23:39:10,coqbot-app,"I have initiated minimization at commit 8b0be54 for the suggested targets ci-bedrock2, ci-color as requested."
12493,ppedrot,2021-07-20 23:44:43,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/color/Util/Relation/RelExtras.v (from ci-color) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(**\nCoLoR, a Coq library on rewriting and termination.\nSee the COPYRIGHTS and LICENSE files.\n\n- Adam Koprowski, 2004-09-06\n- William Delobel, 2005-10-07\n\nThis file provides some basic results concerning relations that were\nmissing in the standard library.\n*)\n\nDeclare ML Module ""ltac_plugin""."
12493,ppedrot,2021-07-20 23:47:38,JasonGross,"Ah, I see, the issue with minimizing ci-color is that the generated name for the proxy constant is sufficiently sensitive to things like ordering of Requires that minimization cannot even get started without changing the error message."
12493,ppedrot,2021-07-21 04:16:27,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor/Consistency.v (from ci-bedrock2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor"" ""processor"" ""-Q"" ""/github/workspace/builds/coq/coq-failing"
12493,ppedrot,2021-08-31 12:45:09,ppedrot,"I'm closing this for now, but keeping the code under my sleeve for some future time."
14819,proux01,2021-09-02 21:34:34,coqbot-app,"Hey, I have detected that there were CI failures at commit bd6bd0d without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit dbe6d3c succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-fiat_crypto, ci-fiat_crypto_legacy, ci-fiat_parsers, ci-metacoq.\nIf you tag me saying @coqbot ci minimize all, I w"
14819,proux01,2021-09-03 00:23:55,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/metacoq/safechecker/theories/PCUICWfReduction.v (from ci-metacoq) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 88KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/metacoq/template-coq/theories"" ""MetaCoq"
14819,proux01,2021-09-03 05:41:11,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/metacoq/safechecker/theories/PCUICWfReduction.v (from ci-metacoq) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 115KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/metacoq/template-coq/theories"" ""MetaCo"
14819,proux01,2021-09-03 08:09:03,Alizter,@Zimmi48 Can you tell coqbot to stop minimizing? Also it might be good to include the command in coqbots message so that it can be done easier.
14819,proux01,2021-09-03 08:10:58,Zimmi48,Done. And agreed.
14819,proux01,2021-09-03 09:39:08,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14819,proux01,2021-09-07 11:06:54,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14819,proux01,2021-09-07 14:33:38,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14819,proux01,2021-09-07 17:01:13,coqbot-app,"Hey, I have detected that there were CI failures at commit 136bd93 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 873de82 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_crypto_legacy.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do "
14819,proux01,2021-09-08 08:36:10,coqbot-app,The job library:ci-fiat_crypto_legacy has failed in allow failure mode\nping @JasonGross
14819,proux01,2021-09-08 09:01:10,Alizter,@coqbot merge now
14819,proux01,2021-09-08 09:01:12,coqbot-app,@Alizter: Please take care of the following overlays:\n\n14819-proux01-rm_deprecated_813.sh
14819,proux01,2021-09-08 10:38:08,Zimmi48,@JasonGross I think this PR was merged before fcl was fixed. I'll disable the comments when fcl fails to avoid spamming every PR.
14819,proux01,2021-09-08 10:43:42,proux01,"@Alizter this was ready, but ideally we should have waited for all the overlays to be merged before merging the PR itself, since all overlays are backward compatible."
14819,proux01,2021-09-08 10:47:14,Alizter,"@proux01 Yes, sorry about that, I should have waited. @Zimmi48 already knows, and is helping me sort it out."
14819,proux01,2021-09-08 10:49:00,proux01,"No worries, there were only two overlays left, so this should be easily fixed."
14819,proux01,2021-09-09 03:26:12,JasonGross,"@Zimmi48 I don't see a fcl overlay, only one for fiat-crypto (non-legacy)..."
14819,proux01,2021-09-09 05:43:05,Zimmi48,"Right, it looks like it was not prepared. Can you merge the fiat-crypto one and see whether you can adapt FCL?"
14819,proux01,2021-09-09 07:47:41,proux01,"@JasonGross indeed, I didn't had time to prepare it before the PR got merged. I guess it amounts to replacing Grab Existential Variables by Unshelve (and reverting the order of the resulting subgoals if there are more than one)."
14819,proux01,2021-09-09 17:01:08,JasonGross,"fcl should be fixed now, so the notifications can be re enabled"
14819,proux01,2021-09-10 12:48:00,Zimmi48,Done.
14328,JasonGross,2021-05-21 18:53:08,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-21 18:53:09,coqbot-app,Error while attempting to find job minimization information:\nCould not find pipeline check for base commit b2431b3.  (Found checks: GitLab CI job pkg:nix:deploy:channel (branch))
14328,JasonGross,2021-05-21 20:52:24,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-21 20:52:33,coqbot-app,"I have initiated minimization at commit af028cf for the suggested targets ci-elpi, ci-mathcomp, ci-cross_crypto as requested."
14328,JasonGross,2021-05-21 20:55:31,coqbot-app,Error: Could not minimize file  (from ci-cross_crypto) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.5MiB file on GitHub Actions Artifacts under build.log)\nefinition_C.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_D.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_E.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_F.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_
14328,JasonGross,2021-05-21 20:55:56,coqbot-app,Error: Could not minimize file  (from ci-elpi) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 2.9MiB file on GitHub Actions Artifacts under build.log)\nTALL theories/derive/projK.glob /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL theories/derive/param1.glob /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL theories/derive/param1_functor.glob /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL th
14328,JasonGross,2021-05-21 20:56:31,coqbot-app,Error: Could not minimize file  (from ci-mathcomp) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 3.3MiB file on GitHub Actions Artifacts under build.log)\nthcomp//ssreflect/.coq-native\nINSTALL ssreflect/.coq-native/Nmathcomp_ssreflect_generic_quotient.cmx /github/workspace/builds/coq/coq-passing/_install_ci/lib/coq//user-contrib/mathcomp//ssreflect/.coq-native\nINSTALL ssreflect/.coq-native/Nmathcomp_ssreflect_order.cmx /github/workspace/builds/coq/coq-passing/_install_ci/l
14328,JasonGross,2021-05-21 21:36:44,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-21 21:36:50,coqbot-app,"I have initiated minimization at commit af028cf for the suggested targets ci-elpi, ci-mathcomp, ci-cross_crypto as requested."
14328,JasonGross,2021-05-21 21:40:04,coqbot-app,Error: Could not minimize file  (from ci-cross_crypto) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.5MiB file on GitHub Actions Artifacts under build.log)\nefinition_C.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_D.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_E.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_F.html  \n  inflating: _install_ci/share/doc/coq/html/stdlib/index_definition_
14328,JasonGross,2021-05-21 21:40:09,coqbot-app,Error: Could not minimize file  (from ci-elpi) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 2.9MiB file on GitHub Actions Artifacts under build.log)\nTALL theories/derive/projK.glob /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL theories/derive/param1.glob /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL theories/derive/param1_functor.glob /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL th
14328,JasonGross,2021-05-21 22:15:03,coqbot-app,"Minimized File  (from ci-mathcomp) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcomp"" ""mathcomp"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-I"" ""/github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcomp"" ""-top"" ""seq"") -*- *)\n(* File reduced by coq-bug-finder from original input, then "
14328,JasonGross,2021-05-21 22:34:28,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-21 22:34:33,coqbot-app,"I have initiated minimization at commit af028cf for the suggested targets ci-elpi, ci-mathcomp as requested."
14328,JasonGross,2021-05-21 22:37:35,coqbot-app,Error: Could not minimize file  (from ci-elpi) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 2.9MiB file on GitHub Actions Artifacts under build.log)\nds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL theories/derive/param1_trivial.glob /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL theories/derive/param2.glob /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL theories/derive/induction.glob /builds/
14328,JasonGross,2021-05-21 23:13:59,coqbot-app,"Minimized File  (from ci-mathcomp) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcomp"" ""mathcomp"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-I"" ""/github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcomp"" ""-top"" ""seq"") -*- *)\n(* File reduced by coq-bug-finder from original input, then "
14328,JasonGross,2021-05-23 12:25:06,JasonGross,@coqbot ci minimize ci-elpi
14328,JasonGross,2021-05-23 12:25:11,coqbot-app,I am now running minimization at commit af028cf on requested target ci-elpi. I'll come back to you with the results once it's done.
14328,JasonGross,2021-05-23 12:29:01,coqbot-app,Error: Could not minimize file /github/workspace/builds/coq/coq-failing/_build_ci/hierarchy_builder/examples/demo2/stage10.v (from ci-elpi) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 2.9MiB file on GitHub Actions Artifacts under build.log)\nnstall_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL theories/derive/param1_trivial.glob /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL theories/derive/param2.glob /builds/coq/coq/_install_ci/lib/coq
14328,JasonGross,2021-05-23 13:30:16,JasonGross,@coqbot ci minimize ci-elpi
14328,JasonGross,2021-05-23 13:30:19,coqbot-app,I am now running minimization at commit af028cf on requested target ci-elpi. I'll come back to you with the results once it's done.
14328,JasonGross,2021-05-23 13:33:48,coqbot-app,Error: Could not minimize file /github/workspace/builds/coq/coq-failing/_build_ci/hierarchy_builder/examples/demo2/stage10.v (from ci-elpi) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 2.9MiB file on GitHub Actions Artifacts under build.log)\nnstall_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL theories/derive/param1_trivial.glob /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL theories/derive/param2.glob /builds/coq/coq/_install_ci/lib/coq
14328,JasonGross,2021-05-23 13:37:09,JasonGross,@coqbot ci minimize ci-elpi
14328,JasonGross,2021-05-23 13:37:12,coqbot-app,I am now running minimization at commit af028cf on requested target ci-elpi. I'll come back to you with the results once it's done.
14328,JasonGross,2021-05-23 13:40:58,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hierarchy_builder/examples/demo2/stage10.v (from ci-elpi) (full log on GitHub Actions)\nMinimized Coq File\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.ssr.ssreflect.\nRequire Coq.ssr.ssrfun.\nRequire Coq.ssr.ssrbool.\nRequire Coq.ZArith.ZArith"
14328,JasonGross,2021-05-23 13:54:05,JasonGross,@coqbot ci minimize ci-elpi
14328,JasonGross,2021-05-23 13:54:08,coqbot-app,I am now running minimization at commit af028cf on requested target ci-elpi. I'll come back to you with the results once it's done.
14328,JasonGross,2021-05-23 13:57:55,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hierarchy_builder/examples/demo2/stage10.v (from ci-elpi) (full log on GitHub Actions)\nMinimized Coq File\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.ssr.ssreflect.\nRequire Coq.ssr.ssrfun.\nRequire Coq.ssr.ssrbool.\nRequire Coq.ZArith.ZArith"
14328,JasonGross,2021-05-23 14:03:52,JasonGross,@coqbot ci minimize ci-elpi
14328,JasonGross,2021-05-23 14:03:54,coqbot-app,I am now running minimization at commit af028cf on requested target ci-elpi. I'll come back to you with the results once it's done.
14328,JasonGross,2021-05-23 14:07:13,coqbot-app,Error: Could not minimize file /github/workspace/builds/coq/coq-failing/_build_ci/hierarchy_builder/examples/demo2/stage10.v (from ci-elpi) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 2.9MiB file on GitHub Actions Artifacts under build.log)\nnstall_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL theories/derive/param1_trivial.glob /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL theories/derive/param2.glob /builds/coq/coq/_install_ci/lib/coq
14328,JasonGross,2021-05-23 14:11:13,JasonGross,@coqbot ci minimize ci-elpi
14328,JasonGross,2021-05-23 14:11:16,coqbot-app,I am now running minimization at commit af028cf on requested target ci-elpi. I'll come back to you with the results once it's done.
14328,JasonGross,2021-05-23 14:14:43,coqbot-app,Error: Could not minimize file /github/workspace/builds/coq/coq-failing/_build_ci/hierarchy_builder/examples/demo2/stage10.v (from ci-elpi) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 2.9MiB file on GitHub Actions Artifacts under build.log)\nnstall_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL theories/derive/param1_trivial.glob /builds/coq/coq/_install_ci/lib/coq//user-contrib/elpi/apps//derive\nINSTALL theories/derive/param2.glob /builds/coq/coq/_install_ci/lib/coq
14328,JasonGross,2021-05-23 14:29:18,JasonGross,@coqbot ci minimize ci-elpi
14328,JasonGross,2021-05-23 14:29:21,coqbot-app,I am now running minimization at commit af028cf on requested target ci-elpi. I'll come back to you with the results once it's done.
14328,JasonGross,2021-05-23 14:33:01,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hierarchy_builder/examples/demo2/stage10.v (from ci-elpi) (full log on GitHub Actions)\nMinimized Coq File\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.ssr.ssreflect.\nRequire Coq.ssr.ssrfun.\nRequire Coq.ssr.ssrbool.\nRequire Coq.ZArith.ZArith"
14328,JasonGross,2021-05-24 12:31:13,JasonGross,"Now that JasonGross/coq-tools#57 is fixed, let's try again\n@coqbot ci minimize"
14328,JasonGross,2021-05-24 12:31:20,coqbot-app,"I have initiated minimization at commit af028cf for the suggested targets ci-elpi, ci-mathcomp as requested."
14328,JasonGross,2021-05-24 12:35:09,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hierarchy_builder/examples/demo2/stage10.v (from ci-elpi) (full log on GitHub Actions)\nMinimized Coq File\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.ssr.ssreflect.\nRequire Coq.ssr.ssrfun.\nRequire Coq.ssr.ssrbool.\nRequire Coq.ZArith.ZArith"
14328,JasonGross,2021-05-24 12:50:22,JasonGross,@coqbot ci minimize ci-elpi
14328,JasonGross,2021-05-24 12:50:25,coqbot-app,I am now running minimization at commit af028cf on requested target ci-elpi. I'll come back to you with the results once it's done.
14328,JasonGross,2021-05-24 12:58:59,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/hierarchy_builder/examples/demo2/stage10.v (from ci-elpi) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hierarchy_builder/tests"" ""HB.tests"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/hierarchy_builder/examples"" ""HB.examples"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/h"
14328,JasonGross,2021-05-24 13:14:15,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcomp/ssreflect/seq.v (from ci-mathcomp) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcomp"" ""mathcomp"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-I"" ""/github/workspace/builds/coq/coq-failing/_build_ci/mathcomp/mathcom"
14328,JasonGross,2021-05-24 18:49:38,JasonGross,For historical purposes: Note that the ci-elpi example is blocked on https://coq.zulipchat.com/#narrow/stream/253928-Elpi-users.20.26.20devs/topic/Inlining.20files.20containing.20.60Elpi.20Accumulate.20File.60/near/240082812
14328,JasonGross,2021-05-26 14:28:17,coqbot-app,"Hey, I have detected that there were CI failures at commit d3cb230 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ac9a310 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-equations, ci-fourcolor, ci-iris, ci-perennial, ci-quickchick."
14328,JasonGross,2021-05-26 19:42:17,JasonGross,@coqbot ci minimize ci-iris
14328,JasonGross,2021-05-26 19:42:17,coqbot-app,I was unable to minimize any of the CI targets that you requested.\nGitLab CI job library:ci-iris (pull request) could not be minimized (Job GitLab CI job library:ci-iris (pull request) is still in progress.)
14328,JasonGross,2021-05-26 21:01:33,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-26 21:01:44,coqbot-app,"I have initiated minimization at commit d3cb230 for the suggested targets ci-equations, ci-fourcolor, ci-iris, ci-perennial, ci-quickchick as requested.\nHowever, you may want to try again once the pipeline for the head commit (d3cb230) finishes."
14328,JasonGross,2021-05-26 21:04:31,coqbot-app,Error: Could not minimize file  (from ci-fourcolor) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.7MiB file on GitHub Actions Artifacts under build.log)\nll_ci/lib/coq/theories/setoid_ring/RealField.vos  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.glob  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.v  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.vo  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.vos  \n  inflating:
14328,JasonGross,2021-05-26 21:04:38,coqbot-app,Error: Could not minimize file  (from ci-equations) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.6MiB file on GitHub Actions Artifacts under build.log)\nting: _build_ci/equations/test-suite/issues/issue91.vos  \n  inflating: _build_ci/equations/test-suite/issues/issue93.v  \n  inflating: _build_ci/equations/test-suite/issues/issue95_1.glob  \n  inflating: _build_ci/equations/test-suite/issues/issue95_1.v  \n  inflating: _build_ci/equations/test-suite/issues/issue95_1.vo  \n 
14328,JasonGross,2021-05-26 21:04:47,coqbot-app,Error: Could not minimize file  (from ci-perennial) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.9MiB file on GitHub Actions Artifacts under build.log)\n\n  inflating: _build_ci/perennial/src/algebra/na_heap.v  \n  inflating: _build_ci/perennial/src/algebra/own_discrete.v  \n  inflating: _build_ci/perennial/src/algebra/partition.v  \n  inflating: _build_ci/perennial/src/algebra/proph_map.v  \n   creating: _build_ci/perennial/src/base_logic/\n  inflating: _build_ci/perennial/s
14328,JasonGross,2021-05-26 21:04:48,coqbot-app,Error: Could not minimize file  (from ci-iris) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.8MiB file on GitHub Actions Artifacts under build.log)\n/theories/.coq-native/Nstdpp_fin_sets.cmi  \n  inflating: _build_ci/stdpp/theories/.coq-native/Nstdpp_fin_sets.cmx  \n  inflating: _build_ci/stdpp/theories/.coq-native/Nstdpp_fin_sets.cmxs  \n  inflating: _build_ci/stdpp/theories/.coq-native/Nstdpp_fin_sets.o  \n  inflating: _build_ci/stdpp/theories/.coq-native/Nstdpp_finite.cmi
14328,JasonGross,2021-05-26 21:05:08,coqbot-app,Error: Could not minimize file  (from ci-quickchick) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.7MiB file on GitHub Actions Artifacts under build.log)\nll_ci/lib/coq/theories/setoid_ring/RealField.vos  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.glob  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.v  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.vo  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.vos  \n  inflating
14328,JasonGross,2021-05-26 22:36:13,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-05-26 22:36:23,coqbot-app,"I have initiated minimization at commit d3cb230 for the suggested targets ci-equations, ci-fourcolor, ci-iris, ci-perennial, ci-quickchick as requested.\nHowever, you may want to try again once the pipelines for the base commit (ac9a310) and head commit (d3cb230) finish."
14328,JasonGross,2021-05-26 22:39:09,coqbot-app,Error: Could not minimize file  (from ci-quickchick) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.7MiB file on GitHub Actions Artifacts under build.log)\nll_ci/lib/coq/theories/setoid_ring/RealField.vos  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.glob  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.v  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.vo  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.vos  \n  inflating
14328,JasonGross,2021-05-26 22:39:30,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/equations/examples/AlmostFull.v (from ci-equations) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 58KiB file on GitHub Actions Artifacts under bug.v)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.extraction.Extrac"
14328,JasonGross,2021-05-26 22:39:35,coqbot-app,Error: Could not minimize file  (from ci-fourcolor) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.7MiB file on GitHub Actions Artifacts under build.log)\nll_ci/lib/coq/theories/setoid_ring/RealField.vos  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.glob  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.v  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.vo  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.vos  \n  inflating:
14328,JasonGross,2021-05-26 22:40:42,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/external/iris/iris/algebra/ofe.v (from ci-perennial) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 69KiB file on GitHub Actions Artifacts under bug.v)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.ssr.ss"
14328,JasonGross,2021-05-26 22:41:47,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/iris/iris/algebra/ofe.v (from ci-iris) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 69KiB file on GitHub Actions Artifacts under bug.v)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.ssr.ssreflect.\nRequire Coq.Cla"
14328,JasonGross,2021-05-26 22:59:53,JasonGross,"@coqbot ci minimize ci-equations, ci-fourcolor, ci-iris, ci-perennial"
14328,JasonGross,2021-05-26 23:00:01,coqbot-app,"I am now running minimization at commit d3cb230 on requested targets ci-equations, ci-fourcolor, ci-iris, ci-perennial. I'll come back to you with the results once it's done.\nHowever, minimization may fail because the pipeline for the base commit (ac9a310) has not yet finished."
14328,JasonGross,2021-05-26 23:02:47,coqbot-app,Error: Could not minimize file  (from ci-fourcolor) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 1.7MiB file on GitHub Actions Artifacts under build.log)\nll_ci/lib/coq/theories/setoid_ring/RealField.vos  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.glob  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.v  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.vo  \n  inflating: _install_ci/lib/coq/theories/setoid_ring/Ring.vos  \n  inflating:
14328,JasonGross,2021-05-26 23:03:37,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/equations/examples/AlmostFull.v (from ci-equations) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 58KiB file on GitHub Actions Artifacts under bug.v)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.extraction.Extrac"
14328,JasonGross,2021-05-26 23:04:31,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/external/iris/iris/algebra/ofe.v (from ci-perennial) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 69KiB file on GitHub Actions Artifacts under bug.v)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.ssr.ss"
14328,JasonGross,2021-05-26 23:17:26,coqbot-app,"Hey, I have detected that there were CI failures at commit d3cb230 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ac9a310 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-equations, ci-fourcolor, ci-iris, ci-perennial, ci-quickchick.\nHowever, you may want to wait until the pipeline for the base co"
14328,JasonGross,2021-05-26 23:19:43,JasonGross,@coqbot ci minimize ci-fourcolor
14328,JasonGross,2021-05-26 23:19:46,coqbot-app,"I am now running minimization at commit d3cb230 on requested target ci-fourcolor. I'll come back to you with the results once it's done.\nHowever, minimization may fail because the pipeline for the base commit (ac9a310) has not yet finished."
14328,JasonGross,2021-05-26 23:24:20,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fourcolor/theories/realcategorical.v (from ci-fourcolor) (full log on GitHub Actions)\nMinimized Coq File\n(* (c) Copyright 2006-2018 Microsoft Corporation and Inria.                  *)\n(* Distributed under the terms of CeCILL-B.                                  *)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation "
14328,JasonGross,2021-05-26 23:34:50,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/iris/iris/algebra/ofe.v (from ci-iris) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/iris/iris/prelude"" ""iris.prelude"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/iris/iris/algebra"" ""iris.algebra"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/iris/iris/si_logic"" ""iris.si_l"
14328,JasonGross,2021-05-27 15:51:25,JasonGross,"@coqbot ci minimize ci-equations, ci-fourcolor, ci-perennial"
14328,JasonGross,2021-05-27 15:51:32,coqbot-app,"I am now running minimization at commit d3cb230 on requested targets ci-equations, ci-fourcolor, ci-perennial. I'll come back to you with the results once it's done."
14328,JasonGross,2021-05-27 15:56:21,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fourcolor/theories/realcategorical.v (from ci-fourcolor) (full log on GitHub Actions)\nMinimized Coq File\n(* (c) Copyright 2006-2018 Microsoft Corporation and Inria.                  *)\n(* Distributed under the terms of CeCILL-B.                                  *)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation "
14328,JasonGross,2021-05-27 15:56:45,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/external/iris/iris/algebra/ofe.v (from ci-perennial) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 69KiB file on GitHub Actions Artifacts under bug.v)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.ssr.ss"
14328,JasonGross,2021-05-27 16:06:04,JasonGross,"@coqbot ci minimize ci-fourcolor, ci-perennial"
14328,JasonGross,2021-05-27 16:06:10,coqbot-app,"I am now running minimization at commit d3cb230 on requested targets ci-fourcolor, ci-perennial. I'll come back to you with the results once it's done."
14328,JasonGross,2021-05-27 16:10:54,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fourcolor/theories/realcategorical.v (from ci-fourcolor) (full log on GitHub Actions)\nMinimized Coq File\n(* (c) Copyright 2006-2018 Microsoft Corporation and Inria.                  *)\n(* Distributed under the terms of CeCILL-B.                                  *)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation "
14328,JasonGross,2021-05-27 16:11:03,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/external/iris/iris/algebra/ofe.v (from ci-perennial) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 69KiB file on GitHub Actions Artifacts under bug.v)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.ssr.ss"
14328,JasonGross,2021-05-27 16:15:22,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/equations/examples/AlmostFull.v (from ci-equations) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/equations/theories"" ""Equations"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/equations/examples"" ""Examples"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib"
14328,JasonGross,2021-05-27 21:25:59,JasonGross,For the historical record: perennial issue could be fixed by mit-pdos/perennial#35; fourcolor issue recorded at JasonGross/coq-tools#60 to be fixed eventually
14328,JasonGross,2021-05-28 14:13:58,coqbot-app,"Hey, I have detected that there were CI failures at commit d3cb230 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit ac9a310 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-equations, ci-fourcolor, ci-iris, ci-perennial, ci-quickchick."
14328,JasonGross,2021-05-28 14:26:40,JasonGross,@coqbot ci minimize ci-perennial
14328,JasonGross,2021-05-28 14:26:46,coqbot-app,I am now running minimization at commit d3cb230 on requested target ci-perennial. I'll come back to you with the results once it's done.
14328,JasonGross,2021-05-28 14:58:16,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/external/iris/iris/algebra/ofe.v (from ci-perennial) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/perennial/src"" ""Perennial"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/perennial/external/stdpp/theories"" ""stdpp"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/pere"
14328,JasonGross,2021-05-28 20:18:30,JasonGross,@coqbot ci minimize ci-fourcolor
14328,JasonGross,2021-05-28 20:18:34,coqbot-app,I am now running minimization at commit d3cb230 on requested target ci-fourcolor. I'll come back to you with the results once it's done.
14328,JasonGross,2021-05-28 20:58:21,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fourcolor/theories/realcategorical.v (from ci-fourcolor) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fourcolor/theories"" ""fourcolor"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/"
14328,JasonGross,2021-06-03 17:30:12,coqbot-app,"Hey, I have detected that there were CI failures at commit a706e26 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 6030bdc succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14328,JasonGross,2021-06-03 17:34:30,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-06-03 17:34:33,coqbot-app,I have initiated minimization at commit a706e26 for the suggested target ci-metacoq as requested.
14328,JasonGross,2021-06-03 17:46:15,coqbot-app,Error: Could not minimize file  (from ci-metacoq) (full log on GitHub Actions)\nbuild log\n++ set -e\n++++ dirname /github/workspace/coqbot-ci.sh\n+++ cd /github/workspace\n+++ pwd\n++ DIR=/github/workspace\n++ echo '::group::install dependencies'\n::group::install dependencies\n++ sudo apt-get update -y\nHit:1 http://security.ubuntu.com/ubuntu bionic-security InRelease\nHit:2 http://archive.ubuntu.com/ubuntu bionic InRelease\nHit:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease\nHit:4 http://arch
14328,JasonGross,2021-06-03 18:05:12,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-06-03 18:05:16,coqbot-app,I have initiated minimization at commit a706e26 for the suggested target ci-metacoq as requested.
14328,JasonGross,2021-06-03 18:15:54,coqbot-app,Error: Could not minimize file  (from ci-metacoq) (full log on GitHub Actions)\nbuild log\n++ set -e\n++++ dirname /github/workspace/coqbot-ci.sh\n+++ cd /github/workspace\n+++ pwd\n++ DIR=/github/workspace\n++ echo '::group::install dependencies'\n::group::install dependencies\n++ sudo apt-get update -y\nHit:1 http://security.ubuntu.com/ubuntu bionic-security InRelease\nHit:2 http://archive.ubuntu.com/ubuntu bionic InRelease\nHit:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease\nHit:4 http://arch
14328,JasonGross,2021-06-14 17:27:50,JasonGross,Let's see if we can get ci-metacoq minimized for #14137 here
14328,JasonGross,2021-06-14 19:04:47,coqbot-app,"Hey, I have detected that there were CI failures at commit aa22999 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 4e41c83 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14328,JasonGross,2021-06-14 19:27:02,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-06-14 19:27:05,coqbot-app,"I have initiated minimization at commit aa22999 for the suggested target ci-metacoq as requested.\nHowever, you may want to try again once the pipeline for the head commit (aa22999) finishes."
14328,JasonGross,2021-06-14 20:39:13,coqbot-app,"Hey, I have detected that there were CI failures at commit aa22999 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 4e41c83 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-metacoq."
14328,JasonGross,2021-06-14 21:30:31,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/metacoq/pcuic/theories/PCUICSigmaCalculus.v (from ci-metacoq) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/metacoq/template-coq/theories"" ""MetaCoq.Template"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/metacoq/pcuic/theories"" "
14328,JasonGross,2021-06-16 18:43:57,JasonGross,Now building for #14253
14328,JasonGross,2021-06-16 21:47:01,coqbot-app,"Hey, I have detected that there were CI failures at commit 910ea1f without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 147f4da succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_parsers."
14328,JasonGross,2021-06-17 19:01:23,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-06-17 19:01:26,coqbot-app,I have initiated minimization at commit 910ea1f for the suggested target ci-fiat_parsers as requested.
14328,JasonGross,2021-06-18 00:18:24,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 63KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fi"
14328,JasonGross,2021-06-18 05:35:14,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 49KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fi"
14328,JasonGross,2021-06-18 10:51:58,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 61KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14328,JasonGross,2021-06-18 15:48:32,JasonGross,"Testing:\n@coqbot resume CI minimize ci-fiat_parsers\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/Bedrock"" ""Bedrock"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-I"" """
14328,JasonGross,2021-06-18 15:48:36,coqbot-app,I am now running minimization at commit 910ea1f on requested target ci-fiat_parsers. I'll come back to you with the results once it's done.
14328,JasonGross,2021-06-18 15:53:11,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\n\nIntermediate Coq File (useful"
14328,JasonGross,2021-06-18 16:08:54,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 66KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14328,JasonGross,2021-06-18 16:40:39,JasonGross,Testing:\n@coqbot resume CI minimize ci-fiat_parsers\ntest.
14328,JasonGross,2021-06-18 16:40:42,coqbot-app,I am now running minimization at commit 910ea1f on requested target ci-fiat_parsers. I'll come back to you with the results once it's done.
14328,JasonGross,2021-06-18 16:44:56,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\ntest.\n\nIntermediate Coq File ("
14328,JasonGross,2021-06-18 21:25:47,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 70KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14328,JasonGross,2021-06-19 02:42:48,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 81KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14328,JasonGross,2021-06-19 07:59:45,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 74KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14328,JasonGross,2021-06-19 13:16:28,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 72KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14328,JasonGross,2021-06-19 18:33:18,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 72KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14328,JasonGross,2021-06-19 23:50:17,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 75KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14328,JasonGross,2021-06-20 05:07:13,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 73KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14328,JasonGross,2021-06-20 06:39:36,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 73KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-"
14328,JasonGross,2021-06-20 15:49:43,coqbot-app,"Hey, I have detected that there were CI failures at commit 910ea1f without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 147f4da succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_parsers."
14328,JasonGross,2021-06-20 16:05:24,JasonGross,@coqbot ci minimize
14328,JasonGross,2021-06-20 16:05:29,coqbot-app,I have initiated minimization at commit 910ea1f for the suggested target ci-fiat_parsers as requested.
14328,JasonGross,2021-06-20 18:34:23,JasonGross,"@coqbot resume ci minimize ci-fiat_parsers\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-q"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/Bedrock"" ""Bedrock"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-I"" ""/github/w"
14328,JasonGross,2021-06-20 18:34:27,coqbot-app,I am now resuming minimization at commit 910ea1f on requested target ci-fiat_parsers. I'll come back to you with the results once it's done.
14328,JasonGross,2021-06-20 18:39:30,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-q"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq"
14328,JasonGross,2021-06-20 18:42:43,JasonGross,"@coqbot resume ci minimize ci-fiat_parsers\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-q"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/Bedrock"" ""Bedrock"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-I"" ""/github/w"
14328,JasonGross,2021-06-20 18:42:47,coqbot-app,I am now resuming minimization at commit 910ea1f on requested target ci-fiat_parsers. I'll come back to you with the results once it's done.
14328,JasonGross,2021-06-20 18:45:49,JasonGross,"@coqbot resume ci minimize ci-fiat_parsers\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-q"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/Bedrock"" ""Bedrock"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-I"" ""/github/w"
14328,JasonGross,2021-06-20 18:45:52,coqbot-app,I am now resuming minimization at commit 910ea1f on requested target ci-fiat_parsers. I'll come back to you with the results once it's done.
14328,JasonGross,2021-06-20 18:47:42,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-q"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq"
14328,JasonGross,2021-06-20 18:51:04,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-q"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq"
14328,JasonGross,2021-06-20 19:00:21,JasonGross,"@coqbot resume ci minimize ci-fiat_parsers\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-q"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/Bedrock"" ""Bedrock"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-I"" ""/github/w"
14328,JasonGross,2021-06-20 19:00:25,coqbot-app,I am now resuming minimization at commit 910ea1f on requested target ci-fiat_parsers. I'll come back to you with the results once it's done.
14328,JasonGross,2021-06-20 19:04:42,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-q"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq"
14328,JasonGross,2021-06-20 19:14:20,JasonGross,"@coqbot resume ci minimize ci-fiat_parsers\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-q"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/Bedrock"" ""Bedrock"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-I"" ""/github/w"
14328,JasonGross,2021-06-20 19:15:54,JasonGross,"@coqbot resume ci minimize ci-fiat_parsers\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-q"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/Bedrock"" ""Bedrock"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-I"" ""/github/w"
14328,JasonGross,2021-06-20 19:40:15,JasonGross,"@coqbot resume ci minimize ci-fiat_parsers\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-q"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/Bedrock"" ""Bedrock"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-I"" ""/github/w"
14328,JasonGross,2021-06-20 19:53:31,coqbot-app,I am now resuming minimization at commit 910ea1f on requested target ci-fiat_parsers. I'll come back to you with the results once it's done.
14328,JasonGross,2021-06-20 19:58:34,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 47KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-q"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-"
14328,JasonGross,2021-06-20 20:10:37,coqbot-app,I am now resuming minimization at commit 910ea1f on requested target ci-fiat_parsers. I'll come back to you with the results once it's done.
14328,JasonGross,2021-06-20 20:16:10,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 47KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option"" ""-q"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-"
14328,JasonGross,2021-06-20 20:42:28,JasonGross,"@coqbot resume ci minimize ci-fiat_parsers\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option,-deprecated-appcontext,-notation-overridden"" ""-R"" ""../../coq-failing/_build_ci/fiat_parsers/src/"" ""Fiat"" ""-Q"" ""."" ""Top"" ""-top"" ""bug_06"" ""-native-compiler"" ""no"" ""-require-import"" ""Coq.Compat.AdmitAxiom"") -*- *)\n(* File reduced by coq-bug-finder from original input, then from 916 lines to 386 lines, then from 507 lines to 948 lines, then from 951 lines to 417 lines, then f"
14328,JasonGross,2021-06-20 20:42:31,coqbot-app,I am now resuming minimization at commit 910ea1f on requested target ci-fiat_parsers. I'll come back to you with the results once it's done.
14328,JasonGross,2021-06-20 21:21:42,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 44KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-"
14328,JasonGross,2021-06-20 21:22:42,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 74KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14328,JasonGross,2021-06-20 21:48:39,JasonGross,"@coqbot resume ci minimize ci-fiat_parsers\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-deprecated-native-compiler-option,-deprecated-appcontext,-notation-overridden"" ""-R"" ""../../coq-failing/_build_ci/fiat_parsers/src/"" ""Fiat"" ""-Q"" ""."" ""Top"" ""-top"" ""bug_08"" ""-native-compiler"" ""no"" ""-require-import"" ""Coq.Compat.AdmitAxiom"") -*- *)\n(* File reduced by coq-bug-finder from original input, then from 916 lines to 386 lines, then from 507 lines to 948 lines, then from 951 lines to 417 lines, then f"
14328,JasonGross,2021-06-20 21:48:43,coqbot-app,I am now resuming minimization at commit 910ea1f on requested target ci-fiat_parsers. I'll come back to you with the results once it's done.
14328,JasonGross,2021-06-20 22:48:51,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 45KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-"
14328,JasonGross,2021-06-21 02:39:33,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 48KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14328,JasonGross,2021-06-21 07:56:33,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 53KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14328,JasonGross,2021-06-21 13:15:02,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 57KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14328,JasonGross,2021-06-21 18:31:59,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 61KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14328,JasonGross,2021-06-21 23:48:43,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 77KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/buil"
14328,JasonGross,2021-06-22 03:41:51,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src/Parsers/Refinement/PossibleTerminalsSets.v (from ci-fiat_parsers) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 71KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-w"" ""-deprecated-appcontext -notation-overridden"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fiat_parsers/src"" ""Fiat"" ""-"
14328,JasonGross,2021-06-22 15:51:20,coqbot-app,"Hey, I have detected that there were CI failures at commit 9e9a763 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 451967a succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_parsers.\nIf you tag me and say ci minimize all, I will additionally minimize the following target (which I do not suggest m"
14328,JasonGross,2021-06-22 16:46:18,coqbot-app,"Hey, I have detected that there were CI failures at commit 9e9a763 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 451967a succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-fiat_parsers.\nIf you tag me saying @coqbot ci minimize all, I will additionally minimize the following target (which I do not su"
14328,JasonGross,2021-06-29 14:50:38,JasonGross,Closing PR because GitHub is bad at long threads
14328,JasonGross,2021-06-29 16:00:11,coqbot-app,"Hey, I have detected that there were CI failures at commit c6473ba without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit f0570d9 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bbv, ci-bedrock2, ci-bignums, ci-compcert, ci-coq_performance_tests, ci-coq_tools, ci-cross_crypto, ci-elpi, ci-equations, ci-f"
12512,ppedrot,2021-07-21 16:38:32,coqbot-app,"Hey, I have detected that there were CI failures at commit 78002f5 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1e4f6b4 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-rewriter.\nHowever, you may want to wait until the pipeline for the base commit (1e4f6b4) finishes."
12512,ppedrot,2021-07-29 17:06:40,coqbot-app,"Hey, I have detected that there were CI failures at commit f3e416a without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit be32447 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-rewriter.\nHowever, you may want to wait until the pipeline for the base commit (be32447) finishes."
12512,ppedrot,2021-08-31 14:52:00,coqbot-app,"Hey, I have detected that there were CI failures at commit fa93758 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit a4f3b64 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-category_theory, ci-rewriter."
12512,ppedrot,2021-08-31 21:07:07,ppedrot,@coqbot ci minimize
12512,ppedrot,2021-08-31 21:07:09,coqbot-app,"I have initiated minimization at commit fa93758 for the suggested targets ci-category_theory, ci-rewriter as requested."
12512,ppedrot,2021-08-31 21:12:31,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/category_theory/Lib/TList.v (from ci-category_theory) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.Bool.Bool.\nRequire Coq.Classes.CEquivalence.\nRe"
12512,ppedrot,2021-09-01 02:24:11,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/rewriter/src/Rewriter/Language/UnderLetsProofs.v (from ci-rewriter) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 65KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-patt"
12512,ppedrot,2021-09-01 04:37:28,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/rewriter/src/Rewriter/Language/UnderLetsProofs.v (from ci-rewriter) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 69KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+deprecated-hint-constr,+fragile-hint-constr,+variab"
13107,SkySkimmer,2021-06-29 22:12:09,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/external/stdpp/theories/vector.v (from ci-perennial) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-ssr-search-moved"" ""-w"" ""-deprecated-hint-without-locality"" ""-w"" ""-deprecated-instance-without-locality"" ""-w"" ""-deprecated-hint-rewrite-without-locality"" ""-w"" ""+deprecated-tactic-notation"" ""-w"" ""-notation-overridden,-redundant-c"
13107,SkySkimmer,2021-07-01 16:59:03,JasonGross,"COQPATH handling should be fixed in the minimizer, @coqbot ci minimize ci-cross_crypto"
13107,SkySkimmer,2021-07-01 16:59:09,coqbot-app,I am now running minimization at commit 7c15938 on requested target ci-cross_crypto. I'll come back to you with the results once it's done.
13107,SkySkimmer,2021-07-01 17:27:36,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/cross_crypto/src/Minimalistic.v (from ci-cross_crypto) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/cross_crypto/src"" ""CrossCrypto"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/cross_crypto/f"
13107,SkySkimmer,2021-07-01 23:17:40,JasonGross,"ci-tlc was an issue with mismatched absolute paths, should be fixed by coq-community/run-coq-bug-minimizer@c5073ca, so let's try again, @coqbot ci minimize ci-tlc"
13107,SkySkimmer,2021-07-01 23:17:44,coqbot-app,I am now running minimization at commit 7c15938 on requested target ci-tlc. I'll come back to you with the results once it's done.
13107,SkySkimmer,2021-07-01 23:20:18,JasonGross,"I bet the bedrock2 minimization issue is actually the same thing, so let's optimistically try @coqbot ci minimize ci-bedrock2"
13107,SkySkimmer,2021-07-01 23:20:22,coqbot-app,I am now running minimization at commit 7c15938 on requested target ci-bedrock2. I'll come back to you with the results once it's done.
13107,SkySkimmer,2021-07-01 23:22:00,coqbot-app,Error: Could not minimize file  (from ci-tlc) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 2.7MiB file on GitHub Actions Artifacts under build.log)\n inflating: _build_ci/tlc/src/LibWf.vos  \n  inflating: _build_ci/tlc/src/Makefile  \n  inflating: _build_ci/tlc/src/Makefile.coq  \n  inflating: _build_ci/tlc/src/open.sh  \n++ popd\n/github/workspace/builds/coq /github/workspace\n++ echo ::endgroup::\n::endgroup::\n++ echo '::group::wrap binaries'\n::group::wrap binaries\n++ for dir 
13107,SkySkimmer,2021-07-01 23:24:16,coqbot-app,Error: Could not minimize file  (from ci-bedrock2) (full log on GitHub Actions)\nbuild log (truncated to last 26KiB; full 3.4MiB file on GitHub Actions Artifacts under build.log)\nq_makefile != *.orig ]]\n++ [[ coq_makefile != *coqdep* ]]\n++ [[ coq_makefile != *coq_makefile* ]]\n++ for i in $(ls)\n++ wrap_file coqc\n++ local file=coqc\n++ [[ coqc != *.orig ]]\n++ [[ coqc != *coqdep* ]]\n++ [[ coqc != *coq_makefile* ]]\n++ [[ coqc != *coqchk* ]]\n++ '[' '!' -f coqc.orig ']'\n++ mv coqc coqc.orig\n++ cat\n++ ch
13107,SkySkimmer,2021-07-02 00:26:24,JasonGross,"Sorry, I missed some things in fixing minimization, but this should now work: @coqbot CI minimize ci-bedrock2 ci-tlc"
13107,SkySkimmer,2021-07-02 00:26:29,coqbot-app,"I am now running minimization at commit 7c15938 on requested targets ci-bedrock2, ci-tlc. I'll come back to you with the results once it's done."
13107,SkySkimmer,2021-07-02 00:39:37,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil/Map/Properties.v (from ci-bedrock2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil"" ""coqutil"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-fail"
13107,SkySkimmer,2021-07-02 01:28:51,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/tlc/src/LibFix.v (from ci-tlc) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-w"" ""-implicit-core-hint-db,-omega-is-deprecated"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/tlc/src"" ""TLC"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq"
13107,SkySkimmer,2021-07-02 02:07:40,JasonGross,"ci-bedrock2 was failing to fully minimize due to JasonGross/coq-tools#67, should be fixed by JasonGross/coq-tools@74f06c5, so let's try ci-bedrock2 one (hopefully) last time.  (Sorry again for all the noise.  Hopefully the test-cases that are successfully minimizing are worth it.)  @coqbot ci minimize ci-bedrock2"
13107,SkySkimmer,2021-07-02 02:07:44,coqbot-app,I am now running minimization at commit 7c15938 on requested target ci-bedrock2. I'll come back to you with the results once it's done.
13107,SkySkimmer,2021-07-02 02:22:08,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil/Map/Properties.v (from ci-bedrock2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil"" ""coqutil"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-fail"
13107,SkySkimmer,2021-07-02 21:57:21,JasonGross,"With a bit of manual help to work around #14587, ci-bedrock2 now minimizes!\nMinimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil/Map/Properties.v (from ci-bedrock2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/deps/coqutil/src/coqutil"" ""coqutil"" ""-"
13107,SkySkimmer,2021-07-03 02:20:01,JasonGross,"Finally tracked down the native compiler issue; it was me forgetting to run eval $(opam env) in the actual script invoking the bug minimizer.   Fixed by coq-community/run-coq-bug-minimizer@8244ace, so now we can have @coqbot ci minimize ci-coq_performance_tests"
13107,SkySkimmer,2021-07-03 02:20:06,coqbot-app,I am now running minimization at commit 7c15938 on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
13107,SkySkimmer,2021-07-03 02:28:22,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-notation-overridden,-undeclared-scope"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments"" "
13969,mattam82,2021-05-26 14:16:08,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/external/iris/iris/algebra/ofe.v (from ci-perennial) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/perennial/src"" ""Perennial"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/perennial/external/stdpp/theories"" ""stdpp"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/pere"
13969,mattam82,2021-05-26 14:17:33,robbertkrebbers,"I think ! should only disallow ?X t1 ... tn, up to casts. But that change might have quite some impact, I'll make a PR to test.\n\nThat seems reasonable. The current approach where projections are treated specially is kind of odd.\nI have no intuition about the impact of this change."
13969,mattam82,2021-05-26 14:19:23,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/quickchick/src/Sets.v (from ci-quickchick) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/quickchick/src"" ""QuickChick"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/ExtLib"" ""ExtLib"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Lt"
13969,mattam82,2021-05-26 14:26:22,JasonGross,"quick chick minimization seems to have worked, I'll have to debug what's up with the other ones"
13969,mattam82,2021-05-26 15:06:33,mattam82,"@robbertkrebbers it was special for projections and cases (the scrutinees were used in both cases). PR #14392 fixes that, let's see how it fares on the CI."
13969,mattam82,2021-05-27 12:51:53,JasonGross,"Iris minimization now works:\nMinimized File /github/workspace/builds/coq/coq-failing/_build_ci/iris/iris/algebra/ofe.v (from ci-iris) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/iris/iris/prelude"" ""iris.prelude"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/iris/iris/algebra"" ""iris.algebra"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/i"
13969,mattam82,2021-05-27 18:19:51,JasonGross,"Equations minimization now works (after fixing a mismatch between byte locations and character locations):\nMinimized File /github/workspace/builds/coq/coq-failing/_build_ci/equations/examples/AlmostFull.v (from ci-equations) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/equations/theories"" ""Equations"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/equ"
13969,mattam82,2021-05-28 16:39:55,JasonGross,"Perennial minimization now works.  fourcolor minimization is blocked on my figuring out how to handle Windows line endings on Linux (there are files checked in with \r\n line endings, coq reports locations in bytes, which means that reading the files in as text won't work).\nMinimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/external/iris/iris/algebra/ofe.v (from ci-perennial) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-Q"" "
13969,mattam82,2021-05-28 20:59:37,JasonGross,"And now fourcolor is minimizable too:\nMinimized File /github/workspace/builds/coq/coq-failing/_build_ci/fourcolor/theories/realcategorical.v (from ci-fourcolor) (full log on GitHub Actions)\nMinimized Coq File\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/fourcolor/theories"" ""fourcolor"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Ltac2"" ""Ltac2"" ""-Q"" ""/github/workspace/build"
13969,mattam82,2021-06-03 15:00:44,mattam82,"@JasonGross Again, really helpful job from the minimizer, thanks!"
13969,mattam82,2021-06-03 17:11:10,JasonGross,Glad it's useful!  Are any of the reduced files good candidates for the test-suite?
13969,mattam82,2021-06-03 18:22:16,coqbot-app,"Hey, I have detected that there were CI failures at commit f0d4b0d without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 9eb622b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following target: ci-perennial."
13969,mattam82,2021-06-04 18:23:04,mattam82,"Glad it's useful! Are any of the reduced files good candidates for the test-suite?\n\nI integrated some already, indeed they're great for that as well."
14718,herbelin,2021-10-14 23:22:03,jfehrle,"I'm now also leaning in the direction to fail if a Require is ambiguous.\n\nIn coqdep would be great, also at startup time for coqc, coqtop and coqidetop.  For extra credit, also warn about the presence of .vo files that lack a corresponding .v file.\n\nSorting with Unicode was discussed above. One would have to rely on a unicode library, and it'd be a bit of work to implement, but why not.\n\nI couldn't tell what that Unicode discussion concluded.  As long as it's not locale-dependent.\n\nI was suggest"
14718,herbelin,2021-10-15 02:40:53,jfehrle,"OTOH, it occurs to me that if the Coq strongly discourages having ambiguous files, then maybe Unicode sorting isn't really necessary."
14718,herbelin,2021-10-19 11:00:21,herbelin,"Option -Q does not require From, if this is what you mean.\n\nI mean for instance I cannot do Require Ltac2 I need to do Require Ltac2.Ltac2 or From Ltac2 Require Ltac2, so even if someone installs user-contrib/foo/Ltac2.vo there is no confusion.\n\nMy own confusion, you're right.\n\n\nI was suggesting a From, because it would then be robust to addition of new possibly-newly-conflicting libraries in user-contrib.\n\nUp to you. That might break some user code, so it would have to be a warning for at least"
14718,herbelin,2021-10-19 11:20:25,herbelin,"Another issue with Unicode is that the loadpath is built by looking at directory names as they are in the file system (that is Unicode-normalized if on a file system that normalizes), but the correspondence with the logical path is done without normalization. Either a normalization function should be used (with applicability to all file systems) or the normalization function of the underlying file system (if any) is used to normalize (e.g. by creating a tmp file and reading its normalized name b"
14579,JasonGross,2021-07-03 01:00:10,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-03 01:05:58,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq."
14579,JasonGross,2021-07-03 01:07:39,JasonGross,@coqbot ci minimize ci-coq_performance_tests
14579,JasonGross,2021-07-03 01:07:42,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-03 01:13:29,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq."
14579,JasonGross,2021-07-03 01:48:40,JasonGross,@coqbot ci minimize ci-coq_performance_tests
14579,JasonGross,2021-07-03 01:48:43,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-03 01:54:03,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq."
14579,JasonGross,2021-07-03 02:11:02,JasonGross,@coqbot ci minimize ci-coq_performance_tests
14579,JasonGross,2021-07-03 02:11:05,coqbot-app,I am now running minimization at commit c6473ba on requested target ci-coq_performance_tests. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-03 02:18:25,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments/rewrite_lift_lets_map.v (from ci-coq_performance_tests) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-notation-overridden,-undeclared-scope"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/coq_performance_tests/PerformanceExperiments"" "
14579,JasonGross,2021-07-06 02:11:03,coqbot-app,"Hey, I have detected that there were CI failures at commit d46ec0b without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 8560c27 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-argosy, ci-compcert."
14579,JasonGross,2021-07-06 17:51:38,JasonGross,@coqbot ci minimize ci-compcert
14579,JasonGross,2021-07-06 17:51:44,coqbot-app,I am now running minimization at commit d46ec0b on requested target ci-compcert. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-06 18:36:12,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/compcert/common/Unityping.v (from ci-compcert) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-undeclared-scope"" ""-w"" ""-omega-is-deprecated"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/lib"" ""compcert.lib"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/common"" ""compcert.common"" ""-R"" ""/github/"
14579,JasonGross,2021-07-06 19:12:12,JasonGross,"@coqbot resume ci minimize ci-compcert\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-undeclared-scope"" ""-w"" ""-omega-is-deprecated"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/lib"" ""compcert.lib"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/common"" ""compcert.common"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/x86_32"" ""compcert.x86_32"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/x86"" ""compcert.x86"" ""-R"""
14579,JasonGross,2021-07-06 19:12:16,coqbot-app,I am now resuming minimization at commit d46ec0b on requested target ci-compcert. I'll come back to you with the results once it's done.
14579,JasonGross,2021-07-06 19:36:35,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/compcert/common/Unityping.v (from ci-compcert) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-undeclared-scope"" ""-w"" ""-omega-is-deprecated"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/lib"" ""compcert.lib"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/compcert/common"" ""compcert.common"" ""-R"" ""/github/"
14579,JasonGross,2021-08-02 18:50:42,JasonGross,Now targeting #14722
14579,JasonGross,2021-08-02 22:11:00,JasonGross,@coqbot ci minimize ci-fiat_crypto
14579,JasonGross,2021-08-02 22:11:07,coqbot-app,I am now running minimization at commit 6bb57d8 on requested target ci-fiat_crypto. I'll come back to you with the results once it's done.
14579,JasonGross,2021-08-03 03:27:59,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto/src/Curves/Weierstrass/Projective.v (from ci-fiat_crypto) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 44KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pa"
14579,JasonGross,2021-08-03 05:04:14,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto/src/Curves/Weierstrass/Projective.v (from ci-fiat_crypto) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 38KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+variable-collision,+omega-is-deprecated,+deprecat"
14579,JasonGross,2021-08-03 13:37:28,coqbot-app,"Hey, I have detected that there were CI failures at commit 0e84f00 without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 7c3f597 succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-color, ci-coq_tools, ci-fiat_crypto, ci-fiat_parsers, ci-math_classes, ci-perennial."
14579,JasonGross,2021-08-03 21:14:19,JasonGross,@coqbot ci-minimize ci-color ci-perennial ci-fiat_crypto
14579,JasonGross,2021-08-03 21:14:23,coqbot-app,"I am now running minimization at commit 0e84f00 on requested targets ci-color, ci-perennial, ci-fiat_crypto. I'll come back to you with the results once it's done."
14579,JasonGross,2021-08-03 21:20:06,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/perennial/src/goose_lang/lib/persistent_readonly.v (from ci-perennial) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\nDeclare ML Module ""ltac_plugin"".\nModule Export AdmitTactic.\nModule Import LocalFalse.\nInductive False := .\nEnd LocalFalse.\nAxiom proof_admitted : False.\nTactic Notation ""admit"" := abstract case proof_admitted.\nEnd AdmitTactic.\nRequire Coq.QArith.Qcanon.\nRequire Coq.ssr"
14579,JasonGross,2021-08-04 00:49:59,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/color/Term/Lambda/LComp.v (from ci-color) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-R"" ""/github/workspace/builds/coq/coq-failing/_build_ci/color"" ""CoLoR"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_install_ci/lib/coq/user-contrib/Bignums"" ""Bignums"" ""-"
14579,JasonGross,2021-08-04 02:31:13,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto/src/Curves/Weierstrass/Projective.v (from ci-fiat_crypto) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 36KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pa"
14579,JasonGross,2021-08-04 03:45:33,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto/src/Curves/Weierstrass/Projective.v (from ci-fiat_crypto) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 34KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+variable-collision,+omega-is-deprecated,+deprecat"
14579,JasonGross,2021-08-14 16:26:51,coqbot-app,"Hey, I have detected that there were CI failures at commit 559eb8c without any failure in the test-suite.\nI checked that the corresponding jobs for the base commit 1a0460b succeeded. You can ask me to try to extract a minimal test case from this so that it can be added to the test-suite.\nIf you tag me saying @coqbot ci minimize, I will minimize the following targets: ci-bedrock2, ci-fiat_crypto."
14579,JasonGross,2021-08-14 16:52:55,JasonGross,@coqbot ci minimize
14579,JasonGross,2021-08-14 16:52:57,coqbot-app,"I have initiated minimization at commit 559eb8c for the suggested targets ci-bedrock2, ci-fiat_crypto as requested."
14579,JasonGross,2021-08-14 22:09:47,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto/src/Curves/Weierstrass/Projective.v (from ci-fiat_crypto) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 46KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pa"
14579,JasonGross,2021-08-14 22:09:47,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor/KamiRiscv.v (from ci-bedrock2) (interrupted by timeout, being automatically continued) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor"" ""pro"
14579,JasonGross,2021-08-14 23:40:50,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/fiat_crypto/src/Curves/Weierstrass/Projective.v (from ci-fiat_crypto) (full log on GitHub Actions)\nMinimized Coq File (truncated to 32KiB; full 38KiB file on GitHub Actions Artifacts under bug.v)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""+implicit-core-hint-db,+implicits-in-term,+non-reversible-notation,+deprecated-intros-until-0,+deprecated-focus,+unused-intro-pattern,+variable-collision,+omega-is-deprecated,+deprecat"
14579,JasonGross,2021-08-15 01:47:43,coqbot-app,"Minimized File /github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor/KamiRiscv.v (from ci-bedrock2) (full log on GitHub Actions)\nMinimized Coq File (consider adding this file to the test-suite)\n(* -*- mode: coq; coq-prog-args: (""-emacs"" ""-q"" ""-w"" ""-deprecated-native-compiler-option"" ""-Q"" ""/github/workspace/cwd"" ""Top"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_build_ci/bedrock2/processor/src/processor"" ""processor"" ""-Q"" ""/github/workspace/builds/coq/coq-failing/_"
14579,JasonGross,2021-09-16 02:16:01,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
14579,JasonGross,2021-10-18 02:18:33,coqbot-app,"The ""needs: rebase"" label was set more than 30 days ago. If the PR is not rebased in 30 days, it will be automatically closed."
